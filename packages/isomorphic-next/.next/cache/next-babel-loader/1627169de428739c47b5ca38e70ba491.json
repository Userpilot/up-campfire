{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/components/Chat/InputName.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport AutoComplete, { AutoCompleteOption } from '../uielements/autocomplete';\nimport UserItem from './InputName.style';\nexport default function (props) {\n  var _this = this;\n\n  var _React$useState = React.useState({\n    value: '',\n    result: []\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var handleSearch = function handleSearch(value) {\n    var result = [];\n\n    if (value) {\n      props.users.forEach(function (user) {\n        if (user.name.toLowerCase().indexOf(value.toLowerCase()) > -1) {\n          result.push(user);\n        }\n      });\n    }\n\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      result: result,\n      value: value\n    }));\n  };\n\n  var onSelect = function onSelect(id) {\n    if (id) {\n      state.result.forEach(function (user) {\n        if (user.id === id) {\n          setState(_objectSpread(_objectSpread({}, state), {}, {\n            value: user.name\n          }));\n        }\n      });\n    }\n  };\n\n  var result = state.result,\n      value = state.value;\n  return __jsx(AutoComplete, {\n    value: value,\n    onSelect: onSelect,\n    onSearch: handleSearch,\n    placeholder: \"find your buddy\",\n    style: {\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, result.map(function (user) {\n    return __jsx(AutoCompleteOption, {\n      key: user.id,\n      style: {\n        display: 'flex'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, __jsx(UserItem, {\n      onClick: function onClick() {\n        setState(_objectSpread(_objectSpread({}, state), {}, {\n          value: user.name,\n          result: []\n        }));\n        props.setComposedId(user.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"userImg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, __jsx(\"img\", {\n      alt: \"#\",\n      src: user.profileImageUrl,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    })), __jsx(\"span\", {\n      className: \"suggetionText\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, user.name)));\n  }));\n}","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/components/Chat/InputName.js"],"names":["React","AutoComplete","AutoCompleteOption","UserItem","props","useState","value","result","state","setState","handleSearch","users","forEach","user","name","toLowerCase","indexOf","push","onSelect","id","marginBottom","map","display","setComposedId","profileImageUrl"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AutoComplete, { AutoCompleteOption } from '../uielements/autocomplete';\nimport UserItem from './InputName.style';\n\nexport default function(props) {\n  const [state, setState] = React.useState({\n    value: '',\n    result: [],\n  });\n\n  const handleSearch = value => {\n    const result = [];\n    if (value) {\n      props.users.forEach(user => {\n        if (user.name.toLowerCase().indexOf(value.toLowerCase()) > -1) {\n          result.push(user);\n        }\n      });\n    }\n    setState({ ...state, result, value });\n  };\n  const onSelect = id => {\n    if (id) {\n      state.result.forEach(user => {\n        if (user.id === id) {\n          setState({ ...state, value: user.name });\n        }\n      });\n    }\n  };\n  const { result, value } = state;\n  return (\n    <AutoComplete\n      value={value}\n      onSelect={onSelect}\n      onSearch={handleSearch}\n      placeholder=\"find your buddy\"\n      style={{ marginBottom: 10 }}\n    >\n      {result.map(user => (\n        <AutoCompleteOption key={user.id} style={{ display: 'flex' }}>\n          <UserItem\n            onClick={() => {\n              setState({ ...state, value: user.name, result: [] });\n              props.setComposedId(user.id);\n            }}\n          >\n            <div className=\"userImg\">\n              <img alt=\"#\" src={user.profileImageUrl} />\n            </div>\n\n            <span className=\"suggetionText\">{user.name}</span>\n          </UserItem>\n        </AutoCompleteOption>\n      ))}\n    </AutoComplete>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}