{"ast":null,"code":"var _jsxFileName = \"/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/containers/Chat/Messages.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { timeDifference } from '@iso/lib/helpers/utility';\nimport { MessageSingle, MessageChatWrapper } from './Messages.styles';\nimport chatActions from '@iso/redux/chat/actions';\nvar toggleViewProfile = chatActions.toggleViewProfile,\n    toggleMobileProfile = chatActions.toggleMobileProfile;\nexport default function Messages() {\n  _s();\n\n  var _this = this;\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.Chat;\n  }),\n      user = _useSelector.user,\n      userId = _useSelector.userId,\n      selectedChatRoom = _useSelector.selectedChatRoom,\n      messages = _useSelector.messages;\n\n  var scrollToBottom = function scrollToBottom() {\n    var messageChat = document.getElementById('messageChat');\n    messageChat.scrollTop = messageChat.scrollHeight;\n  };\n\n  React.useEffect(function () {\n    scrollToBottom();\n  });\n\n  var renderMessage = function renderMessage(message) {\n    var isUser = userId === message.sender;\n    var messageUser = isUser ? user : selectedChatRoom.otherUserInfo;\n\n    if (isUser) {\n      return __jsx(MessageSingle, {\n        className: \"loggedUser\",\n        key: message.messageTime,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"messageContent isUser\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: \"messageContentText\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }\n      }, message.text)), __jsx(\"div\", {\n        className: \"messageTime\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }\n      }, timeDifference(message.messageTime)))), __jsx(\"div\", {\n        className: \"messageGravatar\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, __jsx(\"img\", {\n        alt: \"#\",\n        src: messageUser.profileImageUrl,\n        onClick: function onClick() {\n          dispatch(toggleMobileProfile(true));\n          dispatch(toggleViewProfile(messageUser));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      })));\n    } else {\n      return __jsx(MessageSingle, {\n        key: message.messageTime,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"messageGravatar\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, __jsx(\"img\", {\n        alt: \"#\",\n        src: messageUser.profileImageUrl,\n        onClick: function onClick() {\n          dispatch(toggleMobileProfile(true));\n          dispatch(toggleViewProfile(messageUser));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      })), __jsx(\"div\", {\n        className: \"messageContent notUser\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: \"messageContentText\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      }, message.text)), __jsx(\"div\", {\n        className: \"messageTime\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      }, timeDifference(message.messageTime)))));\n    }\n  };\n\n  return __jsx(MessageChatWrapper, {\n    id: \"messageChat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, messages.map(renderMessage));\n}\n\n_s(Messages, \"m19S6zSqwf2M2EO/fTCq+BDb+u4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/containers/Chat/Messages.js"],"names":["React","useDispatch","useSelector","timeDifference","MessageSingle","MessageChatWrapper","chatActions","toggleViewProfile","toggleMobileProfile","Messages","dispatch","state","Chat","user","userId","selectedChatRoom","messages","scrollToBottom","messageChat","document","getElementById","scrollTop","scrollHeight","useEffect","renderMessage","message","isUser","sender","messageUser","otherUserInfo","messageTime","text","profileImageUrl","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { timeDifference } from '@iso/lib/helpers/utility';\nimport { MessageSingle, MessageChatWrapper } from './Messages.styles';\nimport chatActions from '@iso/redux/chat/actions';\nconst { toggleViewProfile, toggleMobileProfile } = chatActions;\nexport default function Messages() {\n  const dispatch = useDispatch();\n  const { user, userId, selectedChatRoom, messages } = useSelector(\n    state => state.Chat\n  );\n\n  const scrollToBottom = () => {\n    const messageChat = document.getElementById('messageChat');\n    messageChat.scrollTop = messageChat.scrollHeight;\n  };\n  React.useEffect(() => {\n    scrollToBottom();\n  });\n\n  const renderMessage = message => {\n    const isUser = userId === message.sender;\n    const messageUser = isUser ? user : selectedChatRoom.otherUserInfo;\n    if (isUser) {\n      return (\n        <MessageSingle className=\"loggedUser\" key={message.messageTime}>\n          <div className=\"messageContent isUser\">\n            <div className=\"messageContentText\">\n              <p>{message.text}</p>\n            </div>\n            <div className=\"messageTime\">\n              <p>{timeDifference(message.messageTime)}</p>\n            </div>\n          </div>\n          <div className=\"messageGravatar\">\n            <img\n              alt=\"#\"\n              src={messageUser.profileImageUrl}\n              onClick={() => {\n                dispatch(toggleMobileProfile(true));\n                dispatch(toggleViewProfile(messageUser));\n              }}\n            />\n          </div>\n        </MessageSingle>\n      );\n    } else {\n      return (\n        <MessageSingle key={message.messageTime}>\n          <div className=\"messageGravatar\">\n            <img\n              alt=\"#\"\n              src={messageUser.profileImageUrl}\n              onClick={() => {\n                dispatch(toggleMobileProfile(true));\n                dispatch(toggleViewProfile(messageUser));\n              }}\n            />\n          </div>\n          <div className=\"messageContent notUser\">\n            <div className=\"messageContentText\">\n              <p>{message.text}</p>\n            </div>\n            <div className=\"messageTime\">\n              <p>{timeDifference(message.messageTime)}</p>\n            </div>\n          </div>\n        </MessageSingle>\n      );\n    }\n  };\n  return (\n    <MessageChatWrapper id=\"messageChat\">\n      {messages.map(renderMessage)}\n    </MessageChatWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}