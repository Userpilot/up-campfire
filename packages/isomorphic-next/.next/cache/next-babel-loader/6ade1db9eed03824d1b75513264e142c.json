{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/components/Mail/ComposeMail.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Button from '../uielements/button';\nimport Input from '../uielements/input';\nimport ComposeAutoComplete from './ComposeAutoComplete';\nimport notification from '../Notification';\nimport IntlMessages from '../utility/intlMessages';\nimport ComposeForm from './ComposeMail.style';\nimport Editor from '../uielements/editor';\n\nfunction uploadCallback(file) {\n  return new Promise(function (resolve, reject) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('POST', 'https://api.imgur.com/3/image');\n    xhr.setRequestHeader('Authorization', 'Client-ID 8d26ccd12712fca');\n    var data = new FormData();\n    data.append('image', file);\n    xhr.send(data);\n    xhr.addEventListener('load', function () {\n      var response = JSON.parse(xhr.responseText);\n      resolve(response);\n    });\n    xhr.addEventListener('error', function () {\n      var error = JSON.parse(xhr.responseText);\n      reject(error);\n    });\n  });\n}\n\nexport default function ComposeMail(props) {\n  _s();\n\n  var _React$useState = React.useState({\n    editorState: null,\n    loading: false,\n    iconLoading: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var onEditorStateChange = function onEditorStateChange(editorState) {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      editorState: editorState\n    }));\n  };\n\n  var ComposeAutoCompleteTO = {\n    allMails: props.allMails,\n    updateData: function updateData() {},\n    placeholder: 'To',\n    autofocus: true\n  };\n  var ComposeAutoCompleteCC = {\n    allMails: props.allMails,\n    updateData: function updateData() {},\n    placeholder: 'CC'\n  };\n  var editorOption = {\n    style: {\n      width: '90%',\n      height: '70%'\n    },\n    editorState: state.editorState,\n    toolbarClassName: 'home-toolbar',\n    wrapperClassName: 'home-wrapper',\n    editorClassName: 'home-editor',\n    onEditorStateChange: onEditorStateChange,\n    uploadCallback: uploadCallback,\n    toolbar: {\n      image: {\n        uploadCallback: uploadCallback\n      }\n    }\n  };\n  return __jsx(ComposeForm, {\n    className: \"isoComposeMailWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, __jsx(ComposeAutoComplete, _extends({}, ComposeAutoCompleteTO, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  })), __jsx(ComposeAutoComplete, _extends({}, ComposeAutoCompleteCC, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  })), __jsx(Input, {\n    placeholder: \"Subject\",\n    className: \"isoInputBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), __jsx(Editor, _extends({}, editorOption, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  })), __jsx(\"div\", {\n    className: \"isoComposeMailBtnWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, props.mobileView || props.tabView ? __jsx(Button, {\n    type: \"primary\",\n    onClick: function onClick() {\n      props.changeComposeMail(false);\n    },\n    className: \"isoCancelMailBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, __jsx(IntlMessages, {\n    id: \"email.cancel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  })) : '', __jsx(Button, {\n    type: \"primary\",\n    onClick: function onClick(e) {\n      return notification('success', \"Mail has been sent\", '');\n    },\n    className: \"isoSendMailBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, __jsx(IntlMessages, {\n    id: \"email.send\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }))));\n}\n\n_s(ComposeMail, \"jmaNLvyDgLfzz8viNvbHVRUDfMA=\");\n\n_c = ComposeMail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComposeMail\");","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/components/Mail/ComposeMail.js"],"names":["React","Button","Input","ComposeAutoComplete","notification","IntlMessages","ComposeForm","Editor","uploadCallback","file","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","data","FormData","append","send","addEventListener","response","JSON","parse","responseText","error","ComposeMail","props","useState","editorState","loading","iconLoading","state","setState","onEditorStateChange","ComposeAutoCompleteTO","allMails","updateData","placeholder","autofocus","ComposeAutoCompleteCC","editorOption","style","width","height","toolbarClassName","wrapperClassName","editorClassName","toolbar","image","mobileView","tabView","changeComposeMail","e"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '../uielements/button';\nimport Input from '../uielements/input';\nimport ComposeAutoComplete from './ComposeAutoComplete';\nimport notification from '../Notification';\nimport IntlMessages from '../utility/intlMessages';\nimport ComposeForm from './ComposeMail.style';\nimport Editor from '../uielements/editor';\n\nfunction uploadCallback(file) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open('POST', 'https://api.imgur.com/3/image');\n    xhr.setRequestHeader('Authorization', 'Client-ID 8d26ccd12712fca');\n    const data = new FormData();\n    data.append('image', file);\n    xhr.send(data);\n    xhr.addEventListener('load', () => {\n      const response = JSON.parse(xhr.responseText);\n      resolve(response);\n    });\n    xhr.addEventListener('error', () => {\n      const error = JSON.parse(xhr.responseText);\n      reject(error);\n    });\n  });\n}\nexport default function ComposeMail(props) {\n  const [state, setState] = React.useState({\n    editorState: null,\n    loading: false,\n    iconLoading: false,\n  });\n  const onEditorStateChange = editorState => {\n    setState({ ...state, editorState });\n  };\n  const ComposeAutoCompleteTO = {\n    allMails: props.allMails,\n    updateData: () => {},\n    placeholder: 'To',\n    autofocus: true,\n  };\n  const ComposeAutoCompleteCC = {\n    allMails: props.allMails,\n    updateData: () => {},\n    placeholder: 'CC',\n  };\n  const editorOption = {\n    style: { width: '90%', height: '70%' },\n    editorState: state.editorState,\n    toolbarClassName: 'home-toolbar',\n    wrapperClassName: 'home-wrapper',\n    editorClassName: 'home-editor',\n    onEditorStateChange: onEditorStateChange,\n    uploadCallback: uploadCallback,\n    toolbar: { image: { uploadCallback: uploadCallback } },\n  };\n\n  return (\n    <ComposeForm className=\"isoComposeMailWrapper\">\n      <ComposeAutoComplete {...ComposeAutoCompleteTO} />\n      <ComposeAutoComplete {...ComposeAutoCompleteCC} />\n      <Input placeholder=\"Subject\" className=\"isoInputBox\" />\n      <Editor {...editorOption} />\n      <div className=\"isoComposeMailBtnWrapper\">\n        {props.mobileView || props.tabView ? (\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              props.changeComposeMail(false);\n            }}\n            className=\"isoCancelMailBtn\"\n          >\n            <IntlMessages id=\"email.cancel\" />\n          </Button>\n        ) : (\n          ''\n        )}\n\n        <Button\n          type=\"primary\"\n          onClick={e => notification('success', `Mail has been sent`, '')}\n          className=\"isoSendMailBtn\"\n        >\n          <IntlMessages id=\"email.send\" />\n        </Button>\n      </div>\n    </ComposeForm>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}