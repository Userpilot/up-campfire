{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport scrumBoardActions from './actions';\nvar initialState = {\n  boards: {},\n  columns: {},\n  tasks: {},\n  searchText: '',\n  labels: {}\n};\nexport default function scrumBoardReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case scrumBoardActions.SET_BOARDS_DATA:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case scrumBoardActions.SET_CURRENT_BOARD_DATA:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case scrumBoardActions.CREATE_OR_UPDATE_TASK:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tasks: action.payload.tasks,\n        columns: action.payload.columns\n      });\n\n    case scrumBoardActions.EDIT_TASK:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tasks: _objectSpread(_objectSpread({}, state.tasks), {}, _defineProperty({}, action.payload.id, _objectSpread(_objectSpread({}, action.payload), {}, {\n          editing: true\n        })))\n      });\n\n    case scrumBoardActions.CANCEL_EDIT_TASK:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tasks: _objectSpread(_objectSpread({}, state.tasks), {}, _defineProperty({}, action.payload.id, _objectSpread(_objectSpread({}, action.payload), {}, {\n          editing: false\n        })))\n      });\n\n    case scrumBoardActions.DELETE_TASK:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tasks: action.payload.tasks,\n        columns: action.payload.columns\n      });\n\n    case scrumBoardActions.SET_SEARCH_TEXT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        searchText: action.payload\n      });\n\n    case scrumBoardActions.SET_MOVED_TASK:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        columns: action.payload.columns,\n        tasks: action.payload.tasks\n      });\n\n    case scrumBoardActions.RESET_TASK:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          task: initialState.task\n        });\n      }\n    /// COLUMNS\n\n    case scrumBoardActions.CREATE_OR_UPDATE_COLUMN:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        columns: action.payload.columns,\n        boards: action.payload.boards\n      });\n\n    case scrumBoardActions.EDIT_COLUMN:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        columns: _objectSpread(_objectSpread({}, state.columns), {}, _defineProperty({}, action.payload.id, _objectSpread(_objectSpread({}, action.payload), {}, {\n          editing: true\n        })))\n      });\n\n    case scrumBoardActions.CANCEL_EDIT_COLUMN:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        columns: _objectSpread(_objectSpread({}, state.columns), {}, _defineProperty({}, action.payload.id, _objectSpread(_objectSpread({}, action.payload), {}, {\n          editing: false\n        })))\n      });\n\n    case scrumBoardActions.DELETE_COLUMN:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        columns: action.payload.columns,\n        boards: action.payload.boards\n      });\n\n    case scrumBoardActions.SET_MOVED_COLUMN:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        boards: action.payload\n      });\n\n    case scrumBoardActions.CREATE_OR_UPDATE_BOARD:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        boards: action.payload\n      });\n\n    case scrumBoardActions.EDIT_BOARD:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        boards: _objectSpread(_objectSpread({}, state.boards), {}, _defineProperty({}, action.payload.id, _objectSpread(_objectSpread({}, action.payload), {}, {\n          editing: true\n        })))\n      });\n\n    case scrumBoardActions.DELETE_BOARD:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        boards: action.payload\n      });\n\n    case scrumBoardActions.CREATE_OR_UPDATE_LABEL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        labels: _objectSpread(_objectSpread({}, state.labels), {}, _defineProperty({}, action.payload.id, action.payload))\n      });\n\n    case scrumBoardActions.EDIT_LABEL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        labels: _objectSpread(_objectSpread({}, state.labels), {}, _defineProperty({}, action.payload.id, _objectSpread(_objectSpread({}, action.payload), {}, {\n          editing: true\n        })))\n      });\n\n    case scrumBoardActions.DELETE_LABEL:\n      var LABELS = _objectSpread({}, state.labels);\n\n      delete LABELS[action.payload];\n      return _objectSpread(_objectSpread({}, state), {}, {\n        labels: LABELS\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/redux/scrumBoard/reducer.js"],"names":["scrumBoardActions","initialState","boards","columns","tasks","searchText","labels","scrumBoardReducer","state","action","type","SET_BOARDS_DATA","payload","SET_CURRENT_BOARD_DATA","CREATE_OR_UPDATE_TASK","EDIT_TASK","id","editing","CANCEL_EDIT_TASK","DELETE_TASK","SET_SEARCH_TEXT","SET_MOVED_TASK","RESET_TASK","task","CREATE_OR_UPDATE_COLUMN","EDIT_COLUMN","CANCEL_EDIT_COLUMN","DELETE_COLUMN","SET_MOVED_COLUMN","CREATE_OR_UPDATE_BOARD","EDIT_BOARD","DELETE_BOARD","CREATE_OR_UPDATE_LABEL","EDIT_LABEL","DELETE_LABEL","LABELS"],"mappings":";;;;;;AAAA,OAAOA,iBAAP,MAA8B,WAA9B;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,OAAO,EAAE,EAFU;AAGnBC,EAAAA,KAAK,EAAE,EAHY;AAInBC,EAAAA,UAAU,EAAE,EAJO;AAKnBC,EAAAA,MAAM,EAAE;AALW,CAArB;AAOA,eAAe,SAASC,iBAAT,GAAyD;AAAA,MAA9BC,KAA8B,uEAAtBP,YAAsB;AAAA,MAARQ,MAAQ;;AACtE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,iBAAiB,CAACW,eAAvB;AACE,6CAAYH,KAAZ,GAAsBC,MAAM,CAACG,OAA7B;;AAEF,SAAKZ,iBAAiB,CAACa,sBAAvB;AACE,6CAAYL,KAAZ,GAAsBC,MAAM,CAACG,OAA7B;;AAEF,SAAKZ,iBAAiB,CAACc,qBAAvB;AACE,6CACKN,KADL;AAEEJ,QAAAA,KAAK,EAAEK,MAAM,CAACG,OAAP,CAAeR,KAFxB;AAGED,QAAAA,OAAO,EAAEM,MAAM,CAACG,OAAP,CAAeT;AAH1B;;AAMF,SAAKH,iBAAiB,CAACe,SAAvB;AACE,6CACKP,KADL;AAEEJ,QAAAA,KAAK,kCACAI,KAAK,CAACJ,KADN,2BAEFK,MAAM,CAACG,OAAP,CAAeI,EAFb,kCAGEP,MAAM,CAACG,OAHT;AAIDK,UAAAA,OAAO,EAAE;AAJR;AAFP;;AAWF,SAAKjB,iBAAiB,CAACkB,gBAAvB;AACE,6CACKV,KADL;AAEEJ,QAAAA,KAAK,kCACAI,KAAK,CAACJ,KADN,2BAEFK,MAAM,CAACG,OAAP,CAAeI,EAFb,kCAGEP,MAAM,CAACG,OAHT;AAIDK,UAAAA,OAAO,EAAE;AAJR;AAFP;;AAWF,SAAKjB,iBAAiB,CAACmB,WAAvB;AACE,6CACKX,KADL;AAEEJ,QAAAA,KAAK,EAAEK,MAAM,CAACG,OAAP,CAAeR,KAFxB;AAGED,QAAAA,OAAO,EAAEM,MAAM,CAACG,OAAP,CAAeT;AAH1B;;AAMF,SAAKH,iBAAiB,CAACoB,eAAvB;AACE,6CACKZ,KADL;AAEEH,QAAAA,UAAU,EAAEI,MAAM,CAACG;AAFrB;;AAKF,SAAKZ,iBAAiB,CAACqB,cAAvB;AACE,6CACKb,KADL;AAEEL,QAAAA,OAAO,EAAEM,MAAM,CAACG,OAAP,CAAeT,OAF1B;AAGEC,QAAAA,KAAK,EAAEK,MAAM,CAACG,OAAP,CAAeR;AAHxB;;AAMF,SAAKJ,iBAAiB,CAACsB,UAAvB;AAAmC;AACjC,+CACKd,KADL;AAEEe,UAAAA,IAAI,EAAEtB,YAAY,CAACsB;AAFrB;AAID;AAED;;AACA,SAAKvB,iBAAiB,CAACwB,uBAAvB;AACE,6CACKhB,KADL;AAEEL,QAAAA,OAAO,EAAEM,MAAM,CAACG,OAAP,CAAeT,OAF1B;AAGED,QAAAA,MAAM,EAAEO,MAAM,CAACG,OAAP,CAAeV;AAHzB;;AAKF,SAAKF,iBAAiB,CAACyB,WAAvB;AACE,6CACKjB,KADL;AAEEL,QAAAA,OAAO,kCACFK,KAAK,CAACL,OADJ,2BAEJM,MAAM,CAACG,OAAP,CAAeI,EAFX,kCAGAP,MAAM,CAACG,OAHP;AAIHK,UAAAA,OAAO,EAAE;AAJN;AAFT;;AAWF,SAAKjB,iBAAiB,CAAC0B,kBAAvB;AACE,6CACKlB,KADL;AAEEL,QAAAA,OAAO,kCACFK,KAAK,CAACL,OADJ,2BAEJM,MAAM,CAACG,OAAP,CAAeI,EAFX,kCAGAP,MAAM,CAACG,OAHP;AAIHK,UAAAA,OAAO,EAAE;AAJN;AAFT;;AAUF,SAAKjB,iBAAiB,CAAC2B,aAAvB;AACE,6CACKnB,KADL;AAEEL,QAAAA,OAAO,EAAEM,MAAM,CAACG,OAAP,CAAeT,OAF1B;AAGED,QAAAA,MAAM,EAAEO,MAAM,CAACG,OAAP,CAAeV;AAHzB;;AAMF,SAAKF,iBAAiB,CAAC4B,gBAAvB;AACE,6CACKpB,KADL;AAEEN,QAAAA,MAAM,EAAEO,MAAM,CAACG;AAFjB;;AAKF,SAAKZ,iBAAiB,CAAC6B,sBAAvB;AACE,6CACKrB,KADL;AAEEN,QAAAA,MAAM,EAAEO,MAAM,CAACG;AAFjB;;AAIF,SAAKZ,iBAAiB,CAAC8B,UAAvB;AACE,6CACKtB,KADL;AAEEN,QAAAA,MAAM,kCACDM,KAAK,CAACN,MADL,2BAEHO,MAAM,CAACG,OAAP,CAAeI,EAFZ,kCAGCP,MAAM,CAACG,OAHR;AAIFK,UAAAA,OAAO,EAAE;AAJP;AAFR;;AAUF,SAAKjB,iBAAiB,CAAC+B,YAAvB;AACE,6CACKvB,KADL;AAEEN,QAAAA,MAAM,EAAEO,MAAM,CAACG;AAFjB;;AAKF,SAAKZ,iBAAiB,CAACgC,sBAAvB;AACE,6CACKxB,KADL;AAEEF,QAAAA,MAAM,kCACDE,KAAK,CAACF,MADL,2BAEHG,MAAM,CAACG,OAAP,CAAeI,EAFZ,EAEiBP,MAAM,CAACG,OAFxB;AAFR;;AAOF,SAAKZ,iBAAiB,CAACiC,UAAvB;AACE,6CACKzB,KADL;AAEEF,QAAAA,MAAM,kCACDE,KAAK,CAACF,MADL,2BAEHG,MAAM,CAACG,OAAP,CAAeI,EAFZ,kCAGCP,MAAM,CAACG,OAHR;AAIFK,UAAAA,OAAO,EAAE;AAJP;AAFR;;AAUF,SAAKjB,iBAAiB,CAACkC,YAAvB;AACE,UAAMC,MAAM,qBACP3B,KAAK,CAACF,MADC,CAAZ;;AAGA,aAAO6B,MAAM,CAAC1B,MAAM,CAACG,OAAR,CAAb;AACA,6CACKJ,KADL;AAEEF,QAAAA,MAAM,EAAE6B;AAFV;;AAIF;AACE,aAAO3B,KAAP;AA/JJ;AAiKD","sourcesContent":["import scrumBoardActions from './actions';\n\nconst initialState = {\n  boards: {},\n  columns: {},\n  tasks: {},\n  searchText: '',\n  labels: {},\n};\nexport default function scrumBoardReducer(state = initialState, action) {\n  switch (action.type) {\n    case scrumBoardActions.SET_BOARDS_DATA:\n      return { ...state, ...action.payload };\n\n    case scrumBoardActions.SET_CURRENT_BOARD_DATA:\n      return { ...state, ...action.payload };\n\n    case scrumBoardActions.CREATE_OR_UPDATE_TASK:\n      return {\n        ...state,\n        tasks: action.payload.tasks,\n        columns: action.payload.columns,\n      };\n\n    case scrumBoardActions.EDIT_TASK:\n      return {\n        ...state,\n        tasks: {\n          ...state.tasks,\n          [action.payload.id]: {\n            ...action.payload,\n            editing: true,\n          },\n        },\n      };\n\n    case scrumBoardActions.CANCEL_EDIT_TASK:\n      return {\n        ...state,\n        tasks: {\n          ...state.tasks,\n          [action.payload.id]: {\n            ...action.payload,\n            editing: false,\n          },\n        },\n      };\n\n    case scrumBoardActions.DELETE_TASK:\n      return {\n        ...state,\n        tasks: action.payload.tasks,\n        columns: action.payload.columns,\n      };\n\n    case scrumBoardActions.SET_SEARCH_TEXT:\n      return {\n        ...state,\n        searchText: action.payload,\n      };\n\n    case scrumBoardActions.SET_MOVED_TASK:\n      return {\n        ...state,\n        columns: action.payload.columns,\n        tasks: action.payload.tasks,\n      };\n\n    case scrumBoardActions.RESET_TASK: {\n      return {\n        ...state,\n        task: initialState.task,\n      };\n    }\n\n    /// COLUMNS\n    case scrumBoardActions.CREATE_OR_UPDATE_COLUMN:\n      return {\n        ...state,\n        columns: action.payload.columns,\n        boards: action.payload.boards,\n      };\n    case scrumBoardActions.EDIT_COLUMN:\n      return {\n        ...state,\n        columns: {\n          ...state.columns,\n          [action.payload.id]: {\n            ...action.payload,\n            editing: true,\n          },\n        },\n      };\n\n    case scrumBoardActions.CANCEL_EDIT_COLUMN:\n      return {\n        ...state,\n        columns: {\n          ...state.columns,\n          [action.payload.id]: {\n            ...action.payload,\n            editing: false,\n          },\n        },\n      };\n    case scrumBoardActions.DELETE_COLUMN:\n      return {\n        ...state,\n        columns: action.payload.columns,\n        boards: action.payload.boards,\n      };\n\n    case scrumBoardActions.SET_MOVED_COLUMN:\n      return {\n        ...state,\n        boards: action.payload,\n      };\n\n    case scrumBoardActions.CREATE_OR_UPDATE_BOARD:\n      return {\n        ...state,\n        boards: action.payload,\n      };\n    case scrumBoardActions.EDIT_BOARD:\n      return {\n        ...state,\n        boards: {\n          ...state.boards,\n          [action.payload.id]: {\n            ...action.payload,\n            editing: true,\n          },\n        },\n      };\n    case scrumBoardActions.DELETE_BOARD:\n      return {\n        ...state,\n        boards: action.payload,\n      };\n\n    case scrumBoardActions.CREATE_OR_UPDATE_LABEL:\n      return {\n        ...state,\n        labels: {\n          ...state.labels,\n          [action.payload.id]: action.payload,\n        },\n      };\n    case scrumBoardActions.EDIT_LABEL:\n      return {\n        ...state,\n        labels: {\n          ...state.labels,\n          [action.payload.id]: {\n            ...action.payload,\n            editing: true,\n          },\n        },\n      };\n    case scrumBoardActions.DELETE_LABEL:\n      const LABELS = {\n        ...state.labels,\n      };\n      delete LABELS[action.payload];\n      return {\n        ...state,\n        labels: LABELS,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}