{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport drawerActions from './actions';\nconst initialState = {\n  drawerVisibility: false,\n  drawerType: '',\n  drawerProps: {}\n};\nexport default function drawerReducer(state = initialState, action) {\n  switch (action.type) {\n    case drawerActions.SHOW_DRAWER:\n      return {\n        drawerVisibility: true,\n        drawerType: action.payload.drawerType,\n        drawerProps: action.payload.drawerProps\n      };\n\n    case drawerActions.HIDE_DRAWER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        drawerVisibility: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/redux/drawer/reducer.js"],"names":["drawerActions","initialState","drawerVisibility","drawerType","drawerProps","drawerReducer","state","action","type","SHOW_DRAWER","payload","HIDE_DRAWER"],"mappings":";;;;;;AAAA,OAAOA,aAAP,MAA0B,WAA1B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,gBAAgB,EAAE,KADC;AAEnBC,EAAAA,UAAU,EAAE,EAFO;AAGnBC,EAAAA,WAAW,EAAE;AAHM,CAArB;AAMA,eAAe,SAASC,aAAT,CAAuBC,KAAK,GAAGL,YAA/B,EAA6CM,MAA7C,EAAqD;AAClE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,aAAa,CAACS,WAAnB;AACE,aAAO;AACLP,QAAAA,gBAAgB,EAAE,IADb;AAELC,QAAAA,UAAU,EAAEI,MAAM,CAACG,OAAP,CAAeP,UAFtB;AAGLC,QAAAA,WAAW,EAAEG,MAAM,CAACG,OAAP,CAAeN;AAHvB,OAAP;;AAKF,SAAKJ,aAAa,CAACW,WAAnB;AACE,6CACKL,KADL;AAEEJ,QAAAA,gBAAgB,EAAE;AAFpB;;AAIF;AACE,aAAOI,KAAP;AAbJ;AAeD","sourcesContent":["import drawerActions from './actions';\n\nconst initialState = {\n  drawerVisibility: false,\n  drawerType: '',\n  drawerProps: {},\n};\n\nexport default function drawerReducer(state = initialState, action) {\n  switch (action.type) {\n    case drawerActions.SHOW_DRAWER:\n      return {\n        drawerVisibility: true,\n        drawerType: action.payload.drawerType,\n        drawerProps: action.payload.drawerProps,\n      };\n    case drawerActions.HIDE_DRAWER:\n      return {\n        ...state,\n        drawerVisibility: false,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}