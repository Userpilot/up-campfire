{"ast":null,"code":"var _jsxFileName = \"/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/containers/LanguageSwitcher/LanguageSwitcher.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport actions from '@iso/redux/languageSwitcher/actions';\nimport config from './config';\nvar changeLanguage = actions.changeLanguage;\nexport default function LanguageSwitcher() {\n  _s();\n\n  var _this = this;\n\n  var _useSelector = useSelector(function (state) {\n    return state.LanguageSwitcher;\n  }),\n      language = _useSelector.language;\n\n  var dispatch = useDispatch();\n  return __jsx(\"div\", {\n    className: \"themeSwitchBlock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(IntlMessages, {\n    id: \"languageSwitcher.label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"themeSwitchBtnWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, config.options.map(function (option) {\n    var languageId = option.languageId,\n        icon = option.icon;\n    var customClass = languageId === language.languageId ? 'selectedTheme languageSwitch' : 'languageSwitch';\n    return __jsx(\"button\", {\n      type: \"button\",\n      className: customClass,\n      key: languageId,\n      onClick: function onClick() {\n        dispatch(changeLanguage(languageId));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, __jsx(\"img\", {\n      src: icon,\n      alt: \"flag\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }));\n  })));\n}\n\n_s(LanguageSwitcher, \"/+NH3k/bbE/jVo8Fk1e1f7PL68A=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = LanguageSwitcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguageSwitcher\");","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/containers/LanguageSwitcher/LanguageSwitcher.js"],"names":["React","useDispatch","useSelector","IntlMessages","actions","config","changeLanguage","LanguageSwitcher","state","language","dispatch","options","map","option","languageId","icon","customClass"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;IAEQC,c,GAAmBF,O,CAAnBE,c;AAER,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AAAA;;AAAA,qBACpBL,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACD,gBAAV;AAAA,GAAN,CADS;AAAA,MACjCE,QADiC,gBACjCA,QADiC;;AAEzC,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,SACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,EAAE,EAAC,wBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,MAAM,CAACM,OAAP,CAAeC,GAAf,CAAmB,UAAAC,MAAM,EAAI;AAAA,QACpBC,UADoB,GACCD,MADD,CACpBC,UADoB;AAAA,QACRC,IADQ,GACCF,MADD,CACRE,IADQ;AAE5B,QAAMC,WAAW,GACfF,UAAU,KAAKL,QAAQ,CAACK,UAAxB,GACI,8BADJ,GAEI,gBAHN;AAKA,WACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAEE,WAFb;AAGE,MAAA,GAAG,EAAEF,UAHP;AAIE,MAAA,OAAO,EAAE,mBAAM;AACbJ,QAAAA,QAAQ,CAACJ,cAAc,CAACQ,UAAD,CAAf,CAAR;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE;AAAK,MAAA,GAAG,EAAEC,IAAV;AAAgB,MAAA,GAAG,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAYD,GAnBA,CADH,CAJF,CADF;AA6BD;;GAhCuBR,gB;UACDL,W,EACJD,W;;;KAFKM,gB","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport actions from '@iso/redux/languageSwitcher/actions';\nimport config from './config';\n\nconst { changeLanguage } = actions;\n\nexport default function LanguageSwitcher() {\n  const { language } = useSelector(state => state.LanguageSwitcher);\n  const dispatch = useDispatch();\n  return (\n    <div className=\"themeSwitchBlock\">\n      <h4>\n        <IntlMessages id=\"languageSwitcher.label\" />\n      </h4>\n      <div className=\"themeSwitchBtnWrapper\">\n        {config.options.map(option => {\n          const { languageId, icon } = option;\n          const customClass =\n            languageId === language.languageId\n              ? 'selectedTheme languageSwitch'\n              : 'languageSwitch';\n\n          return (\n            <button\n              type=\"button\"\n              className={customClass}\n              key={languageId}\n              onClick={() => {\n                dispatch(changeLanguage(languageId));\n              }}\n            >\n              <img src={icon} alt=\"flag\" />\n            </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}