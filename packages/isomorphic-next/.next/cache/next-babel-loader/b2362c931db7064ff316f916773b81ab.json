{"ast":null,"code":"var _jsxFileName = \"/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/containers/FirebaseForm/FirebaseForm.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Button from '@iso/components/uielements/button';\nimport Input from '@iso/components/uielements/input';\nimport Modal from '@iso/components/Feedback/Modal';\nimport { notification } from '@iso/components';\nimport { signInWithEmail, signUpWithEmailAndPassword, resetPassword } from '@iso/lib/firebase/firebase.authentication.util';\nexport default function (props) {\n  const [state, setState] = React.useState({\n    visible: false,\n    email: 'demo@gmail.com',\n    password: 'demodemo',\n    confirmLoading: false\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [name]: value\n    }));\n  };\n\n  const showModal = () => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      visible: true\n    }));\n  };\n\n  const handleCancel = e => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      visible: false\n    }));\n  };\n\n  const handleLogin = async () => {\n    const {\n      email,\n      password\n    } = state;\n\n    if (!(email && password)) {\n      notification('error', 'Please fill in email. and password');\n      return;\n    }\n\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      confirmLoading: true\n    }));\n    let user;\n    let message;\n\n    if (props.signup) {\n      try {\n        await signUpWithEmailAndPassword(email, password).then(authUser => {\n          user = authUser.user;\n          console.log(user, 'User');\n        });\n      } catch (error) {\n        message = error.message;\n        console.log(error.message, 'Error');\n      }\n    } else {\n      try {\n        await signInWithEmail(email, password).then(authUser => {\n          user = authUser.user;\n        });\n      } catch (error) {\n        message = error.message;\n        console.log(error.message, 'Error');\n      }\n    }\n\n    if (user) {\n      const token = await user.getIdToken();\n      props.login(token);\n      props.history.push('/dashboard');\n    } else {\n      notification('error', message);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        confirmLoading: false\n      }));\n    }\n  };\n\n  const handleResetPassword = () => {\n    const {\n      email\n    } = state;\n\n    if (!email) {\n      notification('error', `Please fill in email.`);\n      return;\n    }\n\n    resetPassword(email).then(() => notification('success', `Password reset email sent to ${email}.`)).catch(error => notification('error', 'Email address not found.'));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Button, {\n    type: \"primary\",\n    onClick: showModal,\n    className: \"btnFirebase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, props.signup ? 'Sign up with Firebase' : 'Sign in with Firebase'), __jsx(Modal, {\n    title: props.signup ? 'Sign up with Firebase' : 'Sign in with Firebase',\n    visible: state.visible,\n    confirmLoading: state.confirmLoading,\n    onCancel: handleCancel,\n    onOk: handleLogin,\n    className: \"isoFirebaseLoginModal\",\n    cancelText: \"Cancel\",\n    okText: props.signup ? 'Sign Up' : 'Login',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"isoInputWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Email\"), __jsx(Input, {\n    name: \"email\",\n    size: \"large\",\n    placeholder: \"Email\",\n    value: state.email,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"isoInputWrapper\",\n    style: {\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"Password\"), __jsx(Input, {\n    name: \"password\",\n    type: \"password\",\n    size: \"large\",\n    placeholder: \"Password\",\n    value: state.password,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  })), __jsx(\"span\", {\n    className: \"isoResetPass\",\n    onClick: handleResetPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, \"Reset Password\"))));\n}","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/containers/FirebaseForm/FirebaseForm.js"],"names":["React","Button","Input","Modal","notification","signInWithEmail","signUpWithEmailAndPassword","resetPassword","props","state","setState","useState","visible","email","password","confirmLoading","handleChange","e","name","value","target","showModal","handleCancel","handleLogin","user","message","signup","then","authUser","console","log","error","token","getIdToken","login","history","push","handleResetPassword","catch","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@iso/components/uielements/button';\nimport Input from '@iso/components/uielements/input';\nimport Modal from '@iso/components/Feedback/Modal';\nimport { notification } from '@iso/components';\nimport {\n  signInWithEmail,\n  signUpWithEmailAndPassword,\n  resetPassword,\n} from '@iso/lib/firebase/firebase.authentication.util';\n\nexport default function(props) {\n  const [state, setState] = React.useState({\n    visible: false,\n    email: 'demo@gmail.com',\n    password: 'demodemo',\n    confirmLoading: false,\n  });\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n  const showModal = () => {\n    setState({\n      ...state,\n      visible: true,\n    });\n  };\n  const handleCancel = e => {\n    setState({\n      ...state,\n      visible: false,\n    });\n  };\n  const handleLogin = async () => {\n    const { email, password } = state;\n    if (!(email && password)) {\n      notification('error', 'Please fill in email. and password');\n      return;\n    }\n    setState({\n      ...state,\n      confirmLoading: true,\n    });\n    let user;\n    let message;\n    if (props.signup) {\n      try {\n        await signUpWithEmailAndPassword(email, password).then(authUser => {\n          user = authUser.user;\n          console.log(user, 'User');\n        });\n      } catch (error) {\n        message = error.message;\n        console.log(error.message, 'Error');\n      }\n    } else {\n      try {\n        await signInWithEmail(email, password).then(authUser => {\n          user = authUser.user;\n        });\n      } catch (error) {\n        message = error.message;\n        console.log(error.message, 'Error');\n      }\n    }\n    if (user) {\n      const token = await user.getIdToken();\n      props.login(token);\n      props.history.push('/dashboard');\n    } else {\n      notification('error', message);\n      setState({\n        ...state,\n        confirmLoading: false,\n      });\n    }\n  };\n  const handleResetPassword = () => {\n    const { email } = state;\n    if (!email) {\n      notification('error', `Please fill in email.`);\n      return;\n    }\n    resetPassword(email)\n      .then(() =>\n        notification('success', `Password reset email sent to ${email}.`)\n      )\n      .catch(error => notification('error', 'Email address not found.'));\n  };\n  return (\n    <>\n      <Button type=\"primary\" onClick={showModal} className=\"btnFirebase\">\n        {props.signup ? 'Sign up with Firebase' : 'Sign in with Firebase'}\n      </Button>\n      <Modal\n        title={props.signup ? 'Sign up with Firebase' : 'Sign in with Firebase'}\n        visible={state.visible}\n        confirmLoading={state.confirmLoading}\n        onCancel={handleCancel}\n        onOk={handleLogin}\n        className=\"isoFirebaseLoginModal\"\n        cancelText=\"Cancel\"\n        okText={props.signup ? 'Sign Up' : 'Login'}\n      >\n        <form>\n          <div className=\"isoInputWrapper\">\n            <label>Email</label>\n            <Input\n              name=\"email\"\n              size=\"large\"\n              placeholder=\"Email\"\n              value={state.email}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"isoInputWrapper\" style={{ marginBottom: 10 }}>\n            <label>Password</label>\n            <Input\n              name=\"password\"\n              type=\"password\"\n              size=\"large\"\n              placeholder=\"Password\"\n              value={state.password}\n              onChange={handleChange}\n            />\n          </div>\n          <span className=\"isoResetPass\" onClick={handleResetPassword}>\n            Reset Password\n          </span>\n        </form>\n      </Modal>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}