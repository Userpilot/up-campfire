{"ast":null,"code":"// saga.js\nimport { all, takeEvery, put, select } from 'redux-saga/effects';\nimport quizActions from './actions';\nimport FakeQuestion from './fakeQuestion';\nimport FakeQuiz from './fakeQuizes';\n\nconst getQuizes = state => state.quiz;\n\nfunction* questionRenderEffectSaga() {\n  let questons;\n  questons = FakeQuestion;\n  yield put(quizActions.setQuestionData(questons));\n}\n\nfunction* quizRenderEffectSaga() {\n  let quizes;\n  quizes = FakeQuiz;\n  yield put(quizActions.setQuizData(quizes));\n}\n\nexport default function* questionSaga() {\n  yield all([takeEvery(quizActions.GET_QUESTION_DATA, questionRenderEffectSaga), takeEvery(quizActions.GET_QUIZ_DATA, quizRenderEffectSaga)]);\n}","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/redux/quiz/saga.js"],"names":["all","takeEvery","put","select","quizActions","FakeQuestion","FakeQuiz","getQuizes","state","quiz","questionRenderEffectSaga","questons","setQuestionData","quizRenderEffectSaga","quizes","setQuizData","questionSaga","GET_QUESTION_DATA","GET_QUIZ_DATA"],"mappings":"AAAA;AACA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,EAA8BC,MAA9B,QAA4C,oBAA5C;AACA,OAAOC,WAAP,MAAwB,WAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,cAArB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAjC;;AAEA,UAAUC,wBAAV,GAAqC;AACnC,MAAIC,QAAJ;AACAA,EAAAA,QAAQ,GAAGN,YAAX;AACA,QAAMH,GAAG,CAACE,WAAW,CAACQ,eAAZ,CAA4BD,QAA5B,CAAD,CAAT;AACD;;AAED,UAAUE,oBAAV,GAAiC;AAC/B,MAAIC,MAAJ;AACAA,EAAAA,MAAM,GAAGR,QAAT;AACA,QAAMJ,GAAG,CAACE,WAAW,CAACW,WAAZ,CAAwBD,MAAxB,CAAD,CAAT;AACD;;AAED,eAAe,UAAUE,YAAV,GAAyB;AACtC,QAAMhB,GAAG,CAAC,CACRC,SAAS,CAACG,WAAW,CAACa,iBAAb,EAAgCP,wBAAhC,CADD,EAERT,SAAS,CAACG,WAAW,CAACc,aAAb,EAA4BL,oBAA5B,CAFD,CAAD,CAAT;AAID","sourcesContent":["// saga.js\nimport { all, takeEvery, put, select } from 'redux-saga/effects';\nimport quizActions from './actions';\nimport FakeQuestion from './fakeQuestion';\nimport FakeQuiz from './fakeQuizes';\n\nconst getQuizes = state => state.quiz;\n\nfunction* questionRenderEffectSaga() {\n  let questons;\n  questons = FakeQuestion;\n  yield put(quizActions.setQuestionData(questons));\n}\n\nfunction* quizRenderEffectSaga() {\n  let quizes;\n  quizes = FakeQuiz;\n  yield put(quizActions.setQuizData(quizes));\n}\n\nexport default function* questionSaga() {\n  yield all([\n    takeEvery(quizActions.GET_QUESTION_DATA, questionRenderEffectSaga),\n    takeEvery(quizActions.GET_QUIZ_DATA, quizRenderEffectSaga),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}