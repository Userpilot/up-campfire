{"ast":null,"code":"import _Button from \"antd/lib/button\";\nvar _jsxFileName = \"/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/components/ColorChoser.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Popover from './uielements/popover';\nimport ColorChooserDropdown from './ColorChooser.style';\nexport default function ({\n  colors,\n  seectedColor,\n  changeColor\n}) {\n  const [visible, setVisibility] = React.useState(false);\n\n  function hide() {\n    setVisibility(false);\n  }\n\n  function handleVisibleChange() {\n    setVisibility(visible => !visible);\n  }\n\n  const content = () => __jsx(ColorChooserDropdown, {\n    className: \"isoColorOptions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, colors.map((color, index) => {\n    const onClick = () => {\n      hide();\n      changeColor(index);\n    };\n\n    const style = {\n      background: color\n    };\n    return __jsx(_Button, {\n      key: index,\n      onClick: onClick,\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }\n    });\n  }));\n\n  return __jsx(Popover, {\n    content: content(),\n    trigger: \"click\",\n    visible: visible,\n    onVisibleChange: handleVisibleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(_Button, {\n    style: {\n      backgroundColor: colors[seectedColor]\n    },\n    className: \"isoColorChooser\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/components/ColorChoser.js"],"names":["React","Popover","ColorChooserDropdown","colors","seectedColor","changeColor","visible","setVisibility","useState","hide","handleVisibleChange","content","map","color","index","onClick","style","background","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,oBAAP,MAAiC,sBAAjC;AAEA,eAAe,UAAU;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,YAAV;AAAwBC,EAAAA;AAAxB,CAAV,EAAiD;AAC9D,QAAM,CAACC,OAAD,EAAUC,aAAV,IAA2BP,KAAK,CAACQ,QAAN,CAAe,KAAf,CAAjC;;AAEA,WAASC,IAAT,GAAgB;AACdF,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD;;AACD,WAASG,mBAAT,GAA+B;AAC7BH,IAAAA,aAAa,CAAED,OAAD,IAAa,CAACA,OAAf,CAAb;AACD;;AACD,QAAMK,OAAO,GAAG,MACd,MAAC,oBAAD;AAAsB,IAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,MAAM,CAACS,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC5B,UAAMC,OAAO,GAAG,MAAM;AACpBN,MAAAA,IAAI;AACJJ,MAAAA,WAAW,CAACS,KAAD,CAAX;AACD,KAHD;;AAIA,UAAME,KAAK,GAAG;AACZC,MAAAA,UAAU,EAAEJ;AADA,KAAd;AAGA,WAAO;AAAQ,MAAA,GAAG,EAAEC,KAAb;AAAoB,MAAA,OAAO,EAAEC,OAA7B;AAAsC,MAAA,KAAK,EAAEC,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GATA,CADH,CADF;;AAcA,SACE,MAAC,OAAD;AACE,IAAA,OAAO,EAAEL,OAAO,EADlB;AAEE,IAAA,OAAO,EAAC,OAFV;AAGE,IAAA,OAAO,EAAEL,OAHX;AAIE,IAAA,eAAe,EAAEI,mBAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AACE,IAAA,KAAK,EAAE;AAAEQ,MAAAA,eAAe,EAAEf,MAAM,CAACC,YAAD;AAAzB,KADT;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAaD","sourcesContent":["import React from 'react';\nimport { Button } from 'antd';\nimport Popover from './uielements/popover';\nimport ColorChooserDropdown from './ColorChooser.style';\n\nexport default function ({ colors, seectedColor, changeColor }) {\n  const [visible, setVisibility] = React.useState(false);\n\n  function hide() {\n    setVisibility(false);\n  }\n  function handleVisibleChange() {\n    setVisibility((visible) => !visible);\n  }\n  const content = () => (\n    <ColorChooserDropdown className=\"isoColorOptions\">\n      {colors.map((color, index) => {\n        const onClick = () => {\n          hide();\n          changeColor(index);\n        };\n        const style = {\n          background: color,\n        };\n        return <Button key={index} onClick={onClick} style={style} />;\n      })}\n    </ColorChooserDropdown>\n  );\n  return (\n    <Popover\n      content={content()}\n      trigger=\"click\"\n      visible={visible}\n      onVisibleChange={handleVisibleChange}\n    >\n      <Button\n        style={{ backgroundColor: colors[seectedColor] }}\n        className=\"isoColorChooser\"\n      />\n    </Popover>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}