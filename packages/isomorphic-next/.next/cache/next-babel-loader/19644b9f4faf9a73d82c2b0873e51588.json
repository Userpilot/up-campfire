{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchProfileDataEffect),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(profileSaga);\n\n// saga.js\nimport { all, takeEvery, put } from 'redux-saga/effects';\nimport profileActions from './actions';\nimport DemoProfileData from './profile.data';\n\nfunction fetchProfileDataEffect() {\n  var profile;\n  return _regeneratorRuntime.wrap(function fetchProfileDataEffect$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          profile = DemoProfileData;\n          _context.next = 4;\n          return put(profileActions.fetchProfileDataSuccess(profile));\n\n        case 4:\n          _context.next = 10;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 10;\n          return put(profileActions.fetchProfileDataFailure(_context.t0));\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 6]]);\n}\n\nexport default function profileSaga() {\n  return _regeneratorRuntime.wrap(function profileSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return all([takeEvery(profileActions.FETCH_PROFILE_DATA_START, fetchProfileDataEffect)]);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/redux/profile/saga.js"],"names":["fetchProfileDataEffect","profileSaga","all","takeEvery","put","profileActions","DemoProfileData","profile","fetchProfileDataSuccess","fetchProfileDataFailure","FETCH_PROFILE_DATA_START"],"mappings":";;oDAKUA,sB;qDASeC,W;;AAdzB;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,QAAoC,oBAApC;AACA,OAAOC,cAAP,MAA2B,WAA3B;AACA,OAAOC,eAAP,MAA4B,gBAA5B;;AAEA,SAAUN,sBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQO,UAAAA,OAFR,GAEkBD,eAFlB;AAAA;AAGI,iBAAMF,GAAG,CAACC,cAAc,CAACG,uBAAf,CAAuCD,OAAvC,CAAD,CAAT;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKI,iBAAMH,GAAG,CAACC,cAAc,CAACI,uBAAf,aAAD,CAAT;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,eAAe,SAAUR,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CACRC,SAAS,CAACE,cAAc,CAACK,wBAAhB,EAA0CV,sBAA1C,CADD,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// saga.js\nimport { all, takeEvery, put } from 'redux-saga/effects';\nimport profileActions from './actions';\nimport DemoProfileData from './profile.data';\n\nfunction* fetchProfileDataEffect() {\n  try {\n    let profile = DemoProfileData;\n    yield put(profileActions.fetchProfileDataSuccess(profile));\n  } catch (error) {\n    yield put(profileActions.fetchProfileDataFailure(error));\n  }\n}\n\nexport default function* profileSaga() {\n  yield all([\n    takeEvery(profileActions.FETCH_PROFILE_DATA_START, fetchProfileDataEffect),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}