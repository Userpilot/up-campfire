{"ast":null,"code":"var _jsxFileName = \"/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/components/Algolia/VoiceRecognition.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport SpeechRecognition from 'react-speech-recognition';\nimport { VoiceSearchWrapper } from './AlgoliaComponent.style';\nconst propTypes = {\n  transcript: PropTypes.string,\n  resetTranscript: PropTypes.func,\n  browserSupportsSpeechRecognition: PropTypes.bool\n};\nconst options = {\n  autoStart: false\n};\n\nclass VoiceRecognition extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      listening: false\n    });\n  }\n\n  render() {\n    const {\n      transcript,\n      resetTranscript,\n      browserSupportsSpeechRecognition,\n      startListening,\n      stopListening,\n      setVoice\n    } = this.props;\n\n    if (!browserSupportsSpeechRecognition) {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return __jsx(VoiceSearchWrapper, {\n      className: \"isoVoiceSearch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, !this.state.listening ? __jsx(\"div\", {\n      className: \"isoVoiceSearchStart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, __jsx(\"button\", {\n      onClick: () => {\n        startListening();\n        this.setState({\n          listening: true\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, \"Start Speaking\")) : __jsx(\"div\", {\n      className: \"isoVoiceSearchRunning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, __jsx(\"button\", {\n      onClick: () => {\n        setVoice(transcript);\n        resetTranscript();\n        stopListening();\n        this.setState({\n          listening: false\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, transcript)));\n  }\n\n}\n\nVoiceRecognition.propTypes = propTypes;\nexport default SpeechRecognition(options)(VoiceRecognition);","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/components/Algolia/VoiceRecognition.js"],"names":["React","Component","PropTypes","SpeechRecognition","VoiceSearchWrapper","propTypes","transcript","string","resetTranscript","func","browserSupportsSpeechRecognition","bool","options","autoStart","VoiceRecognition","listening","render","startListening","stopListening","setVoice","props","state","setState"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AACA,SAASC,kBAAT,QAAmC,0BAAnC;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAEJ,SAAS,CAACK,MADN;AAEhBC,EAAAA,eAAe,EAAEN,SAAS,CAACO,IAFX;AAGhBC,EAAAA,gCAAgC,EAAER,SAAS,CAACS;AAH5B,CAAlB;AAKA,MAAMC,OAAO,GAAG;AACdC,EAAAA,SAAS,EAAE;AADG,CAAhB;;AAGA,MAAMC,gBAAN,SAA+Bb,SAA/B,CAAyC;AAAA;AAAA;;AAAA,mCAC/B;AACNc,MAAAA,SAAS,EAAE;AADL,KAD+B;AAAA;;AAIvCC,EAAAA,MAAM,GAAG;AACP,UAAM;AACJV,MAAAA,UADI;AAEJE,MAAAA,eAFI;AAGJE,MAAAA,gCAHI;AAIJO,MAAAA,cAJI;AAKJC,MAAAA,aALI;AAMJC,MAAAA;AANI,QAOF,KAAKC,KAPT;;AAQA,QAAI,CAACV,gCAAL,EAAuC;AACrC,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,WACE,MAAC,kBAAD;AAAoB,MAAA,SAAS,EAAC,gBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC,KAAKW,KAAL,CAAWN,SAAZ,GACC;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,OAAO,EAAE,MAAM;AACbE,QAAAA,cAAc;AACd,aAAKK,QAAL,CAAc;AAAEP,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF,CADD,GAWC;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,OAAO,EAAE,MAAM;AACbI,QAAAA,QAAQ,CAACb,UAAD,CAAR;AACAE,QAAAA,eAAe;AACfU,QAAAA,aAAa;AACb,aAAKI,QAAL,CAAc;AAAEP,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOT,UAAP,CAVF,CAZJ,CADF;AA4BD;;AA5CsC;;AA8CzCQ,gBAAgB,CAACT,SAAjB,GAA6BA,SAA7B;AACA,eAAeF,iBAAiB,CAACS,OAAD,CAAjB,CAA2BE,gBAA3B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport SpeechRecognition from 'react-speech-recognition';\nimport { VoiceSearchWrapper } from './AlgoliaComponent.style';\n\nconst propTypes = {\n  transcript: PropTypes.string,\n  resetTranscript: PropTypes.func,\n  browserSupportsSpeechRecognition: PropTypes.bool,\n};\nconst options = {\n  autoStart: false,\n};\nclass VoiceRecognition extends Component {\n  state = {\n    listening: false,\n  };\n  render() {\n    const {\n      transcript,\n      resetTranscript,\n      browserSupportsSpeechRecognition,\n      startListening,\n      stopListening,\n      setVoice,\n    } = this.props;\n    if (!browserSupportsSpeechRecognition) {\n      return <div />;\n    }\n    return (\n      <VoiceSearchWrapper className=\"isoVoiceSearch\">\n        {!this.state.listening ? (\n          <div className=\"isoVoiceSearchStart\">\n            <button\n              onClick={() => {\n                startListening();\n                this.setState({ listening: true });\n              }}\n            />\n            <span>Start Speaking</span>\n          </div>\n        ) : (\n          <div className=\"isoVoiceSearchRunning\">\n            <button\n              onClick={() => {\n                setVoice(transcript);\n                resetTranscript();\n                stopListening();\n                this.setState({ listening: false });\n              }}\n            />\n            {/* <span>Search</span> */}\n            <span>{transcript}</span>\n          </div>\n        )}\n      </VoiceSearchWrapper>\n    );\n  }\n}\nVoiceRecognition.propTypes = propTypes;\nexport default SpeechRecognition(options)(VoiceRecognition);\n"]},"metadata":{},"sourceType":"module"}