{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { fakedata } from './config';\nimport cardActions from './actions';\nconst cards = fakedata;\nconst initState = {\n  cards\n};\nexport default function cardReducer(state = initState, action) {\n  switch (action.type) {\n    case cardActions.CHANGE_CARDS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        cards: action.cards\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/redux/card/reducer.js"],"names":["fakedata","cardActions","cards","initState","cardReducer","state","action","type","CHANGE_CARDS"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,UAAzB;AACA,OAAOC,WAAP,MAAwB,WAAxB;AAEA,MAAMC,KAAK,GAAGF,QAAd;AAEA,MAAMG,SAAS,GAAG;AAChBD,EAAAA;AADgB,CAAlB;AAIA,eAAe,SAASE,WAAT,CAAqBC,KAAK,GAAGF,SAA7B,EAAwCG,MAAxC,EAAgD;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,WAAW,CAACO,YAAjB;AACE,6CACKH,KADL;AAEEH,QAAAA,KAAK,EAAEI,MAAM,CAACJ;AAFhB;;AAIF;AACE,aAAOG,KAAP;AAPJ;AASD","sourcesContent":["import { fakedata } from './config';\nimport cardActions from './actions';\n\nconst cards = fakedata;\n\nconst initState = {\n  cards,\n};\n\nexport default function cardReducer(state = initState, action) {\n  switch (action.type) {\n    case cardActions.CHANGE_CARDS:\n      return {\n        ...state,\n        cards: action.cards,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}