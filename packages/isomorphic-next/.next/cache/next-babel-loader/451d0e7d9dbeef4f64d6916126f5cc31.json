{"ast":null,"code":"import { all, takeEvery, put } from 'redux-saga/effects';\nimport { localDataName, createDemoData } from './config';\nimport actions from './actions';\nexport function* getInvoice() {\n  yield put({\n    type: actions.UPDATE_INVOICE,\n    invoices: createDemoData()\n  });\n}\nexport function* updateInvoiceSaga({\n  invoices,\n  invoice\n}) {\n  yield localStorage.setItem(localDataName, JSON.stringify(invoices));\n  yield put({\n    type: actions.UPDATE_INVOICE,\n    invoices,\n    invoice\n  });\n}\nexport default function* rootSaga() {\n  yield all([yield takeEvery(actions.GET_INVOICE, getInvoice), yield takeEvery(actions.UPDATE_INVOICE_SAGA, updateInvoiceSaga)]);\n}","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/redux/invoice/saga.js"],"names":["all","takeEvery","put","localDataName","createDemoData","actions","getInvoice","type","UPDATE_INVOICE","invoices","updateInvoiceSaga","invoice","localStorage","setItem","JSON","stringify","rootSaga","GET_INVOICE","UPDATE_INVOICE_SAGA"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,QAAoC,oBAApC;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,UAA9C;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,UAAUC,UAAV,GAAuB;AAC5B,QAAMJ,GAAG,CAAC;AACRK,IAAAA,IAAI,EAAEF,OAAO,CAACG,cADN;AAERC,IAAAA,QAAQ,EAAEL,cAAc;AAFhB,GAAD,CAAT;AAID;AACD,OAAO,UAAUM,iBAAV,CAA4B;AAAED,EAAAA,QAAF;AAAYE,EAAAA;AAAZ,CAA5B,EAAmD;AACxD,QAAMC,YAAY,CAACC,OAAb,CAAqBV,aAArB,EAAoCW,IAAI,CAACC,SAAL,CAAeN,QAAf,CAApC,CAAN;AACA,QAAMP,GAAG,CAAC;AACRK,IAAAA,IAAI,EAAEF,OAAO,CAACG,cADN;AAERC,IAAAA,QAFQ;AAGRE,IAAAA;AAHQ,GAAD,CAAT;AAKD;AACD,eAAe,UAAUK,QAAV,GAAqB;AAClC,QAAMhB,GAAG,CAAC,CACR,MAAMC,SAAS,CAACI,OAAO,CAACY,WAAT,EAAsBX,UAAtB,CADP,EAER,MAAML,SAAS,CAACI,OAAO,CAACa,mBAAT,EAA8BR,iBAA9B,CAFP,CAAD,CAAT;AAID","sourcesContent":["import { all, takeEvery, put } from 'redux-saga/effects';\nimport { localDataName, createDemoData } from './config';\nimport actions from './actions';\n\nexport function* getInvoice() {\n  yield put({\n    type: actions.UPDATE_INVOICE,\n    invoices: createDemoData(),\n  });\n}\nexport function* updateInvoiceSaga({ invoices, invoice }) {\n  yield localStorage.setItem(localDataName, JSON.stringify(invoices));\n  yield put({\n    type: actions.UPDATE_INVOICE,\n    invoices,\n    invoice,\n  });\n}\nexport default function* rootSaga() {\n  yield all([\n    yield takeEvery(actions.GET_INVOICE, getInvoice),\n    yield takeEvery(actions.UPDATE_INVOICE_SAGA, updateInvoiceSaga),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}