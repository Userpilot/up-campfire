{"ast":null,"code":"import _Layout from \"antd/lib/layout\";\nvar _jsxFileName = \"/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/containers/Note/Note.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport noteActions from '@iso/redux/notes/actions';\nimport NoteList from './NoteList';\nimport { ColorChoser } from '@iso/components/';\nimport Button from '@iso/components/uielements/button';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport NoteComponentWrapper from './Note.styles';\nimport { Textarea } from '@iso/components/uielements/input';\nconst {\n  changeNote,\n  addNote,\n  editNote,\n  deleteNote,\n  changeColor\n} = noteActions;\nconst {\n  Header,\n  Content\n} = _Layout;\nexport default function Notes() {\n  const {\n    notes,\n    selectedId,\n    colors,\n    seectedColor\n  } = useSelector(state => state.Notes);\n  const dispatch = useDispatch();\n\n  function updateNote(event) {\n    dispatch(editNote(selectedId, event.target.value));\n  }\n\n  const selectedNote = selectedId !== undefined ? notes.filter(note => note.id === selectedId)[0] : null;\n  return __jsx(NoteComponentWrapper, {\n    className: \"isomorphicNoteComponent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: '340px'\n    },\n    className: \"isoNoteListSidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(NoteList, {\n    notes: notes,\n    selectedId: selectedId,\n    changeNote: id => dispatch(changeNote(id)),\n    deleteNote: id => dispatch(deleteNote(id)),\n    colors: colors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })), __jsx(_Layout, {\n    className: \"isoNotepadWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(Header, {\n    className: \"isoHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, selectedId !== undefined ? __jsx(\"div\", {\n    className: \"isoColorChooseWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, __jsx(ColorChoser, {\n    colors: colors,\n    changeColor: v => dispatch(changeColor(v)),\n    seectedColor: seectedColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, __jsx(IntlMessages, {\n    id: \"notes.ChoseColor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }))) : '', __jsx(Button, {\n    type: \"primary\",\n    className: \"isoAddNoteBtn\",\n    onClick: () => dispatch(addNote()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, __jsx(IntlMessages, {\n    id: \"notes.addNote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }))), __jsx(Content, {\n    className: \"isoNoteEditingArea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, selectedId !== undefined ? __jsx(Textarea, {\n    className: \"isoNoteTextbox\",\n    value: selectedNote.note,\n    onChange: updateNote,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }) : '')));\n}","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/containers/Note/Note.js"],"names":["React","useSelector","useDispatch","noteActions","NoteList","ColorChoser","Button","IntlMessages","NoteComponentWrapper","Textarea","changeNote","addNote","editNote","deleteNote","changeColor","Header","Content","Notes","notes","selectedId","colors","seectedColor","state","dispatch","updateNote","event","target","value","selectedNote","undefined","filter","note","id","width","v"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Layout } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport noteActions from '@iso/redux/notes/actions';\nimport NoteList from './NoteList';\nimport { ColorChoser } from '@iso/components/';\nimport Button from '@iso/components/uielements/button';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport NoteComponentWrapper from './Note.styles';\nimport { Textarea } from '@iso/components/uielements/input';\n\nconst { changeNote, addNote, editNote, deleteNote, changeColor } = noteActions;\nconst { Header, Content } = Layout;\nexport default function Notes() {\n  const { notes, selectedId, colors, seectedColor } = useSelector(\n    (state) => state.Notes\n  );\n  const dispatch = useDispatch();\n  function updateNote(event) {\n    dispatch(editNote(selectedId, event.target.value));\n  }\n  const selectedNote =\n    selectedId !== undefined\n      ? notes.filter((note) => note.id === selectedId)[0]\n      : null;\n  return (\n    <NoteComponentWrapper className=\"isomorphicNoteComponent\">\n      <div style={{ width: '340px' }} className=\"isoNoteListSidebar\">\n        <NoteList\n          notes={notes}\n          selectedId={selectedId}\n          changeNote={(id) => dispatch(changeNote(id))}\n          deleteNote={(id) => dispatch(deleteNote(id))}\n          colors={colors}\n        />\n      </div>\n      <Layout className=\"isoNotepadWrapper\">\n        <Header className=\"isoHeader\">\n          {selectedId !== undefined ? (\n            <div className=\"isoColorChooseWrapper\">\n              <ColorChoser\n                colors={colors}\n                changeColor={(v) => dispatch(changeColor(v))}\n                seectedColor={seectedColor}\n              />\n              <span>\n                <IntlMessages id=\"notes.ChoseColor\" />\n              </span>\n            </div>\n          ) : (\n            ''\n          )}\n          <Button\n            type=\"primary\"\n            className=\"isoAddNoteBtn\"\n            onClick={() => dispatch(addNote())}\n          >\n            <IntlMessages id=\"notes.addNote\" />\n          </Button>\n        </Header>\n        <Content className=\"isoNoteEditingArea\">\n          {selectedId !== undefined ? (\n            <Textarea\n              className=\"isoNoteTextbox\"\n              value={selectedNote.note}\n              onChange={updateNote}\n              autoFocus\n            />\n          ) : (\n            ''\n          )}\n          {/*{selectedId !== undefined ? <span>{`created at ${selectedNote.createTime}`}</span> : ''}*/}\n        </Content>\n      </Layout>\n    </NoteComponentWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}