{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/containers/Tables/AntTables/TableViews/CustomizedView.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport TableWrapper, { CustomizedTableWrapper } from '../AntTables.styles';\nimport Switch from '@iso/components/uielements/switch';\nimport Form from '@iso/components/uielements/form';\nvar FormItem = Form.Item;\n\nvar expandedRowRender = function expandedRowRender(record) {\n  return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 3\n    }\n  }, \"\".concat(record.firstName, \" lives in \").concat(record.city));\n};\n\nvar title = function title() {\n  return 'Here is title';\n};\n\nvar showHeader = true;\n\nvar footer = function footer() {\n  return 'Here is footer';\n};\n\nvar scroll = {\n  y: 240\n};\nvar toggleOptions = [{\n  defaultValue: true,\n  title: 'Bordered',\n  key: 'bordered'\n}, {\n  defaultValue: true,\n  title: 'Loading',\n  key: 'loading'\n}, {\n  defaultValue: true,\n  title: 'Pagination',\n  key: 'pagination'\n}, {\n  defaultValue: title,\n  title: 'Title',\n  key: 'title'\n}, {\n  defaultValue: showHeader,\n  title: 'Show Header',\n  key: 'showHeader'\n}, {\n  defaultValue: footer,\n  title: 'Footer',\n  key: 'footer'\n}, {\n  defaultValue: expandedRowRender,\n  title: 'Expanded Row Render',\n  key: 'expandedRowRender'\n}, {\n  defaultValue: {},\n  title: 'Checkbox',\n  key: 'rowSelection'\n}, {\n  defaultValue: scroll,\n  title: 'Scrollable',\n  key: 'scroll'\n}];\nexport default function (props) {\n  var _React$useState = React.useState({\n    bordered: undefined,\n    loading: undefined,\n    pagination: true,\n    size: 'default',\n    expandedRowRender: expandedRowRender,\n    title: title,\n    showHeader: showHeader,\n    footer: footer,\n    rowSelection: {},\n    scroll: undefined\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  function renderSwitch(option) {\n    var checked = state[option.key] !== undefined;\n\n    var onChange = function onChange() {\n      if (!checked) {\n        setState(_defineProperty({}, option.key, option.defaultValue));\n      } else {\n        setState(_defineProperty({}, option.key, undefined));\n      }\n    };\n\n    return __jsx(FormItem, {\n      label: option.title,\n      key: option.key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, __jsx(Switch, {\n      checked: checked,\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return __jsx(CustomizedTableWrapper, {\n    className: \"isoCustomizedTableWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"isoCustomizedTableControlBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    layout: \"inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, toggleOptions.map(function (option) {\n    return renderSwitch(option);\n  }))), __jsx(TableWrapper, _extends({}, state, {\n    columns: props.tableInfo.columns,\n    dataSource: props.dataList.getAll(),\n    className: \"isoCustomizedTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/containers/Tables/AntTables/TableViews/CustomizedView.js"],"names":["React","TableWrapper","CustomizedTableWrapper","Switch","Form","FormItem","Item","expandedRowRender","record","firstName","city","title","showHeader","footer","scroll","y","toggleOptions","defaultValue","key","props","useState","bordered","undefined","loading","pagination","size","rowSelection","state","setState","renderSwitch","option","checked","onChange","map","tableInfo","columns","dataList","getAll"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TableWrapper, { CustomizedTableWrapper } from '../AntTables.styles';\nimport Switch from '@iso/components/uielements/switch';\nimport Form from '@iso/components/uielements/form';\nconst FormItem = Form.Item;\n\nconst expandedRowRender = record => (\n  <p>{`${record.firstName} lives in ${record.city}`}</p>\n);\nconst title = () => 'Here is title';\nconst showHeader = true;\nconst footer = () => 'Here is footer';\nconst scroll = { y: 240 };\n\nconst toggleOptions = [\n  {\n    defaultValue: true,\n    title: 'Bordered',\n    key: 'bordered',\n  },\n  {\n    defaultValue: true,\n    title: 'Loading',\n    key: 'loading',\n  },\n  {\n    defaultValue: true,\n    title: 'Pagination',\n    key: 'pagination',\n  },\n  {\n    defaultValue: title,\n    title: 'Title',\n    key: 'title',\n  },\n  {\n    defaultValue: showHeader,\n    title: 'Show Header',\n    key: 'showHeader',\n  },\n  {\n    defaultValue: footer,\n    title: 'Footer',\n    key: 'footer',\n  },\n  {\n    defaultValue: expandedRowRender,\n    title: 'Expanded Row Render',\n    key: 'expandedRowRender',\n  },\n  {\n    defaultValue: {},\n    title: 'Checkbox',\n    key: 'rowSelection',\n  },\n  {\n    defaultValue: scroll,\n    title: 'Scrollable',\n    key: 'scroll',\n  },\n];\nexport default function(props) {\n  const [state, setState] = React.useState({\n    bordered: undefined,\n    loading: undefined,\n    pagination: true,\n    size: 'default',\n    expandedRowRender,\n    title,\n    showHeader,\n    footer,\n    rowSelection: {},\n    scroll: undefined,\n  });\n\n  function renderSwitch(option) {\n    const checked = state[option.key] !== undefined;\n    const onChange = () => {\n      if (!checked) {\n        setState({ [option.key]: option.defaultValue });\n      } else {\n        setState({ [option.key]: undefined });\n      }\n    };\n    return (\n      <FormItem label={option.title} key={option.key}>\n        <Switch checked={checked} onChange={onChange} />\n      </FormItem>\n    );\n  }\n  return (\n    <CustomizedTableWrapper className=\"isoCustomizedTableWrapper\">\n      <div className=\"isoCustomizedTableControlBar\">\n        <Form layout=\"inline\">\n          {toggleOptions.map(option => renderSwitch(option))}\n        </Form>\n      </div>\n      <TableWrapper\n        {...state}\n        columns={props.tableInfo.columns}\n        dataSource={props.dataList.getAll()}\n        className=\"isoCustomizedTable\"\n      />\n    </CustomizedTableWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}