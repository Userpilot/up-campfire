{"ast":null,"code":"import { Map } from 'immutable';\nexport function clearToken() {\n  localStorage.removeItem('id_token');\n}\nexport function getToken() {\n  try {\n    var idToken = localStorage.getItem('id_token');\n    return new Map({\n      idToken: idToken\n    });\n  } catch (err) {\n    clearToken();\n    return new Map();\n  }\n}\nexport function arrayEqual(array1, array2) {\n  return array1.sort().toString() == array2.sort().toString();\n}\nexport function timeDifference(givenTime) {\n  givenTime = new Date(givenTime);\n  var milliseconds = new Date().getTime() - givenTime.getTime();\n\n  var numberEnding = function numberEnding(number) {\n    return number > 1 ? 's' : '';\n  };\n\n  var number = function number(num) {\n    return num > 9 ? '' + num : '0' + num;\n  };\n\n  var getTime = function getTime() {\n    var temp = Math.floor(milliseconds / 1000);\n    var years = Math.floor(temp / 31536000);\n\n    if (years) {\n      var month = number(givenTime.getUTCMonth() + 1);\n      var day = number(givenTime.getUTCDate());\n      var year = givenTime.getUTCFullYear() % 100;\n      return \"\".concat(day, \"-\").concat(month, \"-\").concat(year);\n    }\n\n    var days = Math.floor((temp %= 31536000) / 86400);\n\n    if (days) {\n      if (days < 28) {\n        return days + ' day' + numberEnding(days);\n      } else {\n        var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        var _month = months[givenTime.getUTCMonth()];\n\n        var _day = number(givenTime.getUTCDate());\n\n        return \"\".concat(_day, \" \").concat(_month);\n      }\n    }\n\n    var hours = Math.floor((temp %= 86400) / 3600);\n\n    if (hours) {\n      return \"\".concat(hours, \" hour\").concat(numberEnding(hours), \" ago\");\n    }\n\n    var minutes = Math.floor((temp %= 3600) / 60);\n\n    if (minutes) {\n      return \"\".concat(minutes, \" minute\").concat(numberEnding(minutes), \" ago\");\n    }\n\n    return 'a few seconds ago';\n  };\n\n  return getTime();\n}\nexport function stringToInt(value) {\n  var defValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  if (!value) {\n    return 0;\n  } else if (!isNaN(value)) {\n    return parseInt(value, 10);\n  }\n\n  return defValue;\n}\nexport function stringToPosetiveInt(value) {\n  var defValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var val = stringToInt(value, defValue);\n  return val > -1 ? val : defValue;\n}","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/lib/helpers/utility.js"],"names":["Map","clearToken","localStorage","removeItem","getToken","idToken","getItem","err","arrayEqual","array1","array2","sort","toString","timeDifference","givenTime","Date","milliseconds","getTime","numberEnding","number","num","temp","Math","floor","years","month","getUTCMonth","day","getUTCDate","year","getUTCFullYear","days","months","hours","minutes","stringToInt","value","defValue","isNaN","parseInt","stringToPosetiveInt","val"],"mappings":"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","sourcesContent":["import { Map } from 'immutable';\n\nexport function clearToken() {\n  localStorage.removeItem('id_token');\n}\n\nexport function getToken() {\n  try {\n    const idToken = localStorage.getItem('id_token');\n    return new Map({ idToken });\n  } catch (err) {\n    clearToken();\n    return new Map();\n  }\n}\n\nexport function arrayEqual(array1, array2) {\n  return array1.sort().toString() == array2.sort().toString();\n}\n\nexport function timeDifference(givenTime) {\n  givenTime = new Date(givenTime);\n  const milliseconds = new Date().getTime() - givenTime.getTime();\n  const numberEnding = number => {\n    return number > 1 ? 's' : '';\n  };\n  const number = num => (num > 9 ? '' + num : '0' + num);\n  const getTime = () => {\n    let temp = Math.floor(milliseconds / 1000);\n    const years = Math.floor(temp / 31536000);\n    if (years) {\n      const month = number(givenTime.getUTCMonth() + 1);\n      const day = number(givenTime.getUTCDate());\n      const year = givenTime.getUTCFullYear() % 100;\n      return `${day}-${month}-${year}`;\n    }\n    const days = Math.floor((temp %= 31536000) / 86400);\n    if (days) {\n      if (days < 28) {\n        return days + ' day' + numberEnding(days);\n      } else {\n        const months = [\n          'Jan',\n          'Feb',\n          'Mar',\n          'Apr',\n          'May',\n          'Jun',\n          'Jul',\n          'Aug',\n          'Sep',\n          'Oct',\n          'Nov',\n          'Dec',\n        ];\n        const month = months[givenTime.getUTCMonth()];\n        const day = number(givenTime.getUTCDate());\n        return `${day} ${month}`;\n      }\n    }\n    const hours = Math.floor((temp %= 86400) / 3600);\n    if (hours) {\n      return `${hours} hour${numberEnding(hours)} ago`;\n    }\n    const minutes = Math.floor((temp %= 3600) / 60);\n    if (minutes) {\n      return `${minutes} minute${numberEnding(minutes)} ago`;\n    }\n    return 'a few seconds ago';\n  };\n  return getTime();\n}\n\nexport function stringToInt(value, defValue = 0) {\n  if (!value) {\n    return 0;\n  } else if (!isNaN(value)) {\n    return parseInt(value, 10);\n  }\n  return defValue;\n}\nexport function stringToPosetiveInt(value, defValue = 0) {\n  const val = stringToInt(value, defValue);\n  return val > -1 ? val : defValue;\n}\n"]},"metadata":{},"sourceType":"module"}