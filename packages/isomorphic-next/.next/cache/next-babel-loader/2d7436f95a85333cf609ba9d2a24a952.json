{"ast":null,"code":"var actions = {\n  GET_INVOICE: 'GET_INVOICE',\n  UPDATE_INVOICE: 'UPDATE_INVOICE',\n  UPDATE_INVOICE_SAGA: 'UPDATE_INVOICE_SAGA',\n  SELECT_CURRENT_INVOICE: 'SELECT_CURRENT_INVOICE',\n  TOGGLE_VIEW: 'INVOICE_TOGGLE_VIEW',\n  UPDATE_EDIT_INVOICE: 'INVOICE_UPDATE_EDIT_INVOICE',\n  initData: function initData() {\n    return {\n      type: actions.GET_INVOICE\n    };\n  },\n  deleteInvoice: function deleteInvoice(selected) {\n    return function (dispatch, getState) {\n      var invoices = getState().Invoices.invoices;\n      var newInvoices = [];\n      invoices.forEach(function (invoice) {\n        var selectedIndex = selected.indexOf(invoice.key);\n\n        if (selectedIndex === -1) {\n          newInvoices.push(invoice);\n        }\n      });\n      dispatch({\n        type: actions.UPDATE_INVOICE_SAGA,\n        invoices: newInvoices\n      });\n    };\n  },\n  updateInvoice: function updateInvoice(invoice) {\n    return function (dispatch, getState) {\n      var invoices = getState().Invoices.invoices;\n      var index = invoices.map(function (inv) {\n        return inv.id;\n      }).indexOf(invoice.id);\n\n      if (index === -1) {\n        invoices.push(invoice);\n      } else {\n        invoices[index] = invoice;\n      }\n\n      dispatch({\n        type: actions.UPDATE_INVOICE_SAGA,\n        invoices: invoices,\n        invoice: invoice\n      });\n    };\n  },\n  selectCurrentInvoice: function selectCurrentInvoice(id) {\n    return {\n      type: actions.SELECT_CURRENT_INVOICE,\n      id: id\n    };\n  },\n  toggleView: function toggleView(view) {\n    return {\n      type: actions.TOGGLE_VIEW,\n      view: view\n    };\n  },\n  editInvoice: function editInvoice(invoice) {\n    return {\n      type: actions.UPDATE_EDIT_INVOICE,\n      invoice: invoice\n    };\n  }\n};\nexport default actions;","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/redux/invoice/actions.js"],"names":["actions","GET_INVOICE","UPDATE_INVOICE","UPDATE_INVOICE_SAGA","SELECT_CURRENT_INVOICE","TOGGLE_VIEW","UPDATE_EDIT_INVOICE","initData","type","deleteInvoice","selected","dispatch","getState","invoices","Invoices","newInvoices","forEach","invoice","selectedIndex","indexOf","key","push","updateInvoice","index","map","inv","id","selectCurrentInvoice","toggleView","view","editInvoice"],"mappings":"AAAA,IAAMA,OAAO,GAAG;AACdC,EAAAA,WAAW,EAAE,aADC;AAEdC,EAAAA,cAAc,EAAE,gBAFF;AAGdC,EAAAA,mBAAmB,EAAE,qBAHP;AAIdC,EAAAA,sBAAsB,EAAE,wBAJV;AAKdC,EAAAA,WAAW,EAAE,qBALC;AAMdC,EAAAA,mBAAmB,EAAE,6BANP;AAOdC,EAAAA,QAAQ,EAAE;AAAA,WAAO;AAAEC,MAAAA,IAAI,EAAER,OAAO,CAACC;AAAhB,KAAP;AAAA,GAPI;AAQdQ,EAAAA,aAAa,EAAE,uBAAAC,QAAQ,EAAI;AACzB,WAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC7B,UAAMC,QAAQ,GAAGD,QAAQ,GAAGE,QAAX,CAAoBD,QAArC;AACA,UAAME,WAAW,GAAG,EAApB;AACAF,MAAAA,QAAQ,CAACG,OAAT,CAAiB,UAAAC,OAAO,EAAI;AAC1B,YAAMC,aAAa,GAAGR,QAAQ,CAACS,OAAT,CAAiBF,OAAO,CAACG,GAAzB,CAAtB;;AACA,YAAIF,aAAa,KAAK,CAAC,CAAvB,EAA0B;AACxBH,UAAAA,WAAW,CAACM,IAAZ,CAAiBJ,OAAjB;AACD;AACF,OALD;AAMAN,MAAAA,QAAQ,CAAC;AACPH,QAAAA,IAAI,EAAER,OAAO,CAACG,mBADP;AAEPU,QAAAA,QAAQ,EAAEE;AAFH,OAAD,CAAR;AAID,KAbD;AAcD,GAvBa;AAwBdO,EAAAA,aAAa,EAAE,uBAAAL,OAAO,EAAI;AACxB,WAAO,UAACN,QAAD,EAAWC,QAAX,EAAwB;AAC7B,UAAMC,QAAQ,GAAGD,QAAQ,GAAGE,QAAX,CAAoBD,QAArC;AACA,UAAMU,KAAK,GAAGV,QAAQ,CAACW,GAAT,CAAa,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,EAAR;AAAA,OAAhB,EAA4BP,OAA5B,CAAoCF,OAAO,CAACS,EAA5C,CAAd;;AACA,UAAIH,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBV,QAAAA,QAAQ,CAACQ,IAAT,CAAcJ,OAAd;AACD,OAFD,MAEO;AACLJ,QAAAA,QAAQ,CAACU,KAAD,CAAR,GAAkBN,OAAlB;AACD;;AACDN,MAAAA,QAAQ,CAAC;AACPH,QAAAA,IAAI,EAAER,OAAO,CAACG,mBADP;AAEPU,QAAAA,QAAQ,EAARA,QAFO;AAGPI,QAAAA,OAAO,EAAPA;AAHO,OAAD,CAAR;AAKD,KAbD;AAcD,GAvCa;AAwCdU,EAAAA,oBAAoB,EAAE,8BAAAD,EAAE;AAAA,WAAK;AAAElB,MAAAA,IAAI,EAAER,OAAO,CAACI,sBAAhB;AAAwCsB,MAAAA,EAAE,EAAFA;AAAxC,KAAL;AAAA,GAxCV;AAyCdE,EAAAA,UAAU,EAAE,oBAAAC,IAAI;AAAA,WAAK;AAAErB,MAAAA,IAAI,EAAER,OAAO,CAACK,WAAhB;AAA6BwB,MAAAA,IAAI,EAAJA;AAA7B,KAAL;AAAA,GAzCF;AA0CdC,EAAAA,WAAW,EAAE,qBAAAb,OAAO;AAAA,WAAK;AAAET,MAAAA,IAAI,EAAER,OAAO,CAACM,mBAAhB;AAAqCW,MAAAA,OAAO,EAAPA;AAArC,KAAL;AAAA;AA1CN,CAAhB;AA4CA,eAAejB,OAAf","sourcesContent":["const actions = {\n  GET_INVOICE: 'GET_INVOICE',\n  UPDATE_INVOICE: 'UPDATE_INVOICE',\n  UPDATE_INVOICE_SAGA: 'UPDATE_INVOICE_SAGA',\n  SELECT_CURRENT_INVOICE: 'SELECT_CURRENT_INVOICE',\n  TOGGLE_VIEW: 'INVOICE_TOGGLE_VIEW',\n  UPDATE_EDIT_INVOICE: 'INVOICE_UPDATE_EDIT_INVOICE',\n  initData: () => ({ type: actions.GET_INVOICE }),\n  deleteInvoice: selected => {\n    return (dispatch, getState) => {\n      const invoices = getState().Invoices.invoices;\n      const newInvoices = [];\n      invoices.forEach(invoice => {\n        const selectedIndex = selected.indexOf(invoice.key);\n        if (selectedIndex === -1) {\n          newInvoices.push(invoice);\n        }\n      });\n      dispatch({\n        type: actions.UPDATE_INVOICE_SAGA,\n        invoices: newInvoices,\n      });\n    };\n  },\n  updateInvoice: invoice => {\n    return (dispatch, getState) => {\n      const invoices = getState().Invoices.invoices;\n      const index = invoices.map(inv => inv.id).indexOf(invoice.id);\n      if (index === -1) {\n        invoices.push(invoice);\n      } else {\n        invoices[index] = invoice;\n      }\n      dispatch({\n        type: actions.UPDATE_INVOICE_SAGA,\n        invoices,\n        invoice,\n      });\n    };\n  },\n  selectCurrentInvoice: id => ({ type: actions.SELECT_CURRENT_INVOICE, id }),\n  toggleView: view => ({ type: actions.TOGGLE_VIEW, view }),\n  editInvoice: invoice => ({ type: actions.UPDATE_EDIT_INVOICE, invoice }),\n};\nexport default actions;\n"]},"metadata":{},"sourceType":"module"}