{"ast":null,"code":"const todoActions = {\n  CHANGE_TODO: 'CHANGE_TODO',\n  ALL_COMPLETED: 'ALL_COMPLETED',\n  DELETE_COMPLETED: 'DELETE_COMPLETED',\n  addTodo: todo => {\n    return (dispatch, getState) => {\n      const newTodo = {\n        id: new Date(),\n        todo: todo,\n        createTime: new Date(),\n        color: 0,\n        completed: false\n      };\n      const todos = [newTodo, ...getState().Todos.todos];\n      dispatch({\n        type: todoActions.CHANGE_TODO,\n        todos\n      });\n    };\n  },\n  edittodo: editTodo => {\n    return (dispatch, getState) => {\n      const oldTodos = getState().Todos.todos;\n      const todos = [];\n      oldTodos.forEach(todo => {\n        if (todo.id !== editTodo.id) {\n          todos.push(todo);\n        } else {\n          todos.push(editTodo);\n        }\n      });\n      dispatch({\n        type: todoActions.CHANGE_TODO,\n        todos\n      });\n    };\n  },\n  deleteTodo: id => {\n    return (dispatch, getState) => {\n      const oldTodos = getState().Todos.todos;\n      const todos = [];\n      oldTodos.forEach(todo => {\n        if (todo.id !== id) {\n          todos.push(todo);\n        }\n      });\n      dispatch({\n        type: todoActions.CHANGE_TODO,\n        todos\n      });\n    };\n  },\n  allCompleted: () => {\n    return (dispatch, getState) => {\n      const oldTodos = getState().Todos.todos;\n      const todos = [];\n      oldTodos.forEach(todo => {\n        todo.completed = true;\n        todos.push(todo);\n      });\n      dispatch({\n        type: todoActions.CHANGE_TODO,\n        todos\n      });\n    };\n  },\n  deleteCompleted: () => {\n    return (dispatch, getState) => {\n      const oldTodos = getState().Todos.todos;\n      const todos = [];\n      oldTodos.forEach(todo => {\n        if (!todo.completed) {\n          todos.push(todo);\n        }\n      });\n      dispatch({\n        type: todoActions.CHANGE_TODO,\n        todos\n      });\n    };\n  }\n};\nexport default todoActions;","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/redux/todos/actions.js"],"names":["todoActions","CHANGE_TODO","ALL_COMPLETED","DELETE_COMPLETED","addTodo","todo","dispatch","getState","newTodo","id","Date","createTime","color","completed","todos","Todos","type","edittodo","editTodo","oldTodos","forEach","push","deleteTodo","allCompleted","deleteCompleted"],"mappings":"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","sourcesContent":["const todoActions = {\n  CHANGE_TODO: 'CHANGE_TODO',\n  ALL_COMPLETED: 'ALL_COMPLETED',\n  DELETE_COMPLETED: 'DELETE_COMPLETED',\n\n  addTodo: todo => {\n    return (dispatch, getState) => {\n      const newTodo = {\n        id: new Date(),\n        todo: todo,\n        createTime: new Date(),\n        color: 0,\n        completed: false,\n      };\n      const todos = [newTodo, ...getState().Todos.todos];\n      dispatch({\n        type: todoActions.CHANGE_TODO,\n        todos,\n      });\n    };\n  },\n  edittodo: editTodo => {\n    return (dispatch, getState) => {\n      const oldTodos = getState().Todos.todos;\n      const todos = [];\n      oldTodos.forEach(todo => {\n        if (todo.id !== editTodo.id) {\n          todos.push(todo);\n        } else {\n          todos.push(editTodo);\n        }\n      });\n      dispatch({\n        type: todoActions.CHANGE_TODO,\n        todos,\n      });\n    };\n  },\n  deleteTodo: id => {\n    return (dispatch, getState) => {\n      const oldTodos = getState().Todos.todos;\n      const todos = [];\n      oldTodos.forEach(todo => {\n        if (todo.id !== id) {\n          todos.push(todo);\n        }\n      });\n      dispatch({\n        type: todoActions.CHANGE_TODO,\n        todos,\n      });\n    };\n  },\n  allCompleted: () => {\n    return (dispatch, getState) => {\n      const oldTodos = getState().Todos.todos;\n      const todos = [];\n      oldTodos.forEach(todo => {\n        todo.completed = true;\n        todos.push(todo);\n      });\n      dispatch({\n        type: todoActions.CHANGE_TODO,\n        todos,\n      });\n    };\n  },\n  deleteCompleted: () => {\n    return (dispatch, getState) => {\n      const oldTodos = getState().Todos.todos;\n      const todos = [];\n      oldTodos.forEach(todo => {\n        if (!todo.completed) {\n          todos.push(todo);\n        }\n      });\n      dispatch({\n        type: todoActions.CHANGE_TODO,\n        todos,\n      });\n    };\n  },\n};\nexport default todoActions;\n"]},"metadata":{},"sourceType":"module"}