{"ast":null,"code":"var _jsxFileName = \"/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/containers/Ecommerce/Algolia/DesktopView.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { InstantSearch } from 'react-instantsearch/dom';\nimport { Footer, Sidebar } from '@iso/components/Algolia/Algolia';\nimport EmptyComponent from '@iso/components/EmptyComponent';\nimport Content from './Content';\nimport AlgoliaSearchConfig from '@iso/config/algolia.config';\nimport { setUrl, getInitData } from '@iso/lib/helpers/url_sync';\nimport './InstantSearch.css';\nimport AlgoliaSearchPageWrapper from './Algolia.styles';\nexport default function (props) {\n  const [searchState, setSearchState] = React.useState(getInitData());\n\n  const setVoice = query => {\n    setSearchState(_objectSpread(_objectSpread({}, searchState), {}, {\n      page: '1',\n      query\n    }));\n    setUrl(searchState);\n  };\n\n  const searchInfo = _objectSpread(_objectSpread({}, AlgoliaSearchConfig), {}, {\n    indexName: 'default_search',\n    searchState: searchState,\n    urlSync: true,\n    onSearchStateChange: searchState => {\n      setSearchState(searchState);\n      setUrl(searchState);\n    }\n  });\n\n  return __jsx(AlgoliaSearchPageWrapper, {\n    className: \"isoAlgoliaSearchPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, AlgoliaSearchConfig.appId ? __jsx(InstantSearch, _extends({}, searchInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"isoAlgoliaMainWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, __jsx(Sidebar, {\n    setVoice: setVoice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), __jsx(Content, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }))), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })) : __jsx(EmptyComponent, {\n    value: \"Please include algolia appId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/containers/Ecommerce/Algolia/DesktopView.js"],"names":["React","InstantSearch","Footer","Sidebar","EmptyComponent","Content","AlgoliaSearchConfig","setUrl","getInitData","AlgoliaSearchPageWrapper","props","searchState","setSearchState","useState","setVoice","query","page","searchInfo","indexName","urlSync","onSearchStateChange","appId"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,iCAAhC;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,mBAAP,MAAgC,4BAAhC;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,2BAApC;AACA,OAAO,qBAAP;AACA,OAAOC,wBAAP,MAAqC,kBAArC;AAEA,eAAe,UAAUC,KAAV,EAAiB;AAC9B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,KAAK,CAACa,QAAN,CAAeL,WAAW,EAA1B,CAAtC;;AAEA,QAAMM,QAAQ,GAAIC,KAAD,IAAW;AAC1BH,IAAAA,cAAc,iCACTD,WADS;AAEZK,MAAAA,IAAI,EAAE,GAFM;AAGZD,MAAAA;AAHY,OAAd;AAKAR,IAAAA,MAAM,CAACI,WAAD,CAAN;AACD,GAPD;;AAQA,QAAMM,UAAU,mCACXX,mBADW;AAEdY,IAAAA,SAAS,EAAE,gBAFG;AAGdP,IAAAA,WAAW,EAAEA,WAHC;AAIdQ,IAAAA,OAAO,EAAE,IAJK;AAKdC,IAAAA,mBAAmB,EAAGT,WAAD,IAAiB;AACpCC,MAAAA,cAAc,CAACD,WAAD,CAAd;AACAJ,MAAAA,MAAM,CAACI,WAAD,CAAN;AACD;AARa,IAAhB;;AAUA,SACE,MAAC,wBAAD;AAA0B,IAAA,SAAS,EAAC,sBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,mBAAmB,CAACe,KAApB,GACC,MAAC,aAAD,eAAmBJ,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,QAAQ,EAAEH,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,OAAD,eAAaJ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF,EAKE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADD,GASC,MAAC,cAAD;AAAgB,IAAA,KAAK,EAAC,8BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADF;AAeD","sourcesContent":["import React from 'react';\nimport { InstantSearch } from 'react-instantsearch/dom';\nimport { Footer, Sidebar } from '@iso/components/Algolia/Algolia';\nimport EmptyComponent from '@iso/components/EmptyComponent';\nimport Content from './Content';\nimport AlgoliaSearchConfig from '@iso/config/algolia.config';\nimport { setUrl, getInitData } from '@iso/lib/helpers/url_sync';\nimport './InstantSearch.css';\nimport AlgoliaSearchPageWrapper from './Algolia.styles';\n\nexport default function (props) {\n  const [searchState, setSearchState] = React.useState(getInitData());\n\n  const setVoice = (query) => {\n    setSearchState({\n      ...searchState,\n      page: '1',\n      query,\n    });\n    setUrl(searchState);\n  };\n  const searchInfo = {\n    ...AlgoliaSearchConfig,\n    indexName: 'default_search',\n    searchState: searchState,\n    urlSync: true,\n    onSearchStateChange: (searchState) => {\n      setSearchState(searchState);\n      setUrl(searchState);\n    },\n  };\n  return (\n    <AlgoliaSearchPageWrapper className=\"isoAlgoliaSearchPage\">\n      {AlgoliaSearchConfig.appId ? (\n        <InstantSearch {...searchInfo}>\n          <div className=\"isoAlgoliaMainWrapper\">\n            <Sidebar setVoice={setVoice} />\n            <Content {...props} />\n          </div>\n          <Footer />\n        </InstantSearch>\n      ) : (\n        <EmptyComponent value=\"Please include algolia appId\" />\n      )}\n    </AlgoliaSearchPageWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}