{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/components/Algolia/VoiceRecognition.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport SpeechRecognition from 'react-speech-recognition';\nimport { VoiceSearchWrapper } from './AlgoliaComponent.style';\nvar propTypes = {\n  transcript: PropTypes.string,\n  resetTranscript: PropTypes.func,\n  browserSupportsSpeechRecognition: PropTypes.bool\n};\nvar options = {\n  autoStart: false\n};\n\nvar VoiceRecognition = /*#__PURE__*/function (_Component) {\n  _inherits(VoiceRecognition, _Component);\n\n  var _super = _createSuper(VoiceRecognition);\n\n  function VoiceRecognition() {\n    var _this;\n\n    _classCallCheck(this, VoiceRecognition);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      listening: false\n    });\n\n    return _this;\n  }\n\n  _createClass(VoiceRecognition, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          transcript = _this$props.transcript,\n          resetTranscript = _this$props.resetTranscript,\n          browserSupportsSpeechRecognition = _this$props.browserSupportsSpeechRecognition,\n          startListening = _this$props.startListening,\n          stopListening = _this$props.stopListening,\n          setVoice = _this$props.setVoice;\n\n      if (!browserSupportsSpeechRecognition) {\n        return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return __jsx(VoiceSearchWrapper, {\n        className: \"isoVoiceSearch\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      }, !this.state.listening ? __jsx(\"div\", {\n        className: \"isoVoiceSearchStart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }, __jsx(\"button\", {\n        onClick: function onClick() {\n          startListening();\n\n          _this2.setState({\n            listening: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }), __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, \"Start Speaking\")) : __jsx(\"div\", {\n        className: \"isoVoiceSearchRunning\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, __jsx(\"button\", {\n        onClick: function onClick() {\n          setVoice(transcript);\n          resetTranscript();\n          stopListening();\n\n          _this2.setState({\n            listening: false\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }), __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, transcript)));\n    }\n  }]);\n\n  return VoiceRecognition;\n}(Component);\n\nVoiceRecognition.propTypes = propTypes;\nexport default SpeechRecognition(options)(VoiceRecognition);","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/components/Algolia/VoiceRecognition.js"],"names":["React","Component","PropTypes","SpeechRecognition","VoiceSearchWrapper","propTypes","transcript","string","resetTranscript","func","browserSupportsSpeechRecognition","bool","options","autoStart","VoiceRecognition","listening","props","startListening","stopListening","setVoice","state","setState"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AACA,SAASC,kBAAT,QAAmC,0BAAnC;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAEJ,SAAS,CAACK,MADN;AAEhBC,EAAAA,eAAe,EAAEN,SAAS,CAACO,IAFX;AAGhBC,EAAAA,gCAAgC,EAAER,SAAS,CAACS;AAH5B,CAAlB;AAKA,IAAMC,OAAO,GAAG;AACdC,EAAAA,SAAS,EAAE;AADG,CAAhB;;IAGMC,gB;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,SAAS,EAAE;AADL,K;;;;;;;6BAGC;AAAA;;AAAA,wBAQH,KAAKC,KARF;AAAA,UAELV,UAFK,eAELA,UAFK;AAAA,UAGLE,eAHK,eAGLA,eAHK;AAAA,UAILE,gCAJK,eAILA,gCAJK;AAAA,UAKLO,cALK,eAKLA,cALK;AAAA,UAMLC,aANK,eAMLA,aANK;AAAA,UAOLC,QAPK,eAOLA,QAPK;;AASP,UAAI,CAACT,gCAAL,EAAuC;AACrC,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,aACE,MAAC,kBAAD;AAAoB,QAAA,SAAS,EAAC,gBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,CAAC,KAAKU,KAAL,CAAWL,SAAZ,GACC;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,OAAO,EAAE,mBAAM;AACbE,UAAAA,cAAc;;AACd,UAAA,MAAI,CAACI,QAAL,CAAc;AAAEN,YAAAA,SAAS,EAAE;AAAb,WAAd;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPF,CADD,GAWC;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,OAAO,EAAE,mBAAM;AACbI,UAAAA,QAAQ,CAACb,UAAD,CAAR;AACAE,UAAAA,eAAe;AACfU,UAAAA,aAAa;;AACb,UAAA,MAAI,CAACG,QAAL,CAAc;AAAEN,YAAAA,SAAS,EAAE;AAAb,WAAd;AACD,SANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOT,UAAP,CAVF,CAZJ,CADF;AA4BD;;;;EA5C4BL,S;;AA8C/Ba,gBAAgB,CAACT,SAAjB,GAA6BA,SAA7B;AACA,eAAeF,iBAAiB,CAACS,OAAD,CAAjB,CAA2BE,gBAA3B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport SpeechRecognition from 'react-speech-recognition';\nimport { VoiceSearchWrapper } from './AlgoliaComponent.style';\n\nconst propTypes = {\n  transcript: PropTypes.string,\n  resetTranscript: PropTypes.func,\n  browserSupportsSpeechRecognition: PropTypes.bool,\n};\nconst options = {\n  autoStart: false,\n};\nclass VoiceRecognition extends Component {\n  state = {\n    listening: false,\n  };\n  render() {\n    const {\n      transcript,\n      resetTranscript,\n      browserSupportsSpeechRecognition,\n      startListening,\n      stopListening,\n      setVoice,\n    } = this.props;\n    if (!browserSupportsSpeechRecognition) {\n      return <div />;\n    }\n    return (\n      <VoiceSearchWrapper className=\"isoVoiceSearch\">\n        {!this.state.listening ? (\n          <div className=\"isoVoiceSearchStart\">\n            <button\n              onClick={() => {\n                startListening();\n                this.setState({ listening: true });\n              }}\n            />\n            <span>Start Speaking</span>\n          </div>\n        ) : (\n          <div className=\"isoVoiceSearchRunning\">\n            <button\n              onClick={() => {\n                setVoice(transcript);\n                resetTranscript();\n                stopListening();\n                this.setState({ listening: false });\n              }}\n            />\n            {/* <span>Search</span> */}\n            <span>{transcript}</span>\n          </div>\n        )}\n      </VoiceSearchWrapper>\n    );\n  }\n}\nVoiceRecognition.propTypes = propTypes;\nexport default SpeechRecognition(options)(VoiceRecognition);\n"]},"metadata":{},"sourceType":"module"}