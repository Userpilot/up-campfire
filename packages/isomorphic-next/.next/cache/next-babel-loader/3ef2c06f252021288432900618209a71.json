{"ast":null,"code":"var _jsxFileName = \"/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/containers/Map/GoogleMap/Maps/BasicMarker.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { posts } from '../config';\nimport googleConfig from '@iso/config/google_map.config';\nimport { GoogleApiWrapper } from 'google-maps-react';\nimport { Marker, MarkerInfoWindow } from '../Marker';\nimport BasicMapWrapper from './Maps.styles';\n\nfunction BasicMarkerMap(props) {\n  const state = {\n    center: {\n      lat: 40.78306,\n      lng: -73.971249\n    },\n    // 40.783060, -73.971249\n    zoom: 13,\n    posts,\n    infoWindow: null\n  };\n\n  function loadMap(element) {\n    const {\n      google\n    } = props;\n    if (!element || !google) return;\n    const self = this;\n    const Map = new google.maps.Map(element, {\n      zoom: state.zoom,\n      center: state.center,\n      scrollwheel: false,\n      mapTypeControlOptions: {\n        style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\n        position: google.maps.ControlPosition.TOP_RIGHT\n      }\n    });\n\n    const RichMarker = require('js-rich-marker');\n\n    const InfoBubble = require('@redq/js-info-bubble');\n\n    posts.map(post => {\n      const marker = RichMarker ? new RichMarker.RichMarker({\n        map: Map,\n        animation: google.maps.Animation.DROP,\n        flat: true,\n        content: Marker(post.marker),\n        position: new google.maps.LatLng(post.lat, post.lng)\n      }) : new google.maps.Marker({\n        position: new google.maps.LatLng(post.lat, post.lng),\n        map: Map,\n        flat: true,\n        animation: google.maps.Animation.DROP,\n        content: Marker(post.marker)\n      });\n      const infoBubble = new InfoBubble({\n        maxWidth: 280,\n        minWidth: 280,\n        maxHeight: 255,\n        minHeight: 255,\n        shadowStyle: 0,\n        padding: 0,\n        backgroundColor: '#ffffff',\n        position: new google.maps.LatLng(post.lat, post.lng),\n        borderRadius: 0,\n        arrowSize: 10,\n        borderWidth: 0,\n        disableAnimation: true,\n        autopanMargin: 0,\n        hideCloseButton: false,\n        arrowStyle: 0,\n        content: MarkerInfoWindow(post)\n      });\n      marker.addListener('click', function () {\n        if (self.infowindow) {\n          self.infowindow.close();\n        }\n\n        infoBubble.open(Map, marker);\n        self.infowindow = infoBubble;\n      });\n      return true;\n    });\n  }\n\n  const {\n    loaded\n  } = props;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, loaded ? __jsx(BasicMapWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"isoGoogleMap\",\n    style: {\n      height: '650px',\n      width: '100%'\n    },\n    ref: loadMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  })) : __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"API is Loading\"));\n}\n\nexport default GoogleApiWrapper({\n  apiKey: googleConfig.apiKey\n})(BasicMarkerMap);","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/containers/Map/GoogleMap/Maps/BasicMarker.js"],"names":["React","posts","googleConfig","GoogleApiWrapper","Marker","MarkerInfoWindow","BasicMapWrapper","BasicMarkerMap","props","state","center","lat","lng","zoom","infoWindow","loadMap","element","google","self","Map","maps","scrollwheel","mapTypeControlOptions","style","MapTypeControlStyle","HORIZONTAL_BAR","position","ControlPosition","TOP_RIGHT","RichMarker","require","InfoBubble","map","post","marker","animation","Animation","DROP","flat","content","LatLng","infoBubble","maxWidth","minWidth","maxHeight","minHeight","shadowStyle","padding","backgroundColor","borderRadius","arrowSize","borderWidth","disableAnimation","autopanMargin","hideCloseButton","arrowStyle","addListener","infowindow","close","open","loaded","height","width","apiKey"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,WAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,MAAT,EAAiBC,gBAAjB,QAAyC,WAAzC;AACA,OAAOC,eAAP,MAA4B,eAA5B;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,QAAMC,KAAK,GAAG;AACZC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAE,QAAP;AAAiBC,MAAAA,GAAG,EAAE,CAAC;AAAvB,KADI;AACgC;AAC5CC,IAAAA,IAAI,EAAE,EAFM;AAGZZ,IAAAA,KAHY;AAIZa,IAAAA,UAAU,EAAE;AAJA,GAAd;;AAMA,WAASC,OAAT,CAAiBC,OAAjB,EAA0B;AACxB,UAAM;AAAEC,MAAAA;AAAF,QAAaT,KAAnB;AACA,QAAI,CAACQ,OAAD,IAAY,CAACC,MAAjB,EAAyB;AACzB,UAAMC,IAAI,GAAG,IAAb;AACA,UAAMC,GAAG,GAAG,IAAIF,MAAM,CAACG,IAAP,CAAYD,GAAhB,CAAoBH,OAApB,EAA6B;AACvCH,MAAAA,IAAI,EAAEJ,KAAK,CAACI,IAD2B;AAEvCH,MAAAA,MAAM,EAAED,KAAK,CAACC,MAFyB;AAGvCW,MAAAA,WAAW,EAAE,KAH0B;AAIvCC,MAAAA,qBAAqB,EAAE;AACrBC,QAAAA,KAAK,EAAEN,MAAM,CAACG,IAAP,CAAYI,mBAAZ,CAAgCC,cADlB;AAErBC,QAAAA,QAAQ,EAAET,MAAM,CAACG,IAAP,CAAYO,eAAZ,CAA4BC;AAFjB;AAJgB,KAA7B,CAAZ;;AASA,UAAMC,UAAU,GAAGC,OAAO,CAAC,gBAAD,CAA1B;;AACA,UAAMC,UAAU,GAAGD,OAAO,CAAC,sBAAD,CAA1B;;AACA7B,IAAAA,KAAK,CAAC+B,GAAN,CAAUC,IAAI,IAAI;AAChB,YAAMC,MAAM,GAAGL,UAAU,GACrB,IAAIA,UAAU,CAACA,UAAf,CAA0B;AACxBG,QAAAA,GAAG,EAAEb,GADmB;AAExBgB,QAAAA,SAAS,EAAElB,MAAM,CAACG,IAAP,CAAYgB,SAAZ,CAAsBC,IAFT;AAGxBC,QAAAA,IAAI,EAAE,IAHkB;AAIxBC,QAAAA,OAAO,EAAEnC,MAAM,CAAC6B,IAAI,CAACC,MAAN,CAJS;AAKxBR,QAAAA,QAAQ,EAAE,IAAIT,MAAM,CAACG,IAAP,CAAYoB,MAAhB,CAAuBP,IAAI,CAACtB,GAA5B,EAAiCsB,IAAI,CAACrB,GAAtC;AALc,OAA1B,CADqB,GAQrB,IAAIK,MAAM,CAACG,IAAP,CAAYhB,MAAhB,CAAuB;AACrBsB,QAAAA,QAAQ,EAAE,IAAIT,MAAM,CAACG,IAAP,CAAYoB,MAAhB,CAAuBP,IAAI,CAACtB,GAA5B,EAAiCsB,IAAI,CAACrB,GAAtC,CADW;AAErBoB,QAAAA,GAAG,EAAEb,GAFgB;AAGrBmB,QAAAA,IAAI,EAAE,IAHe;AAIrBH,QAAAA,SAAS,EAAElB,MAAM,CAACG,IAAP,CAAYgB,SAAZ,CAAsBC,IAJZ;AAKrBE,QAAAA,OAAO,EAAEnC,MAAM,CAAC6B,IAAI,CAACC,MAAN;AALM,OAAvB,CARJ;AAeA,YAAMO,UAAU,GAAG,IAAIV,UAAJ,CAAe;AAChCW,QAAAA,QAAQ,EAAE,GADsB;AAEhCC,QAAAA,QAAQ,EAAE,GAFsB;AAGhCC,QAAAA,SAAS,EAAE,GAHqB;AAIhCC,QAAAA,SAAS,EAAE,GAJqB;AAKhCC,QAAAA,WAAW,EAAE,CALmB;AAMhCC,QAAAA,OAAO,EAAE,CANuB;AAOhCC,QAAAA,eAAe,EAAE,SAPe;AAQhCtB,QAAAA,QAAQ,EAAE,IAAIT,MAAM,CAACG,IAAP,CAAYoB,MAAhB,CAAuBP,IAAI,CAACtB,GAA5B,EAAiCsB,IAAI,CAACrB,GAAtC,CARsB;AAShCqC,QAAAA,YAAY,EAAE,CATkB;AAUhCC,QAAAA,SAAS,EAAE,EAVqB;AAWhCC,QAAAA,WAAW,EAAE,CAXmB;AAYhCC,QAAAA,gBAAgB,EAAE,IAZc;AAahCC,QAAAA,aAAa,EAAE,CAbiB;AAchCC,QAAAA,eAAe,EAAE,KAde;AAehCC,QAAAA,UAAU,EAAE,CAfoB;AAgBhChB,QAAAA,OAAO,EAAElC,gBAAgB,CAAC4B,IAAD;AAhBO,OAAf,CAAnB;AAkBAC,MAAAA,MAAM,CAACsB,WAAP,CAAmB,OAAnB,EAA4B,YAAW;AACrC,YAAItC,IAAI,CAACuC,UAAT,EAAqB;AACnBvC,UAAAA,IAAI,CAACuC,UAAL,CAAgBC,KAAhB;AACD;;AACDjB,QAAAA,UAAU,CAACkB,IAAX,CAAgBxC,GAAhB,EAAqBe,MAArB;AACAhB,QAAAA,IAAI,CAACuC,UAAL,GAAkBhB,UAAlB;AACD,OAND;AAOA,aAAO,IAAP;AACD,KA1CD;AA2CD;;AAED,QAAM;AAAEmB,IAAAA;AAAF,MAAapD,KAAnB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGoD,MAAM,GACL,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KAFT;AAGE,IAAA,GAAG,EAAE/C,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADK,GASL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVJ,CADF;AAeD;;AAED,eAAeZ,gBAAgB,CAAC;AAC9B4D,EAAAA,MAAM,EAAE7D,YAAY,CAAC6D;AADS,CAAD,CAAhB,CAEZxD,cAFY,CAAf","sourcesContent":["import React from 'react';\nimport { posts } from '../config';\nimport googleConfig from '@iso/config/google_map.config';\nimport { GoogleApiWrapper } from 'google-maps-react';\nimport { Marker, MarkerInfoWindow } from '../Marker';\nimport BasicMapWrapper from './Maps.styles';\n\nfunction BasicMarkerMap(props) {\n  const state = {\n    center: { lat: 40.78306, lng: -73.971249 }, // 40.783060, -73.971249\n    zoom: 13,\n    posts,\n    infoWindow: null,\n  };\n  function loadMap(element) {\n    const { google } = props;\n    if (!element || !google) return;\n    const self = this;\n    const Map = new google.maps.Map(element, {\n      zoom: state.zoom,\n      center: state.center,\n      scrollwheel: false,\n      mapTypeControlOptions: {\n        style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,\n        position: google.maps.ControlPosition.TOP_RIGHT,\n      },\n    });\n    const RichMarker = require('js-rich-marker');\n    const InfoBubble = require('@redq/js-info-bubble');\n    posts.map(post => {\n      const marker = RichMarker\n        ? new RichMarker.RichMarker({\n            map: Map,\n            animation: google.maps.Animation.DROP,\n            flat: true,\n            content: Marker(post.marker),\n            position: new google.maps.LatLng(post.lat, post.lng),\n          })\n        : new google.maps.Marker({\n            position: new google.maps.LatLng(post.lat, post.lng),\n            map: Map,\n            flat: true,\n            animation: google.maps.Animation.DROP,\n            content: Marker(post.marker),\n          });\n      const infoBubble = new InfoBubble({\n        maxWidth: 280,\n        minWidth: 280,\n        maxHeight: 255,\n        minHeight: 255,\n        shadowStyle: 0,\n        padding: 0,\n        backgroundColor: '#ffffff',\n        position: new google.maps.LatLng(post.lat, post.lng),\n        borderRadius: 0,\n        arrowSize: 10,\n        borderWidth: 0,\n        disableAnimation: true,\n        autopanMargin: 0,\n        hideCloseButton: false,\n        arrowStyle: 0,\n        content: MarkerInfoWindow(post),\n      });\n      marker.addListener('click', function() {\n        if (self.infowindow) {\n          self.infowindow.close();\n        }\n        infoBubble.open(Map, marker);\n        self.infowindow = infoBubble;\n      });\n      return true;\n    });\n  }\n\n  const { loaded } = props;\n  return (\n    <div>\n      {loaded ? (\n        <BasicMapWrapper>\n          <div\n            className=\"isoGoogleMap\"\n            style={{ height: '650px', width: '100%' }}\n            ref={loadMap}\n          />\n        </BasicMapWrapper>\n      ) : (\n        <span>API is Loading</span>\n      )}\n    </div>\n  );\n}\n\nexport default GoogleApiWrapper({\n  apiKey: googleConfig.apiKey,\n})(BasicMarkerMap);\n"]},"metadata":{},"sourceType":"module"}