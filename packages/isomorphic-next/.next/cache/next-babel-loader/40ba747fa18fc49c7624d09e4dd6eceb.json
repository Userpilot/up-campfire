{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(addContact),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(editContact),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(deleteContact),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, takeEvery, fork } from 'redux-saga/effects';\nimport actions from './actions';\nexport function addContact() {\n  return _regeneratorRuntime.wrap(function addContact$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(actions.ADD_CONTACT, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked);\n}\nexport function editContact() {\n  return _regeneratorRuntime.wrap(function editContact$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(actions.EDIT_CONTACT, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n            return _regeneratorRuntime.wrap(function _callee2$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee2);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked2);\n}\nexport function deleteContact() {\n  return _regeneratorRuntime.wrap(function deleteContact$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(actions.DELETE__CONTACT, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n            return _regeneratorRuntime.wrap(function _callee3$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, _callee3);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked3);\n}\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([fork(addContact), fork(editContact), fork(deleteContact)]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked4);\n}","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/redux/contacts/saga.js"],"names":["addContact","editContact","deleteContact","rootSaga","all","takeEvery","fork","actions","ADD_CONTACT","EDIT_CONTACT","DELETE__CONTACT"],"mappings":";;oDAGiBA,U;qDAGAC,W;qDAGAC,a;qDAGQC,Q;;AAZzB,SAASC,GAAT,EAAcC,SAAd,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,SAAUP,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMK,SAAS,CAACE,OAAO,CAACC,WAAT,wCAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAtB,EAAf;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGP,OAAO,SAAUP,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMI,SAAS,CAACE,OAAO,CAACE,YAAT,wCAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAvB,EAAf;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGP,OAAO,SAAUP,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMG,SAAS,CAACE,OAAO,CAACG,eAAT,wCAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA1B,EAAf;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGP,eAAe,SAAUP,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CAACE,IAAI,CAACN,UAAD,CAAL,EAAmBM,IAAI,CAACL,WAAD,CAAvB,EAAsCK,IAAI,CAACJ,aAAD,CAA1C,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, takeEvery, fork } from 'redux-saga/effects';\nimport actions from './actions';\n\nexport function* addContact() {\n  yield takeEvery(actions.ADD_CONTACT, function*() {});\n}\nexport function* editContact() {\n  yield takeEvery(actions.EDIT_CONTACT, function*() {});\n}\nexport function* deleteContact() {\n  yield takeEvery(actions.DELETE__CONTACT, function*() {});\n}\nexport default function* rootSaga() {\n  yield all([fork(addContact), fork(editContact), fork(deleteContact)]);\n}\n"]},"metadata":{},"sourceType":"module"}