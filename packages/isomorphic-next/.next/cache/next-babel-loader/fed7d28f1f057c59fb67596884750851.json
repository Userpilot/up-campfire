{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport React from 'react';\n\nvar useWindowSize = function useWindowSize() {\n  _s();\n\n  var isClient = true;\n  var getSize = React.useCallback(function () {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined\n    };\n  }, [isClient]);\n\n  var _React$useState = React.useState(getSize),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      size = _React$useState2[0],\n      setSize = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (!isClient) {\n      return false;\n    }\n\n    var onHandleResize = function onHandleResize() {\n      setSize(getSize);\n    };\n\n    window.addEventListener('resize', onHandleResize);\n    return function () {\n      return window.removeEventListener('resize', onHandleResize);\n    };\n  }, [getSize, isClient]);\n  return size;\n};\n\n_s(useWindowSize, \"mYoaSxJ59goEdJ7nL+RILgQuFTg=\");\n\nexport default useWindowSize;","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/lib/hooks/useWindowSize.js"],"names":["React","useWindowSize","isClient","getSize","useCallback","width","window","innerWidth","undefined","height","innerHeight","useState","size","setSize","useEffect","onHandleResize","addEventListener","removeEventListener"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AAC1B,MAAMC,QAAQ,OAAd;AAEA,MAAMC,OAAO,GAAGH,KAAK,CAACI,WAAN,CACd;AAAA,WAAO;AACLC,MAAAA,KAAK,EAAEH,QAAQ,GAAGI,MAAM,CAACC,UAAV,GAAuBC,SADjC;AAELC,MAAAA,MAAM,EAAEP,QAAQ,GAAGI,MAAM,CAACI,WAAV,GAAwBF;AAFnC,KAAP;AAAA,GADc,EAKd,CAACN,QAAD,CALc,CAAhB;;AAH0B,wBAWFF,KAAK,CAACW,QAAN,CAAeR,OAAf,CAXE;AAAA;AAAA,MAWnBS,IAXmB;AAAA,MAWbC,OAXa;;AAa1Bb,EAAAA,KAAK,CAACc,SAAN,CAAgB,YAAM;AACpB,QAAI,CAACZ,QAAL,EAAe;AACb,aAAO,KAAP;AACD;;AACD,QAAMa,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BF,MAAAA,OAAO,CAACV,OAAD,CAAP;AACD,KAFD;;AAGAG,IAAAA,MAAM,CAACU,gBAAP,CAAwB,QAAxB,EAAkCD,cAAlC;AACA,WAAO;AAAA,aAAMT,MAAM,CAACW,mBAAP,CAA2B,QAA3B,EAAqCF,cAArC,CAAN;AAAA,KAAP;AACD,GATD,EASG,CAACZ,OAAD,EAAUD,QAAV,CATH;AAWA,SAAOU,IAAP;AACD,CAzBD;;GAAMX,a;;AA2BN,eAAeA,aAAf","sourcesContent":["import React from 'react';\n\nconst useWindowSize = () => {\n  const isClient = typeof window === 'object';\n\n  const getSize = React.useCallback(\n    () => ({\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined,\n    }),\n    [isClient]\n  );\n\n  const [size, setSize] = React.useState(getSize);\n\n  React.useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n    const onHandleResize = () => {\n      setSize(getSize);\n    };\n    window.addEventListener('resize', onHandleResize);\n    return () => window.removeEventListener('resize', onHandleResize);\n  }, [getSize, isClient]);\n\n  return size;\n};\n\nexport default useWindowSize;\n"]},"metadata":{},"sourceType":"module"}