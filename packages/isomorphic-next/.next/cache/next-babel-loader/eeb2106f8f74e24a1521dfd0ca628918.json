{"ast":null,"code":"import _EditOutlined from \"@ant-design/icons/lib/icons/EditOutlined\";\nimport _CheckOutlined from \"@ant-design/icons/lib/icons/CheckOutlined\";\nimport _Layout from \"antd/lib/layout\";\n\nvar _jsxFileName = \"/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/containers/Contacts/Contacts.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactActions from '@iso/redux/contacts/actions';\nimport Button from '@iso/components/uielements/button';\nimport ContactList from '@iso/components/Contacts/ContactList';\nimport SingleContactView from '@iso/components/Contacts/SingleView';\nimport EditContactView from '@iso/components/Contacts/EditView';\nimport DeleteButton from '@iso/components/Contacts/DeleteButton';\nimport { otherAttributes } from './data';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport { ContactsWrapper } from './Contacts.styles';\nimport Scrollbar from '@iso/components/utility/customScrollBar';\nvar _changeContact = contactActions.changeContact,\n    addContact = contactActions.addContact,\n    _editContact = contactActions.editContact,\n    _deleteContact = contactActions.deleteContact,\n    viewChange = contactActions.viewChange;\nvar Content = _Layout.Content;\nexport default function Contacts() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.Contacts;\n  }),\n      contacts = _useSelector.contacts,\n      selectedId = _useSelector.selectedId,\n      editView = _useSelector.editView;\n\n  var dispatch = useDispatch();\n  var selectedContact = selectedId ? contacts.filter(function (contact) {\n    return contact.id === selectedId;\n  })[0] : null;\n\n  var onVIewChange = function onVIewChange() {\n    return dispatch(viewChange(!editView));\n  };\n\n  return __jsx(ContactsWrapper, {\n    className: \"isomorphicContacts\",\n    style: {\n      background: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"isoContactListBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(ContactList, {\n    contacts: contacts,\n    selectedId: selectedId,\n    changeContact: function changeContact(id) {\n      return dispatch(_changeContact(id));\n    },\n    deleteContact: function deleteContact(e) {\n      return dispatch(_deleteContact(e));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), __jsx(_Layout, {\n    className: \"isoContactBoxWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, selectedContact ? __jsx(Content, {\n    className: \"isoContactBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"isoContactControl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    type: \"default\",\n    onClick: onVIewChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, editView ? __jsx(_CheckOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }) : __jsx(_EditOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 49\n    }\n  })), __jsx(DeleteButton, {\n    deleteContact: function deleteContact(id) {\n      return dispatch(_deleteContact(id));\n    },\n    contact: selectedContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    onClick: function onClick() {\n      return dispatch(addContact());\n    },\n    className: \"isoAddContactBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, __jsx(IntlMessages, {\n    id: \"contactlist.addNewContact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }))), __jsx(Scrollbar, {\n    className: \"contactBoxScrollbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, editView ? __jsx(EditContactView, {\n    contact: selectedContact,\n    editContact: function editContact(contact) {\n      return dispatch(_editContact(contact));\n    },\n    otherAttributes: otherAttributes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }) : __jsx(SingleContactView, {\n    contact: selectedContact,\n    otherAttributes: otherAttributes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }))) : __jsx(\"div\", {\n    className: \"isoContactControl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    onClick: function onClick() {\n      return dispatch(addContact());\n    },\n    className: \"isoAddContactBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, __jsx(IntlMessages, {\n    id: \"contactlist.addNewContact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  })))));\n}\n\n_s(Contacts, \"ayP4JV/01IfQaNMHoKgoMFWwwNs=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/containers/Contacts/Contacts.js"],"names":["React","useDispatch","useSelector","contactActions","Button","ContactList","SingleContactView","EditContactView","DeleteButton","otherAttributes","IntlMessages","ContactsWrapper","Scrollbar","changeContact","addContact","editContact","deleteContact","viewChange","Content","Contacts","state","contacts","selectedId","editView","dispatch","selectedContact","filter","contact","id","onVIewChange","background","e"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactActions from '@iso/redux/contacts/actions';\nimport { CheckOutlined, EditOutlined } from '@ant-design/icons';\nimport { Layout } from 'antd';\nimport Button from '@iso/components/uielements/button';\nimport ContactList from '@iso/components/Contacts/ContactList';\nimport SingleContactView from '@iso/components/Contacts/SingleView';\nimport EditContactView from '@iso/components/Contacts/EditView';\nimport DeleteButton from '@iso/components/Contacts/DeleteButton';\nimport { otherAttributes } from './data';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport { ContactsWrapper } from './Contacts.styles';\nimport Scrollbar from '@iso/components/utility/customScrollBar';\n\nconst {\n  changeContact,\n  addContact,\n  editContact,\n  deleteContact,\n  viewChange,\n} = contactActions;\n\nconst { Content } = Layout;\nexport default function Contacts() {\n  const { contacts, selectedId, editView } = useSelector(\n    (state) => state.Contacts\n  );\n  const dispatch = useDispatch();\n\n  const selectedContact = selectedId\n    ? contacts.filter((contact) => contact.id === selectedId)[0]\n    : null;\n  const onVIewChange = () => dispatch(viewChange(!editView));\n  return (\n    <ContactsWrapper\n      className=\"isomorphicContacts\"\n      style={{ background: 'none' }}\n    >\n      <div className=\"isoContactListBar\">\n        <ContactList\n          contacts={contacts}\n          selectedId={selectedId}\n          changeContact={(id) => dispatch(changeContact(id))}\n          deleteContact={(e) => dispatch(deleteContact(e))}\n        />\n      </div>\n      <Layout className=\"isoContactBoxWrapper\">\n        {selectedContact ? (\n          <Content className=\"isoContactBox\">\n            <div className=\"isoContactControl\">\n              <Button type=\"default\" onClick={onVIewChange}>\n                {editView ? <CheckOutlined /> : <EditOutlined />}\n              </Button>\n              <DeleteButton\n                deleteContact={(id) => dispatch(deleteContact(id))}\n                contact={selectedContact}\n              />\n              <Button\n                type=\"primary\"\n                onClick={() => dispatch(addContact())}\n                className=\"isoAddContactBtn\"\n              >\n                <IntlMessages id=\"contactlist.addNewContact\" />\n              </Button>\n            </div>\n\n            <Scrollbar className=\"contactBoxScrollbar\">\n              {editView ? (\n                <EditContactView\n                  contact={selectedContact}\n                  editContact={(contact) => dispatch(editContact(contact))}\n                  otherAttributes={otherAttributes}\n                />\n              ) : (\n                <SingleContactView\n                  contact={selectedContact}\n                  otherAttributes={otherAttributes}\n                />\n              )}\n            </Scrollbar>\n          </Content>\n        ) : (\n          <div className=\"isoContactControl\">\n            <Button\n              type=\"primary\"\n              onClick={() => dispatch(addContact())}\n              className=\"isoAddContactBtn\"\n            >\n              <IntlMessages id=\"contactlist.addNewContact\" />\n            </Button>\n          </div>\n        )}\n      </Layout>\n    </ContactsWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}