{"ast":null,"code":"import _CloseOutlined from \"@ant-design/icons/lib/icons/CloseOutlined\";\nvar _jsxFileName = \"/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/containers/Note/NoteList.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { timeDifference } from '@iso/lib/helpers/utility';\nimport Button from '@iso/components/uielements/button';\nimport { InputSearch } from '@iso/components/uielements/input';\nimport { NoteListWrapper } from './Note.styles';\nimport Scrollbars from '@iso/components/utility/customScrollBar';\n\nfunction filterNotes(notes, search) {\n  search = search.toUpperCase();\n\n  if (search) {\n    return notes.filter(note => note.note.toUpperCase().includes(search));\n  }\n\n  return notes;\n}\n\nexport default function (props) {\n  const [search, setSearch] = React.useState('');\n\n  function singleNote(note) {\n    const {\n      selectedId,\n      deleteNote,\n      changeNote,\n      colors\n    } = props;\n    const activeClass = selectedId === note.id ? 'active' : '';\n\n    const onChange = () => changeNote(note.id);\n\n    const onDelete = () => deleteNote(note.id);\n\n    return __jsx(\"div\", {\n      className: `isoList ${activeClass}`,\n      key: note.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"isoNoteBGColor\",\n      style: {\n        width: '5px',\n        background: colors[note.color]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      className: \"isoNoteText\",\n      onClick: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, note.note), __jsx(\"span\", {\n      className: \"isoNoteCreatedDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, timeDifference(note.createTime))), __jsx(Button, {\n      className: \"isoDeleteBtn\",\n      icon: __jsx(_CloseOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }),\n      type: \"default\",\n      onClick: onDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  function onChange(event) {\n    setSearch(event.target.value);\n  }\n\n  const notes = filterNotes(props.notes, search);\n  return __jsx(NoteListWrapper, {\n    className: \"isoNoteListWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(InputSearch, {\n    placeholder: \"Search Notes\",\n    className: \"isoSearchNotes\",\n    value: search,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"isoNoteList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, notes && notes.length > 0 ? __jsx(Scrollbars, {\n    style: {\n      height: 'calc(100vh - 70px)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, notes.map(note => singleNote(note))) : __jsx(\"span\", {\n    className: \"isoNoResultMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"No note found\")));\n}","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/containers/Note/NoteList.js"],"names":["React","timeDifference","Button","InputSearch","NoteListWrapper","Scrollbars","filterNotes","notes","search","toUpperCase","filter","note","includes","props","setSearch","useState","singleNote","selectedId","deleteNote","changeNote","colors","activeClass","id","onChange","onDelete","width","background","color","createTime","event","target","value","length","height","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { timeDifference } from '@iso/lib/helpers/utility';\nimport Button from '@iso/components/uielements/button';\nimport { InputSearch } from '@iso/components/uielements/input';\nimport { NoteListWrapper } from './Note.styles';\nimport Scrollbars from '@iso/components/utility/customScrollBar';\nimport { CloseOutlined } from '@ant-design/icons';\nfunction filterNotes(notes, search) {\n  search = search.toUpperCase();\n  if (search) {\n    return notes.filter((note) => note.note.toUpperCase().includes(search));\n  }\n  return notes;\n}\nexport default function (props) {\n  const [search, setSearch] = React.useState('');\n\n  function singleNote(note) {\n    const { selectedId, deleteNote, changeNote, colors } = props;\n\n    const activeClass = selectedId === note.id ? 'active' : '';\n    const onChange = () => changeNote(note.id);\n    const onDelete = () => deleteNote(note.id);\n    return (\n      <div className={`isoList ${activeClass}`} key={note.id}>\n        <div\n          className=\"isoNoteBGColor\"\n          style={{ width: '5px', background: colors[note.color] }}\n        />\n        <div className=\"isoNoteText\" onClick={onChange}>\n          <h3>{note.note}</h3>\n          <span className=\"isoNoteCreatedDate\">\n            {timeDifference(note.createTime)}\n          </span>\n        </div>\n        <Button\n          className=\"isoDeleteBtn\"\n          icon={<CloseOutlined />}\n          type=\"default\"\n          onClick={onDelete}\n        />\n      </div>\n    );\n  }\n  function onChange(event) {\n    setSearch(event.target.value);\n  }\n  const notes = filterNotes(props.notes, search);\n  return (\n    <NoteListWrapper className=\"isoNoteListWrapper\">\n      <InputSearch\n        placeholder=\"Search Notes\"\n        className=\"isoSearchNotes\"\n        value={search}\n        onChange={onChange}\n      />\n      <div className=\"isoNoteList\">\n        {notes && notes.length > 0 ? (\n          <Scrollbars style={{ height: 'calc(100vh - 70px)' }}>\n            {notes.map((note) => singleNote(note))}\n          </Scrollbars>\n        ) : (\n          <span className=\"isoNoResultMsg\">No note found</span>\n        )}\n      </div>\n    </NoteListWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}