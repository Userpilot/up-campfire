{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport allMails from './data';\nimport actions from './actions';\nconst initState = {\n  allMails,\n  tag: undefined,\n  selectedMail: -1,\n  filterAttr: {\n    bucket: 'Inbox'\n  },\n  composeMail: false,\n  replyMail: false,\n  searchString: ''\n};\nexport default function mailReducer(state = initState, action) {\n  switch (action.type) {\n    case actions.FILTER_ATTRIBUTE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        composeMail: false,\n        replyMail: false,\n        selectedMail: -1,\n        filterAttr: _objectSpread({}, action.filterAttr)\n      });\n\n    case actions.SELECTED_MAIL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        replyMail: false,\n        selectedMail: action.selectedMail,\n        allMails: action.allMails\n      });\n\n    case actions.COMPOSE_MAIL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        replyMail: false,\n        composeMail: action.composeMail\n      });\n\n    case actions.REPLY_MAIL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        replyMail: action.replyMail\n      });\n\n    case actions.SEARCH_STRING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        searchString: action.searchString\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/redux/mail/reducer.js"],"names":["allMails","actions","initState","tag","undefined","selectedMail","filterAttr","bucket","composeMail","replyMail","searchString","mailReducer","state","action","type","FILTER_ATTRIBUTE","SELECTED_MAIL","COMPOSE_MAIL","REPLY_MAIL","SEARCH_STRING"],"mappings":";;;;;;AAAA,OAAOA,QAAP,MAAqB,QAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,SAAS,GAAG;AAChBF,EAAAA,QADgB;AAEhBG,EAAAA,GAAG,EAAEC,SAFW;AAGhBC,EAAAA,YAAY,EAAE,CAAC,CAHC;AAIhBC,EAAAA,UAAU,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAJI;AAKhBC,EAAAA,WAAW,EAAE,KALG;AAMhBC,EAAAA,SAAS,EAAE,KANK;AAOhBC,EAAAA,YAAY,EAAE;AAPE,CAAlB;AAUA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGV,SAA7B,EAAwCW,MAAxC,EAAgD;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,OAAO,CAACc,gBAAb;AACE,6CACKH,KADL;AAEEJ,QAAAA,WAAW,EAAE,KAFf;AAGEC,QAAAA,SAAS,EAAE,KAHb;AAIEJ,QAAAA,YAAY,EAAE,CAAC,CAJjB;AAKEC,QAAAA,UAAU,oBAAOO,MAAM,CAACP,UAAd;AALZ;;AAOF,SAAKL,OAAO,CAACe,aAAb;AACE,6CACKJ,KADL;AAEEH,QAAAA,SAAS,EAAE,KAFb;AAGEJ,QAAAA,YAAY,EAAEQ,MAAM,CAACR,YAHvB;AAIEL,QAAAA,QAAQ,EAAEa,MAAM,CAACb;AAJnB;;AAMF,SAAKC,OAAO,CAACgB,YAAb;AACE,6CACKL,KADL;AAEEH,QAAAA,SAAS,EAAE,KAFb;AAGED,QAAAA,WAAW,EAAEK,MAAM,CAACL;AAHtB;;AAKF,SAAKP,OAAO,CAACiB,UAAb;AACE,6CACKN,KADL;AAEEH,QAAAA,SAAS,EAAEI,MAAM,CAACJ;AAFpB;;AAIF,SAAKR,OAAO,CAACkB,aAAb;AACE,6CACKP,KADL;AAEEF,QAAAA,YAAY,EAAEG,MAAM,CAACH;AAFvB;;AAIF;AACE,aAAOE,KAAP;AAjCJ;AAmCD","sourcesContent":["import allMails from './data';\nimport actions from './actions';\n\nconst initState = {\n  allMails,\n  tag: undefined,\n  selectedMail: -1,\n  filterAttr: { bucket: 'Inbox' },\n  composeMail: false,\n  replyMail: false,\n  searchString: '',\n};\n\nexport default function mailReducer(state = initState, action) {\n  switch (action.type) {\n    case actions.FILTER_ATTRIBUTE:\n      return {\n        ...state,\n        composeMail: false,\n        replyMail: false,\n        selectedMail: -1,\n        filterAttr: { ...action.filterAttr },\n      };\n    case actions.SELECTED_MAIL:\n      return {\n        ...state,\n        replyMail: false,\n        selectedMail: action.selectedMail,\n        allMails: action.allMails,\n      };\n    case actions.COMPOSE_MAIL:\n      return {\n        ...state,\n        replyMail: false,\n        composeMail: action.composeMail,\n      };\n    case actions.REPLY_MAIL:\n      return {\n        ...state,\n        replyMail: action.replyMail,\n      };\n    case actions.SEARCH_STRING:\n      return {\n        ...state,\n        searchString: action.searchString,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}