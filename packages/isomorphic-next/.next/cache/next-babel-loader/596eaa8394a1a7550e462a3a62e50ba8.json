{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/ui/GlideCarousel/GlideCarousel.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Glide from '@glidejs/glide';\nimport '@glidejs/glide/dist/css/glide.core.min.css';\nimport GlideWrapper, { GlideSlideWrapper, ButtonControlWrapper, ButtonWrapper, BulletControlWrapper, BulletButton, DefaultBtn } from './GlideCarousel.style';\n\nvar GlideCarousel = function GlideCarousel(_ref) {\n  _s();\n\n  var className = _ref.className,\n      children = _ref.children,\n      options = _ref.options,\n      controls = _ref.controls,\n      prevButton = _ref.prevButton,\n      nextButton = _ref.nextButton,\n      bullets = _ref.bullets,\n      numberOfBullets = _ref.numberOfBullets,\n      carouselSelector = _ref.carouselSelector;\n  // Add all classs to an array.\n  var addAllClasses = ['glide']; // className prop checking.\n\n  if (className) {\n    addAllClasses.push(className);\n  } // number of bullets loop.\n\n\n  var totalBullets = [];\n\n  for (var i = 0; i < numberOfBullets; i++) {\n    totalBullets.push(i);\n  } // Load glide.\n\n\n  useEffect(function () {\n    var glide = new Glide(carouselSelector ? \"#\".concat(carouselSelector) : '#glide', _objectSpread({}, options));\n    glide.mount();\n  }, [carouselSelector, options]);\n  return __jsx(GlideWrapper, {\n    className: addAllClasses.join(' '),\n    id: carouselSelector || 'glide',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"glide__track\",\n    \"data-glide-el\": \"track\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, __jsx(\"ul\", {\n    className: \"glide__slides\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, children)), controls && __jsx(ButtonControlWrapper, {\n    className: \"glide__controls\",\n    \"data-glide-el\": \"controls\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(ButtonWrapper, {\n    className: \"glide__prev--area\",\n    \"data-glide-dir\": \"<\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, prevButton ? prevButton : __jsx(DefaultBtn, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 40\n    }\n  }, \"Prev\")), __jsx(ButtonWrapper, {\n    className: \"glide__next--area\",\n    \"data-glide-dir\": \">\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, nextButton ? nextButton : __jsx(DefaultBtn, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 40\n    }\n  }, \"Next\"))), bullets && __jsx(BulletControlWrapper, {\n    className: \"glide__bullets\",\n    \"data-glide-el\": \"controls[nav]\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, totalBullets.map(function (index) {\n    return __jsx(BulletButton, {\n      key: index,\n      className: \"glide__bullet\",\n      \"data-glide-dir\": \"=\".concat(index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    });\n  }))));\n}; // Glide Slide wrapper component.\n\n\n_s(GlideCarousel, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = GlideCarousel;\n\nvar GlideSlide = function GlideSlide(_ref2) {\n  var children = _ref2.children;\n  return __jsx(GlideSlideWrapper, {\n    className: \"glide__slide\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, children);\n};\n\n_c2 = GlideSlide;\nGlideCarousel.propTypes = {\n  /** className of the GlideCarousel. */\n  className: PropTypes.string,\n\n  /** Children. */\n  children: PropTypes.element,\n\n  /** You can add your custom glid options using this prop. */\n  options: PropTypes.object,\n\n  /** Hide || show controls nav. */\n  controls: PropTypes.bool,\n\n  /** Hide || show bullets nav. */\n  bullets: PropTypes.bool,\n\n  /** This prop only take your slider / carousel / testimonials data length. [Note: if \"bullets\" props is set TRUE, then \"numberOfBullets\" must be added] */\n  numberOfBullets: PropTypes.number,\n\n  /** Set previous button for glide carousel. */\n  prevButton: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n\n  /** Set next button for glide carousel. */\n  nextButton: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n};\nGlideSlide.propTypes = {\n  /** Children. */\n  children: PropTypes.element\n}; // GlideCarousel default props.\n\nGlideCarousel.defaultProps = {\n  controls: true\n};\nexport { GlideSlide };\nexport default GlideCarousel;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GlideCarousel\");\n$RefreshReg$(_c2, \"GlideSlide\");","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/ui/GlideCarousel/GlideCarousel.js"],"names":["React","Fragment","useEffect","PropTypes","Glide","GlideWrapper","GlideSlideWrapper","ButtonControlWrapper","ButtonWrapper","BulletControlWrapper","BulletButton","DefaultBtn","GlideCarousel","className","children","options","controls","prevButton","nextButton","bullets","numberOfBullets","carouselSelector","addAllClasses","push","totalBullets","i","glide","mount","join","map","index","GlideSlide","propTypes","string","element","object","bool","number","oneOfType","defaultProps"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Glide from '@glidejs/glide';\nimport '@glidejs/glide/dist/css/glide.core.min.css';\nimport GlideWrapper, {\n  GlideSlideWrapper,\n  ButtonControlWrapper,\n  ButtonWrapper,\n  BulletControlWrapper,\n  BulletButton,\n  DefaultBtn,\n} from './GlideCarousel.style';\n\nconst GlideCarousel = ({\n  className,\n  children,\n  options,\n  controls,\n  prevButton,\n  nextButton,\n  bullets,\n  numberOfBullets,\n  carouselSelector,\n}) => {\n  // Add all classs to an array.\n  const addAllClasses = ['glide'];\n\n  // className prop checking.\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  // number of bullets loop.\n  const totalBullets = [];\n  for (let i = 0; i < numberOfBullets; i++) {\n    totalBullets.push(i);\n  }\n\n  // Load glide.\n  useEffect(() => {\n    const glide = new Glide(\n      carouselSelector ? `#${carouselSelector}` : '#glide',\n      {\n        ...options,\n      }\n    );\n    glide.mount();\n  }, [carouselSelector, options]);\n\n  return (\n    <GlideWrapper\n      className={addAllClasses.join(' ')}\n      id={carouselSelector || 'glide'}\n    >\n      <div className=\"glide__track\" data-glide-el=\"track\">\n        <ul className=\"glide__slides\">{children}</ul>\n      </div>\n\n      {/** if controls prop true then show controls nav. */}\n      {controls && (\n        <ButtonControlWrapper\n          className=\"glide__controls\"\n          data-glide-el=\"controls\"\n        >\n          <ButtonWrapper className=\"glide__prev--area\" data-glide-dir=\"<\">\n            {prevButton ? prevButton : <DefaultBtn>Prev</DefaultBtn>}\n          </ButtonWrapper>\n          <ButtonWrapper className=\"glide__next--area\" data-glide-dir=\">\">\n            {nextButton ? nextButton : <DefaultBtn>Next</DefaultBtn>}\n          </ButtonWrapper>\n        </ButtonControlWrapper>\n      )}\n\n      {/** if bullets prop true then show bullets nav. */}\n      {bullets && (\n        <BulletControlWrapper\n          className=\"glide__bullets\"\n          data-glide-el=\"controls[nav]\"\n        >\n          <Fragment>\n            {totalBullets.map(index => (\n              <BulletButton\n                key={index}\n                className=\"glide__bullet\"\n                data-glide-dir={`=${index}`}\n              />\n            ))}\n          </Fragment>\n        </BulletControlWrapper>\n      )}\n    </GlideWrapper>\n  );\n};\n\n// Glide Slide wrapper component.\nconst GlideSlide = ({ children }) => {\n  return (\n    <GlideSlideWrapper className=\"glide__slide\">{children}</GlideSlideWrapper>\n  );\n};\n\nGlideCarousel.propTypes = {\n  /** className of the GlideCarousel. */\n  className: PropTypes.string,\n\n  /** Children. */\n  children: PropTypes.element,\n\n  /** You can add your custom glid options using this prop. */\n  options: PropTypes.object,\n\n  /** Hide || show controls nav. */\n  controls: PropTypes.bool,\n\n  /** Hide || show bullets nav. */\n  bullets: PropTypes.bool,\n\n  /** This prop only take your slider / carousel / testimonials data length. [Note: if \"bullets\" props is set TRUE, then \"numberOfBullets\" must be added] */\n  numberOfBullets: PropTypes.number,\n\n  /** Set previous button for glide carousel. */\n  prevButton: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n\n  /** Set next button for glide carousel. */\n  nextButton: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nGlideSlide.propTypes = {\n  /** Children. */\n  children: PropTypes.element,\n};\n\n// GlideCarousel default props.\nGlideCarousel.defaultProps = {\n  controls: true,\n};\n\nexport { GlideSlide };\n\nexport default GlideCarousel;\n"]},"metadata":{},"sourceType":"module"}