{"ast":null,"code":"var _jsxFileName = \"/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/containers/ThemeSwitcher/ThemeSwitcher.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Actions from '@iso/redux/themeSwitcher/actions';\nimport Switcher from '@iso/components/ThemeSwitcher/ThemeSwitcher';\nimport LanguageSwitcher from '../LanguageSwitcher/LanguageSwitcher';\nimport Themes from './config';\nimport bucketSVG from '@iso/assets/images/bucket.svg';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport ThemeSwitcherStyle from './ThemeSwitcher.styles';\nvar switchActivation = Actions.switchActivation,\n    _changeTheme = Actions.changeTheme;\nexport default function ThemeSwitcher() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.ThemeSwitcher;\n  }),\n      isActivated = _useSelector.isActivated,\n      topbarTheme = _useSelector.topbarTheme,\n      sidebarTheme = _useSelector.sidebarTheme,\n      layoutTheme = _useSelector.layoutTheme;\n\n  var dispatch = useDispatch();\n  var styleButton = {\n    background: sidebarTheme.buttonColor\n  };\n  return __jsx(ThemeSwitcherStyle, {\n    className: isActivated ? 'isoThemeSwitcher active' : 'isoThemeSwitcher',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"componentTitleWrapper\",\n    style: styleButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(\"h3\", {\n    className: \"componentTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(IntlMessages, {\n    id: \"themeSwitcher.settings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }))), __jsx(\"div\", {\n    className: \"SwitcherBlockWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(Switcher, {\n    config: Themes.sidebarTheme,\n    changeTheme: function changeTheme(attr, theme) {\n      return dispatch(_changeTheme(attr, theme));\n    },\n    selectedId: sidebarTheme.themeName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), __jsx(Switcher, {\n    config: Themes.topbarTheme,\n    changeTheme: function changeTheme(attr, theme) {\n      return dispatch(_changeTheme(attr, theme));\n    },\n    selectedId: topbarTheme.themeName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), __jsx(Switcher, {\n    config: Themes.layoutTheme,\n    changeTheme: function changeTheme(attr, theme) {\n      return dispatch(_changeTheme(attr, theme));\n    },\n    selectedId: layoutTheme.themeName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), __jsx(LanguageSwitcher, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"purchaseBtnWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    href: \"https://themeforest.net/item/isomorphic-react-redux-admin-dashboard/20262330?ref=redqteam\",\n    className: \"purchaseBtn\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    style: styleButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(IntlMessages, {\n    id: \"themeSwitcher.purchase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }))), __jsx(\"button\", {\n    type: \"primary\",\n    className: \"switcherToggleBtn\",\n    style: styleButton,\n    onClick: function onClick() {\n      dispatch(switchActivation());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    src: bucketSVG,\n    alt: \"bucket\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(ThemeSwitcher, \"9++QwMhHDLmnWOODPL2xyRsgkFM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ThemeSwitcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeSwitcher\");","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/containers/ThemeSwitcher/ThemeSwitcher.js"],"names":["React","useDispatch","useSelector","Actions","Switcher","LanguageSwitcher","Themes","bucketSVG","IntlMessages","ThemeSwitcherStyle","switchActivation","changeTheme","ThemeSwitcher","state","isActivated","topbarTheme","sidebarTheme","layoutTheme","dispatch","styleButton","background","buttonColor","attr","theme","themeName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Actions from '@iso/redux/themeSwitcher/actions';\nimport Switcher from '@iso/components/ThemeSwitcher/ThemeSwitcher';\nimport LanguageSwitcher from '../LanguageSwitcher/LanguageSwitcher';\nimport Themes from './config';\nimport bucketSVG from '@iso/assets/images/bucket.svg';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport ThemeSwitcherStyle from './ThemeSwitcher.styles';\n\nconst { switchActivation, changeTheme } = Actions;\n\nexport default function ThemeSwitcher() {\n  const { isActivated, topbarTheme, sidebarTheme, layoutTheme } = useSelector(\n    state => state.ThemeSwitcher\n  );\n  const dispatch = useDispatch();\n  const styleButton = { background: sidebarTheme.buttonColor };\n\n  return (\n    <ThemeSwitcherStyle\n      className={isActivated ? 'isoThemeSwitcher active' : 'isoThemeSwitcher'}\n    >\n      <div className=\"componentTitleWrapper\" style={styleButton}>\n        <h3 className=\"componentTitle\">\n          <IntlMessages id=\"themeSwitcher.settings\" />\n        </h3>\n      </div>\n\n      <div className=\"SwitcherBlockWrapper\">\n        <Switcher\n          config={Themes.sidebarTheme}\n          changeTheme={(attr, theme) => dispatch(changeTheme(attr, theme))}\n          selectedId={sidebarTheme.themeName}\n        />\n\n        <Switcher\n          config={Themes.topbarTheme}\n          changeTheme={(attr, theme) => dispatch(changeTheme(attr, theme))}\n          selectedId={topbarTheme.themeName}\n        />\n\n        <Switcher\n          config={Themes.layoutTheme}\n          changeTheme={(attr, theme) => dispatch(changeTheme(attr, theme))}\n          selectedId={layoutTheme.themeName}\n        />\n        <LanguageSwitcher />\n      </div>\n\n      <div className=\"purchaseBtnWrapper\">\n        <a\n          href=\"https://themeforest.net/item/isomorphic-react-redux-admin-dashboard/20262330?ref=redqteam\"\n          className=\"purchaseBtn\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={styleButton}\n        >\n          <IntlMessages id=\"themeSwitcher.purchase\" />\n        </a>\n      </div>\n\n      <button\n        type=\"primary\"\n        className=\"switcherToggleBtn\"\n        style={styleButton}\n        onClick={() => {\n          dispatch(switchActivation());\n        }}\n      >\n        <img src={bucketSVG} alt=\"bucket\" />\n      </button>\n    </ThemeSwitcherStyle>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}