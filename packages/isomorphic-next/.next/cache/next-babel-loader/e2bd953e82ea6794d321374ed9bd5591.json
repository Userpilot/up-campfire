{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(changedCard),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(initData),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(updateData),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(_callee2);\n\nimport { all, takeEvery, put } from 'redux-saga/effects';\nimport actions from './actions';\nimport fake from './fake';\nimport fakeinitdata from './config';\nexport function changedCard() {\n  return _regeneratorRuntime.wrap(function changedCard$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(actions.CHANGE_CARDS, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked);\n}\nexport function initData() {\n  var fakeData;\n  return _regeneratorRuntime.wrap(function initData$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          fakeData = fakeinitdata;\n\n          if (fakeinitdata.productQuantity.length === 0) {\n            fakeData = fake;\n          }\n\n          _context3.next = 4;\n          return put({\n            type: actions.INIT_DATA,\n            payload: fakeData\n          });\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked2);\n}\nexport function updateData(_ref) {\n  var products, productQuantity;\n  return _regeneratorRuntime.wrap(function updateData$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          products = _ref.products, productQuantity = _ref.productQuantity;\n          localStorage.setItem('cartProductQuantity', JSON.stringify(productQuantity));\n          localStorage.setItem('cartProducts', JSON.stringify(products));\n          _context4.next = 5;\n          return put({\n            type: actions.UPDATE_DATA,\n            products: products,\n            productQuantity: productQuantity\n          });\n\n        case 5:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked3);\n}\nexport default function _callee2() {\n  return _regeneratorRuntime.wrap(function _callee2$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([takeEvery(actions.INIT_DATA_SAGA, initData), takeEvery(actions.UPDATE_DATA_SAGA, updateData)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked4);\n}","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/redux/ecommerce/saga.js"],"names":["changedCard","initData","updateData","all","takeEvery","put","actions","fake","fakeinitdata","CHANGE_CARDS","fakeData","productQuantity","length","type","INIT_DATA","payload","products","localStorage","setItem","JSON","stringify","UPDATE_DATA","INIT_DATA_SAGA","UPDATE_DATA_SAGA"],"mappings":";;oDAKiBA,W;qDAGAC,Q;qDAUAC,U;;;AAlBjB,SAASC,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,QAAoC,oBAApC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,YAAP,MAAyB,UAAzB;AAEA,OAAO,SAAUR,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMI,SAAS,CAACE,OAAO,CAACG,YAAT,wCAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAvB,EAAf;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGP,OAAO,SAAUR,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACDS,UAAAA,QADC,GACUF,YADV;;AAEL,cAAIA,YAAY,CAACG,eAAb,CAA6BC,MAA7B,KAAwC,CAA5C,EAA+C;AAC7CF,YAAAA,QAAQ,GAAGH,IAAX;AACD;;AAJI;AAKL,iBAAMF,GAAG,CAAC;AACRQ,YAAAA,IAAI,EAAEP,OAAO,CAACQ,SADN;AAERC,YAAAA,OAAO,EAAEL;AAFD,WAAD,CAAT;;AALK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUP,OAAO,SAAUR,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuBc,UAAAA,QAAvB,QAAuBA,QAAvB,EAAiCL,eAAjC,QAAiCA,eAAjC;AACLM,UAAAA,YAAY,CAACC,OAAb,CAAqB,qBAArB,EAA4CC,IAAI,CAACC,SAAL,CAAeT,eAAf,CAA5C;AACAM,UAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAArC;AAFK;AAGL,iBAAMX,GAAG,CAAC;AACRQ,YAAAA,IAAI,EAAEP,OAAO,CAACe,WADN;AAERL,YAAAA,QAAQ,EAARA,QAFQ;AAGRL,YAAAA,eAAe,EAAfA;AAHQ,WAAD,CAAT;;AAHK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASP,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMR,GAAG,CAAC,CACRC,SAAS,CAACE,OAAO,CAACgB,cAAT,EAAyBrB,QAAzB,CADD,EAERG,SAAS,CAACE,OAAO,CAACiB,gBAAT,EAA2BrB,UAA3B,CAFD,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, takeEvery, put } from 'redux-saga/effects';\nimport actions from './actions';\nimport fake from './fake';\nimport fakeinitdata from './config';\n\nexport function* changedCard() {\n  yield takeEvery(actions.CHANGE_CARDS, function*() {});\n}\nexport function* initData() {\n  let fakeData = fakeinitdata;\n  if (fakeinitdata.productQuantity.length === 0) {\n    fakeData = fake;\n  }\n  yield put({\n    type: actions.INIT_DATA,\n    payload: fakeData,\n  });\n}\nexport function* updateData({ products, productQuantity }) {\n  localStorage.setItem('cartProductQuantity', JSON.stringify(productQuantity));\n  localStorage.setItem('cartProducts', JSON.stringify(products));\n  yield put({\n    type: actions.UPDATE_DATA,\n    products,\n    productQuantity,\n  });\n}\nexport default function*() {\n  yield all([\n    takeEvery(actions.INIT_DATA_SAGA, initData),\n    takeEvery(actions.UPDATE_DATA_SAGA, updateData),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}