{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/components/Contacts/ContactList.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport IntlMessages from '../utility/intlMessages';\nimport { InputSearch } from '../uielements/input';\nimport DeleteButton from './DeleteButton';\nimport { ContactListWrapper } from './ContactList.style';\nimport Scrollbar from '../utility/customScrollBar';\nimport { useIntl } from 'react-intl';\n\nfunction filterContacts(contacts, search) {\n  search = search.toUpperCase();\n  return search ? contacts.filter(function (contact) {\n    return contact.name.toUpperCase().includes(search);\n  }) : contacts;\n}\n\nexport default function ContactList(props) {\n  _s();\n\n  var intl = useIntl();\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      search = _React$useState2[0],\n      setSearch = _React$useState2[1];\n\n  function singleContact(contact) {\n    var selectedId = props.selectedId,\n        deleteContact = props.deleteContact,\n        changeContact = props.changeContact;\n    var activeClass = selectedId === contact.id ? 'active' : '';\n\n    var onChange = function onChange() {\n      return changeContact(contact.id);\n    };\n\n    return __jsx(\"div\", {\n      key: contact.id,\n      className: \"\".concat(activeClass, \" isoSingleContact\"),\n      onClick: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"isoAvatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, contact.avatar ? __jsx(\"img\", {\n      alt: \"#\",\n      src: contact.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 29\n      }\n    }) : ''), __jsx(\"div\", {\n      className: \"isoContactName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, contact.name ? contact.name : 'No Name')), __jsx(DeleteButton, {\n      deleteContact: deleteContact,\n      contact: contact,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  function onChange(event) {\n    setSearch(event.target.value);\n  }\n\n  var contacts = filterContacts(props.contacts, search);\n  return __jsx(ContactListWrapper, {\n    className: \"isoContactListWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, __jsx(InputSearch, {\n    placeholder: intl.formatMessage({\n      id: 'contactlist.searchContacts'\n    }),\n    value: search,\n    onChange: onChange,\n    className: \"isoSearchBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), contacts && contacts.length > 0 ? __jsx(\"div\", {\n    className: \"isoContactList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(Scrollbar, {\n    className: \"contactListScrollbar\",\n    style: {\n      height: 'calc(100vh - 200px)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, contacts.map(function (contact) {\n    return singleContact(contact);\n  }))) : __jsx(\"span\", {\n    className: \"isoNoResultMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(IntlMessages, {\n    id: \"Component.contacts.noOption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }\n  })));\n}\n\n_s(ContactList, \"5xI5HjWGfGgPcOtLDchHXq437x8=\", false, function () {\n  return [useIntl];\n});\n\n_c = ContactList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/components/Contacts/ContactList.js"],"names":["React","IntlMessages","InputSearch","DeleteButton","ContactListWrapper","Scrollbar","useIntl","filterContacts","contacts","search","toUpperCase","filter","contact","name","includes","ContactList","props","intl","useState","setSearch","singleContact","selectedId","deleteContact","changeContact","activeClass","id","onChange","avatar","event","target","value","formatMessage","length","height","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport IntlMessages from '../utility/intlMessages';\nimport { InputSearch } from '../uielements/input';\nimport DeleteButton from './DeleteButton';\nimport { ContactListWrapper } from './ContactList.style';\nimport Scrollbar from '../utility/customScrollBar';\nimport { useIntl } from 'react-intl';\n\nfunction filterContacts(contacts, search) {\n  search = search.toUpperCase();\n  return search\n    ? contacts.filter((contact) => contact.name.toUpperCase().includes(search))\n    : contacts;\n}\n\nexport default function ContactList(props) {\n  const intl = useIntl();\n  const [search, setSearch] = React.useState('');\n  function singleContact(contact) {\n    const { selectedId, deleteContact, changeContact } = props;\n    const activeClass = selectedId === contact.id ? 'active' : '';\n    const onChange = () => changeContact(contact.id);\n    return (\n      <div\n        key={contact.id}\n        className={`${activeClass} isoSingleContact`}\n        onClick={onChange}\n      >\n        <div className=\"isoAvatar\">\n          {contact.avatar ? <img alt=\"#\" src={contact.avatar} /> : ''}\n        </div>\n        <div className=\"isoContactName\">\n          <h3>{contact.name ? contact.name : 'No Name'}</h3>\n        </div>\n        <DeleteButton deleteContact={deleteContact} contact={contact} />\n      </div>\n    );\n  }\n  function onChange(event) {\n    setSearch(event.target.value);\n  }\n\n  const contacts = filterContacts(props.contacts, search);\n  return (\n    <ContactListWrapper className=\"isoContactListWrapper\">\n      <InputSearch\n        placeholder={intl.formatMessage({\n          id: 'contactlist.searchContacts',\n        })}\n        value={search}\n        onChange={onChange}\n        className=\"isoSearchBar\"\n      />\n      {contacts && contacts.length > 0 ? (\n        <div className=\"isoContactList\">\n          <Scrollbar\n            className=\"contactListScrollbar\"\n            style={{ height: 'calc(100vh - 200px)' }}\n          >\n            {contacts.map((contact) => singleContact(contact))}\n          </Scrollbar>\n        </div>\n      ) : (\n        <span className=\"isoNoResultMsg\">\n          {<IntlMessages id=\"Component.contacts.noOption\" />}\n        </span>\n      )}\n    </ContactListWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}