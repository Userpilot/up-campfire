{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { contacts } from './reducer';\n\nfunction ascendingSort(contact1, contact2) {\n  var name1 = contact1.name ? contact1.name.toUpperCase() : '~';\n  var name2 = contact2.name ? contact2.name.toUpperCase() : '~';\n  return name1 > name2 ? 1 : name1 === name2 ? 0 : -1;\n}\n\nvar contactActions = {\n  ADD_CONTACT: 'ADD_CONTACT',\n  EDIT_CONTACT: 'EDIT_CONTACT',\n  DELETE__CONTACT: 'DELETE__CONTACT',\n  CHANGE_CONTACT: 'CHANGE_CONTACT',\n  EDIT_VIEW: 'EDIT_VIEW',\n  changeContact: function changeContact(id) {\n    return {\n      type: contactActions.CHANGE_CONTACT,\n      id: id\n    };\n  },\n  addContact: function addContact() {\n    var newContact = {\n      id: new Date(),\n      firstName: '',\n      avatar: contacts[new Date() % 10].avatar,\n      LastName: '',\n      mobile: '',\n      home: '',\n      name: '',\n      company: '',\n      work: '',\n      note: ''\n    };\n    return function (dispatch, getState) {\n      dispatch({\n        type: contactActions.ADD_CONTACT,\n        contacts: [].concat(_toConsumableArray(getState().Contacts.contacts), [newContact]),\n        selectedId: newContact.id\n      });\n    };\n  },\n  editContact: function editContact(newContact) {\n    return function (dispatch, getState) {\n      var contacts = getState().Contacts.contacts;\n      var newContacts = [];\n      contacts.forEach(function (contact) {\n        if (contact.id === newContact.id) {\n          newContacts.push(newContact);\n        } else {\n          newContacts.push(contact);\n        }\n      });\n      dispatch({\n        type: contactActions.EDIT_CONTACT,\n        contacts: newContacts.sort(ascendingSort)\n      });\n    };\n  },\n  deleteContact: function deleteContact(id) {\n    return function (dispatch, getState) {\n      var contacts = getState().Contacts.contacts;\n      var seectedId = getState().Contacts.seectedId;\n      var newContacts = [];\n      contacts.forEach(function (contact) {\n        if (contact.id === id) {} else {\n          newContacts.push(contact);\n        }\n      });\n      dispatch({\n        type: contactActions.DELETE__CONTACT,\n        contacts: newContacts,\n        seectedId: id === seectedId ? undefined : seectedId\n      });\n    };\n  },\n  viewChange: function viewChange(view) {\n    return {\n      type: contactActions.EDIT_VIEW,\n      view: view\n    };\n  }\n};\nexport default contactActions;","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/redux/contacts/actions.js"],"names":["contacts","ascendingSort","contact1","contact2","name1","name","toUpperCase","name2","contactActions","ADD_CONTACT","EDIT_CONTACT","DELETE__CONTACT","CHANGE_CONTACT","EDIT_VIEW","changeContact","id","type","addContact","newContact","Date","firstName","avatar","LastName","mobile","home","company","work","note","dispatch","getState","Contacts","selectedId","editContact","newContacts","forEach","contact","push","sort","deleteContact","seectedId","undefined","viewChange","view"],"mappings":"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","sourcesContent":["import { contacts } from './reducer';\n\nfunction ascendingSort(contact1, contact2) {\n  const name1 = contact1.name ? contact1.name.toUpperCase() : '~';\n  const name2 = contact2.name ? contact2.name.toUpperCase() : '~';\n  return name1 > name2 ? 1 : name1 === name2 ? 0 : -1;\n}\n\nconst contactActions = {\n  ADD_CONTACT: 'ADD_CONTACT',\n  EDIT_CONTACT: 'EDIT_CONTACT',\n  DELETE__CONTACT: 'DELETE__CONTACT',\n  CHANGE_CONTACT: 'CHANGE_CONTACT',\n  EDIT_VIEW: 'EDIT_VIEW',\n  changeContact: id => ({\n    type: contactActions.CHANGE_CONTACT,\n    id,\n  }),\n  addContact: () => {\n    const newContact = {\n      id: new Date(),\n      firstName: '',\n      avatar: contacts[new Date() % 10].avatar,\n      LastName: '',\n      mobile: '',\n      home: '',\n      name: '',\n      company: '',\n      work: '',\n      note: '',\n    };\n    return (dispatch, getState) => {\n      dispatch({\n        type: contactActions.ADD_CONTACT,\n        contacts: [...getState().Contacts.contacts, newContact],\n        selectedId: newContact.id,\n      });\n    };\n  },\n  editContact: newContact => {\n    return (dispatch, getState) => {\n      const contacts = getState().Contacts.contacts;\n      const newContacts = [];\n      contacts.forEach(contact => {\n        if (contact.id === newContact.id) {\n          newContacts.push(newContact);\n        } else {\n          newContacts.push(contact);\n        }\n      });\n      dispatch({\n        type: contactActions.EDIT_CONTACT,\n        contacts: newContacts.sort(ascendingSort),\n      });\n    };\n  },\n  deleteContact: id => {\n    return (dispatch, getState) => {\n      const contacts = getState().Contacts.contacts;\n      const seectedId = getState().Contacts.seectedId;\n      const newContacts = [];\n      contacts.forEach(contact => {\n        if (contact.id === id) {\n        } else {\n          newContacts.push(contact);\n        }\n      });\n      dispatch({\n        type: contactActions.DELETE__CONTACT,\n        contacts: newContacts,\n        seectedId: id === seectedId ? undefined : seectedId,\n      });\n    };\n  },\n  viewChange: view => ({\n    type: contactActions.EDIT_VIEW,\n    view,\n  }),\n};\nexport default contactActions;\n"]},"metadata":{},"sourceType":"module"}