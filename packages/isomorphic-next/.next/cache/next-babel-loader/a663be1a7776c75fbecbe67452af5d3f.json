{"ast":null,"code":"var actions = {\n  LOGIN_REQUEST_START: 'LOGIN_REQUEST_START',\n  JWT_LOGIN_REQUEST_START: 'JWT_LOGIN_REQUEST_START',\n  LOGIN_REQUEST_SUCCESS: 'LOGIN_REQUEST_SUCCESS',\n  LOGIN_REQUEST_FAILURE: 'LOGIN_REQUEST_FAILURE',\n  LOGOUT_REQUEST_START: 'LOGOUT_REQUEST_START',\n  LOGOUT_REQUEST_SUCCESS: 'LOGOUT_REQUEST_SUCCESS',\n  LOGOUT_REQUEST_FAILURE: 'LOGOUT_REQUEST_FAILURE',\n  login: function login(credentials) {\n    return {\n      type: actions.LOGIN_REQUEST_START,\n      payload: credentials\n    };\n  },\n  jwtLogin: function jwtLogin(history, userInfo) {\n    return {\n      type: actions.JWT_LOGIN_REQUEST_START,\n      payload: {\n        history: history,\n        userInfo: userInfo\n      }\n    };\n  },\n  loginRequestSuccess: function loginRequestSuccess(credentials) {\n    return {\n      type: actions.LOGIN_REQUEST_SUCCESS,\n      payload: credentials\n    };\n  },\n  loginRequestFailure: function loginRequestFailure(error) {\n    return {\n      type: actions.LOGIN_REQUEST_SUCCESS,\n      payload: error\n    };\n  },\n  logout: function logout() {\n    return {\n      type: actions.LOGOUT_REQUEST_START\n    };\n  },\n  logoutRequestSuccess: function logoutRequestSuccess() {\n    return {\n      type: actions.LOGOUT_REQUEST_SUCCESS\n    };\n  },\n  logoutRequestFailure: function logoutRequestFailure(error) {\n    return {\n      type: actions.LOGOUT_REQUEST_FAILURE,\n      payload: error\n    };\n  }\n};\nexport default actions;","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/packages/isomorphic-next/authentication/actions.js"],"names":["actions","LOGIN_REQUEST_START","JWT_LOGIN_REQUEST_START","LOGIN_REQUEST_SUCCESS","LOGIN_REQUEST_FAILURE","LOGOUT_REQUEST_START","LOGOUT_REQUEST_SUCCESS","LOGOUT_REQUEST_FAILURE","login","credentials","type","payload","jwtLogin","history","userInfo","loginRequestSuccess","loginRequestFailure","error","logout","logoutRequestSuccess","logoutRequestFailure"],"mappings":"AAAA,IAAMA,OAAO,GAAG;AACdC,EAAAA,mBAAmB,EAAE,qBADP;AAEdC,EAAAA,uBAAuB,EAAE,yBAFX;AAGdC,EAAAA,qBAAqB,EAAE,uBAHT;AAIdC,EAAAA,qBAAqB,EAAE,uBAJT;AAKdC,EAAAA,oBAAoB,EAAE,sBALR;AAMdC,EAAAA,sBAAsB,EAAE,wBANV;AAOdC,EAAAA,sBAAsB,EAAE,wBAPV;AASdC,EAAAA,KAAK,EAAE,eAAAC,WAAW;AAAA,WAAK;AACrBC,MAAAA,IAAI,EAAEV,OAAO,CAACC,mBADO;AAErBU,MAAAA,OAAO,EAAEF;AAFY,KAAL;AAAA,GATJ;AAadG,EAAAA,QAAQ,EAAE,kBAACC,OAAD,EAAUC,QAAV;AAAA,WAAwB;AAChCJ,MAAAA,IAAI,EAAEV,OAAO,CAACE,uBADkB;AAEhCS,MAAAA,OAAO,EAAE;AAAEE,QAAAA,OAAO,EAAPA,OAAF;AAAWC,QAAAA,QAAQ,EAARA;AAAX;AAFuB,KAAxB;AAAA,GAbI;AAiBdC,EAAAA,mBAAmB,EAAE,6BAAAN,WAAW;AAAA,WAAK;AACnCC,MAAAA,IAAI,EAAEV,OAAO,CAACG,qBADqB;AAEnCQ,MAAAA,OAAO,EAAEF;AAF0B,KAAL;AAAA,GAjBlB;AAqBdO,EAAAA,mBAAmB,EAAE,6BAAAC,KAAK;AAAA,WAAK;AAC7BP,MAAAA,IAAI,EAAEV,OAAO,CAACG,qBADe;AAE7BQ,MAAAA,OAAO,EAAEM;AAFoB,KAAL;AAAA,GArBZ;AAyBdC,EAAAA,MAAM,EAAE;AAAA,WAAO;AACbR,MAAAA,IAAI,EAAEV,OAAO,CAACK;AADD,KAAP;AAAA,GAzBM;AA4Bdc,EAAAA,oBAAoB,EAAE;AAAA,WAAO;AAC3BT,MAAAA,IAAI,EAAEV,OAAO,CAACM;AADa,KAAP;AAAA,GA5BR;AA+Bdc,EAAAA,oBAAoB,EAAE,8BAAAH,KAAK;AAAA,WAAK;AAC9BP,MAAAA,IAAI,EAAEV,OAAO,CAACO,sBADgB;AAE9BI,MAAAA,OAAO,EAAEM;AAFqB,KAAL;AAAA;AA/Bb,CAAhB;AAoCA,eAAejB,OAAf","sourcesContent":["const actions = {\n  LOGIN_REQUEST_START: 'LOGIN_REQUEST_START',\n  JWT_LOGIN_REQUEST_START: 'JWT_LOGIN_REQUEST_START',\n  LOGIN_REQUEST_SUCCESS: 'LOGIN_REQUEST_SUCCESS',\n  LOGIN_REQUEST_FAILURE: 'LOGIN_REQUEST_FAILURE',\n  LOGOUT_REQUEST_START: 'LOGOUT_REQUEST_START',\n  LOGOUT_REQUEST_SUCCESS: 'LOGOUT_REQUEST_SUCCESS',\n  LOGOUT_REQUEST_FAILURE: 'LOGOUT_REQUEST_FAILURE',\n\n  login: credentials => ({\n    type: actions.LOGIN_REQUEST_START,\n    payload: credentials,\n  }),\n  jwtLogin: (history, userInfo) => ({\n    type: actions.JWT_LOGIN_REQUEST_START,\n    payload: { history, userInfo },\n  }),\n  loginRequestSuccess: credentials => ({\n    type: actions.LOGIN_REQUEST_SUCCESS,\n    payload: credentials,\n  }),\n  loginRequestFailure: error => ({\n    type: actions.LOGIN_REQUEST_SUCCESS,\n    payload: error,\n  }),\n  logout: () => ({\n    type: actions.LOGOUT_REQUEST_START,\n  }),\n  logoutRequestSuccess: () => ({\n    type: actions.LOGOUT_REQUEST_SUCCESS,\n  }),\n  logoutRequestFailure: error => ({\n    type: actions.LOGOUT_REQUEST_FAILURE,\n    payload: error,\n  }),\n};\nexport default actions;\n"]},"metadata":{},"sourceType":"module"}