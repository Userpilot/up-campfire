{"ast":null,"code":"var _jsxFileName = \"/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/containers/Chat/ComposeMessage.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Button from '@iso/components/uielements/button';\nimport notification from '@iso/components/Notification';\nimport actions from '@iso/redux/chat/actions';\nimport { ComposeMessageWrapper, Textarea } from './Messages.styles';\nconst {\n  sendMessage\n} = actions;\nexport default function ComposeMessage(props) {\n  const dispatch = useDispatch();\n  const [value, setValue] = React.useState('');\n\n  const onChange = event => {\n    setValue(event.target.value);\n  };\n\n  const onKeyPress = event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n\n      if (value && value.length > 0) {\n        dispatch(sendMessage(value));\n        setValue('');\n      } else {\n        notification('error', 'Please type something');\n      }\n    }\n  };\n\n  return __jsx(ComposeMessageWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(Textarea, {\n    autoSize: props.autosize,\n    value: value,\n    onChange: onChange,\n    onKeyPress: onKeyPress,\n    placeholder: \"Type your message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), props.showButton && __jsx(\"div\", {\n    className: \"sendMessageButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    onClick: () => dispatch(sendMessage(value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"Send Message\")));\n}","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/containers/Chat/ComposeMessage.js"],"names":["React","useDispatch","useSelector","Button","notification","actions","ComposeMessageWrapper","Textarea","sendMessage","ComposeMessage","props","dispatch","value","setValue","useState","onChange","event","target","onKeyPress","key","preventDefault","length","autosize","showButton"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,qBAAT,EAAgCC,QAAhC,QAAgD,mBAAhD;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAkBH,OAAxB;AAEA,eAAe,SAASI,cAAT,CAAwBC,KAAxB,EAA+B;AAC5C,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AAEA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBb,KAAK,CAACc,QAAN,CAAe,EAAf,CAA1B;;AACA,QAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1BH,IAAAA,QAAQ,CAACG,KAAK,CAACC,MAAN,CAAaL,KAAd,CAAR;AACD,GAFD;;AAGA,QAAMM,UAAU,GAAIF,KAAD,IAAW;AAC5B,QAAIA,KAAK,CAACG,GAAN,KAAc,OAAlB,EAA2B;AACzBH,MAAAA,KAAK,CAACI,cAAN;;AACA,UAAIR,KAAK,IAAIA,KAAK,CAACS,MAAN,GAAe,CAA5B,EAA+B;AAC7BV,QAAAA,QAAQ,CAACH,WAAW,CAACI,KAAD,CAAZ,CAAR;AACAC,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,OAHD,MAGO;AACLT,QAAAA,YAAY,CAAC,OAAD,EAAU,uBAAV,CAAZ;AACD;AACF;AACF,GAVD;;AAWA,SACE,MAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,QAAQ,EAAEM,KAAK,CAACY,QADlB;AAEE,IAAA,KAAK,EAAEV,KAFT;AAGE,IAAA,QAAQ,EAAEG,QAHZ;AAIE,IAAA,UAAU,EAAEG,UAJd;AAKE,IAAA,WAAW,EAAC,mBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQGR,KAAK,CAACa,UAAN,IACC;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAE,MAAMZ,QAAQ,CAACH,WAAW,CAACI,KAAD,CAAZ,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CATJ,CADF;AAkBD","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Button from '@iso/components/uielements/button';\nimport notification from '@iso/components/Notification';\nimport actions from '@iso/redux/chat/actions';\nimport { ComposeMessageWrapper, Textarea } from './Messages.styles';\nconst { sendMessage } = actions;\n\nexport default function ComposeMessage(props) {\n  const dispatch = useDispatch();\n\n  const [value, setValue] = React.useState('');\n  const onChange = (event) => {\n    setValue(event.target.value);\n  };\n  const onKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      if (value && value.length > 0) {\n        dispatch(sendMessage(value));\n        setValue('');\n      } else {\n        notification('error', 'Please type something');\n      }\n    }\n  };\n  return (\n    <ComposeMessageWrapper>\n      <Textarea\n        autoSize={props.autosize}\n        value={value}\n        onChange={onChange}\n        onKeyPress={onKeyPress}\n        placeholder=\"Type your message\"\n      />\n      {props.showButton && (\n        <div className=\"sendMessageButton\">\n          <Button type=\"primary\" onClick={() => dispatch(sendMessage(value))}>\n            Send Message\n          </Button>\n        </div>\n      )}\n    </ComposeMessageWrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}