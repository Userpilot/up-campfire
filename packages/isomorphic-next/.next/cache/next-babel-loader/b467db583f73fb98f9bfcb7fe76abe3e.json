{"ast":null,"code":"const actions = {\n  GET_INVOICE: 'GET_INVOICE',\n  UPDATE_INVOICE: 'UPDATE_INVOICE',\n  UPDATE_INVOICE_SAGA: 'UPDATE_INVOICE_SAGA',\n  SELECT_CURRENT_INVOICE: 'SELECT_CURRENT_INVOICE',\n  TOGGLE_VIEW: 'INVOICE_TOGGLE_VIEW',\n  UPDATE_EDIT_INVOICE: 'INVOICE_UPDATE_EDIT_INVOICE',\n  initData: () => ({\n    type: actions.GET_INVOICE\n  }),\n  deleteInvoice: selected => {\n    return (dispatch, getState) => {\n      const invoices = getState().Invoices.invoices;\n      const newInvoices = [];\n      invoices.forEach(invoice => {\n        const selectedIndex = selected.indexOf(invoice.key);\n\n        if (selectedIndex === -1) {\n          newInvoices.push(invoice);\n        }\n      });\n      dispatch({\n        type: actions.UPDATE_INVOICE_SAGA,\n        invoices: newInvoices\n      });\n    };\n  },\n  updateInvoice: invoice => {\n    return (dispatch, getState) => {\n      const invoices = getState().Invoices.invoices;\n      const index = invoices.map(inv => inv.id).indexOf(invoice.id);\n\n      if (index === -1) {\n        invoices.push(invoice);\n      } else {\n        invoices[index] = invoice;\n      }\n\n      dispatch({\n        type: actions.UPDATE_INVOICE_SAGA,\n        invoices,\n        invoice\n      });\n    };\n  },\n  selectCurrentInvoice: id => ({\n    type: actions.SELECT_CURRENT_INVOICE,\n    id\n  }),\n  toggleView: view => ({\n    type: actions.TOGGLE_VIEW,\n    view\n  }),\n  editInvoice: invoice => ({\n    type: actions.UPDATE_EDIT_INVOICE,\n    invoice\n  })\n};\nexport default actions;","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/redux/invoice/actions.js"],"names":["actions","GET_INVOICE","UPDATE_INVOICE","UPDATE_INVOICE_SAGA","SELECT_CURRENT_INVOICE","TOGGLE_VIEW","UPDATE_EDIT_INVOICE","initData","type","deleteInvoice","selected","dispatch","getState","invoices","Invoices","newInvoices","forEach","invoice","selectedIndex","indexOf","key","push","updateInvoice","index","map","inv","id","selectCurrentInvoice","toggleView","view","editInvoice"],"mappings":"AAAA,MAAMA,OAAO,GAAG;AACdC,EAAAA,WAAW,EAAE,aADC;AAEdC,EAAAA,cAAc,EAAE,gBAFF;AAGdC,EAAAA,mBAAmB,EAAE,qBAHP;AAIdC,EAAAA,sBAAsB,EAAE,wBAJV;AAKdC,EAAAA,WAAW,EAAE,qBALC;AAMdC,EAAAA,mBAAmB,EAAE,6BANP;AAOdC,EAAAA,QAAQ,EAAE,OAAO;AAAEC,IAAAA,IAAI,EAAER,OAAO,CAACC;AAAhB,GAAP,CAPI;AAQdQ,EAAAA,aAAa,EAAEC,QAAQ,IAAI;AACzB,WAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7B,YAAMC,QAAQ,GAAGD,QAAQ,GAAGE,QAAX,CAAoBD,QAArC;AACA,YAAME,WAAW,GAAG,EAApB;AACAF,MAAAA,QAAQ,CAACG,OAAT,CAAiBC,OAAO,IAAI;AAC1B,cAAMC,aAAa,GAAGR,QAAQ,CAACS,OAAT,CAAiBF,OAAO,CAACG,GAAzB,CAAtB;;AACA,YAAIF,aAAa,KAAK,CAAC,CAAvB,EAA0B;AACxBH,UAAAA,WAAW,CAACM,IAAZ,CAAiBJ,OAAjB;AACD;AACF,OALD;AAMAN,MAAAA,QAAQ,CAAC;AACPH,QAAAA,IAAI,EAAER,OAAO,CAACG,mBADP;AAEPU,QAAAA,QAAQ,EAAEE;AAFH,OAAD,CAAR;AAID,KAbD;AAcD,GAvBa;AAwBdO,EAAAA,aAAa,EAAEL,OAAO,IAAI;AACxB,WAAO,CAACN,QAAD,EAAWC,QAAX,KAAwB;AAC7B,YAAMC,QAAQ,GAAGD,QAAQ,GAAGE,QAAX,CAAoBD,QAArC;AACA,YAAMU,KAAK,GAAGV,QAAQ,CAACW,GAAT,CAAaC,GAAG,IAAIA,GAAG,CAACC,EAAxB,EAA4BP,OAA5B,CAAoCF,OAAO,CAACS,EAA5C,CAAd;;AACA,UAAIH,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBV,QAAAA,QAAQ,CAACQ,IAAT,CAAcJ,OAAd;AACD,OAFD,MAEO;AACLJ,QAAAA,QAAQ,CAACU,KAAD,CAAR,GAAkBN,OAAlB;AACD;;AACDN,MAAAA,QAAQ,CAAC;AACPH,QAAAA,IAAI,EAAER,OAAO,CAACG,mBADP;AAEPU,QAAAA,QAFO;AAGPI,QAAAA;AAHO,OAAD,CAAR;AAKD,KAbD;AAcD,GAvCa;AAwCdU,EAAAA,oBAAoB,EAAED,EAAE,KAAK;AAAElB,IAAAA,IAAI,EAAER,OAAO,CAACI,sBAAhB;AAAwCsB,IAAAA;AAAxC,GAAL,CAxCV;AAyCdE,EAAAA,UAAU,EAAEC,IAAI,KAAK;AAAErB,IAAAA,IAAI,EAAER,OAAO,CAACK,WAAhB;AAA6BwB,IAAAA;AAA7B,GAAL,CAzCF;AA0CdC,EAAAA,WAAW,EAAEb,OAAO,KAAK;AAAET,IAAAA,IAAI,EAAER,OAAO,CAACM,mBAAhB;AAAqCW,IAAAA;AAArC,GAAL;AA1CN,CAAhB;AA4CA,eAAejB,OAAf","sourcesContent":["const actions = {\n  GET_INVOICE: 'GET_INVOICE',\n  UPDATE_INVOICE: 'UPDATE_INVOICE',\n  UPDATE_INVOICE_SAGA: 'UPDATE_INVOICE_SAGA',\n  SELECT_CURRENT_INVOICE: 'SELECT_CURRENT_INVOICE',\n  TOGGLE_VIEW: 'INVOICE_TOGGLE_VIEW',\n  UPDATE_EDIT_INVOICE: 'INVOICE_UPDATE_EDIT_INVOICE',\n  initData: () => ({ type: actions.GET_INVOICE }),\n  deleteInvoice: selected => {\n    return (dispatch, getState) => {\n      const invoices = getState().Invoices.invoices;\n      const newInvoices = [];\n      invoices.forEach(invoice => {\n        const selectedIndex = selected.indexOf(invoice.key);\n        if (selectedIndex === -1) {\n          newInvoices.push(invoice);\n        }\n      });\n      dispatch({\n        type: actions.UPDATE_INVOICE_SAGA,\n        invoices: newInvoices,\n      });\n    };\n  },\n  updateInvoice: invoice => {\n    return (dispatch, getState) => {\n      const invoices = getState().Invoices.invoices;\n      const index = invoices.map(inv => inv.id).indexOf(invoice.id);\n      if (index === -1) {\n        invoices.push(invoice);\n      } else {\n        invoices[index] = invoice;\n      }\n      dispatch({\n        type: actions.UPDATE_INVOICE_SAGA,\n        invoices,\n        invoice,\n      });\n    };\n  },\n  selectCurrentInvoice: id => ({ type: actions.SELECT_CURRENT_INVOICE, id }),\n  toggleView: view => ({ type: actions.TOGGLE_VIEW, view }),\n  editInvoice: invoice => ({ type: actions.UPDATE_EDIT_INVOICE, invoice }),\n};\nexport default actions;\n"]},"metadata":{},"sourceType":"module"}