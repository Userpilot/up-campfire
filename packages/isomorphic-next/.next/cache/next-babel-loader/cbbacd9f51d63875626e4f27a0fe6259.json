{"ast":null,"code":"var _jsxFileName = \"/Users/walaa/Desktop/Isomorphic Main/isomorphic/packages/isomorphic-next/containers/Invoice/Invoice.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport notification from '@iso/components/Notification';\nimport Box from '@iso/components/utility/box';\nimport HelperText from '@iso/components/utility/helper-text';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport Scrollbars from '@iso/components/utility/customScrollBar';\nimport Button from '@iso/components/uielements/button';\nimport invoiceActions from '@iso/redux/invoice/actions';\nimport CardWrapper from './Invoice.styles';\nimport TableWrapper from '@iso/containers/Tables/AntTables/AntTables.styles';\n\nclass Invoices extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      selected: []\n    });\n\n    _defineProperty(this, \"columns\", [{\n      title: 'Number',\n      dataIndex: 'number',\n      rowKey: 'number',\n      width: '15%',\n      render: text => __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 23\n        }\n      }, text)\n    }, {\n      title: 'Bill From',\n      dataIndex: 'billFrom',\n      rowKey: 'billFrom',\n      width: '25%',\n      render: text => __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 23\n        }\n      }, text)\n    }, {\n      title: 'Bill TO',\n      dataIndex: 'billTo',\n      rowKey: 'billTo',\n      width: '22%',\n      render: text => __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 23\n        }\n      }, text)\n    }, {\n      title: 'Total Cost',\n      dataIndex: 'totalCost',\n      rowKey: 'totalCost',\n      width: '15%',\n      render: text => __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 23\n        }\n      }, text)\n    }, {\n      title: 'Status',\n      dataIndex: 'orderStatus',\n      rowKey: 'orderStatus',\n      width: '13%',\n      render: text => __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 23\n        }\n      }, text)\n    }, {\n      title: '',\n      dataIndex: 'view',\n      rowKey: 'view',\n      width: '10%',\n      render: (text, invoice) => __jsx(\"div\", {\n        className: \"isoInvoiceBtnView\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, __jsx(Link, {\n        href: `invoice?id=${invoice.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }, __jsx(Button, {\n        color: \"primary\",\n        className: \"invoiceViewBtn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }\n      }, \"View\"))), ' ', __jsx(Button, {\n        className: \"invoiceDltBtn\",\n        icon: \"delete\",\n        onClick: () => {\n          notification('error', '1 invoice deleted');\n          this.props.deleteInvoice([invoice.key]);\n          this.setState({\n            selected: []\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }))\n    }]);\n\n    _defineProperty(this, \"getnewInvoiceId\", () => new Date().getTime());\n  }\n\n  componentDidMount() {\n    const {\n      initialInvoices,\n      initData\n    } = this.props;\n\n    if (!initialInvoices) {\n      initData();\n    }\n  }\n\n  render() {\n    const {\n      match,\n      invoices,\n      deleteInvoice\n    } = this.props;\n    const {\n      selected\n    } = this.state;\n    const rowSelection = {\n      hideDefaultSelections: true,\n      selectedRowKeys: selected,\n      onChange: selected => this.setState({\n        selected\n      }),\n      selections: [{\n        key: 'all-data',\n        text: 'Select All Invoices',\n        onSelect: () => this.setState({\n          selected: this.props.invoices.map(invoice => invoice.key)\n        })\n      }, {\n        key: 'no-data',\n        text: 'Unselect all',\n        onSelect: () => this.setState({\n          selected: []\n        })\n      }, {\n        key: 'delete-selected',\n        text: 'Delete selected',\n        onSelect: changableRowKeys => {\n          if (selected.length > 0) {\n            deleteInvoice(selected);\n            this.setState({\n              selected: []\n            });\n            notification('error', `${selected.length} invoices deleted`);\n          }\n        }\n      }],\n      onSelection: selected => this.setState({\n        selected\n      })\n    };\n    return __jsx(LayoutWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }, __jsx(PageHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, __jsx(IntlMessages, {\n      id: \"sidebar.invoice\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    })), __jsx(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, __jsx(CardWrapper, {\n      title: \"Invoices\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, invoices.length === 0 ? __jsx(HelperText, {\n      text: \"No Invoices\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }) : __jsx(\"div\", {\n      className: \"isoInvoiceTable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, __jsx(Scrollbars, {\n      style: {\n        width: '100%',\n        height: 'calc(60vh - 70px)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, __jsx(TableWrapper, {\n      rowSelection: rowSelection,\n      dataSource: invoices,\n      columns: this.columns,\n      pagination: false,\n      className: \"invoiceListTable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 19\n      }\n    }))), __jsx(\"div\", {\n      className: \"isoInvoiceTableBtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      href: `invoice?id=${this.getnewInvoiceId()}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, __jsx(Button, {\n      type: \"primary\",\n      className: \"mateAddInvoiceBtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }, \"Add Invoice\")))))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return _objectSpread({}, state.Invoices);\n}\n\nexport default connect(mapStateToProps, invoiceActions)(Invoices);","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/packages/isomorphic-next/containers/Invoice/Invoice.js"],"names":["React","Component","connect","Link","notification","Box","HelperText","LayoutWrapper","PageHeader","IntlMessages","Scrollbars","Button","invoiceActions","CardWrapper","TableWrapper","Invoices","selected","title","dataIndex","rowKey","width","render","text","invoice","id","props","deleteInvoice","key","setState","Date","getTime","componentDidMount","initialInvoices","initData","match","invoices","state","rowSelection","hideDefaultSelections","selectedRowKeys","onChange","selections","onSelect","map","changableRowKeys","length","onSelection","height","columns","getnewInvoiceId","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport notification from '@iso/components/Notification';\nimport Box from '@iso/components/utility/box';\nimport HelperText from '@iso/components/utility/helper-text';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper';\nimport PageHeader from '@iso/components/utility/pageHeader';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport Scrollbars from '@iso/components/utility/customScrollBar';\nimport Button from '@iso/components/uielements/button';\nimport invoiceActions from '@iso/redux/invoice/actions';\nimport CardWrapper from './Invoice.styles';\nimport TableWrapper from '@iso/containers/Tables/AntTables/AntTables.styles';\n\nclass Invoices extends Component {\n  state = {\n    selected: [],\n  };\n  componentDidMount() {\n    const { initialInvoices, initData } = this.props;\n    if (!initialInvoices) {\n      initData();\n    }\n  }\n  columns = [\n    {\n      title: 'Number',\n      dataIndex: 'number',\n      rowKey: 'number',\n      width: '15%',\n      render: text => <span>{text}</span>,\n    },\n    {\n      title: 'Bill From',\n      dataIndex: 'billFrom',\n      rowKey: 'billFrom',\n      width: '25%',\n      render: text => <span>{text}</span>,\n    },\n    {\n      title: 'Bill TO',\n      dataIndex: 'billTo',\n      rowKey: 'billTo',\n      width: '22%',\n      render: text => <span>{text}</span>,\n    },\n    {\n      title: 'Total Cost',\n      dataIndex: 'totalCost',\n      rowKey: 'totalCost',\n      width: '15%',\n      render: text => <span>{text}</span>,\n    },\n    {\n      title: 'Status',\n      dataIndex: 'orderStatus',\n      rowKey: 'orderStatus',\n      width: '13%',\n      render: text => <span>{text}</span>,\n    },\n    {\n      title: '',\n      dataIndex: 'view',\n      rowKey: 'view',\n      width: '10%',\n      render: (text, invoice) => (\n        <div className=\"isoInvoiceBtnView\">\n          <Link href={`invoice?id=${invoice.id}`}>\n            <a>\n              <Button color=\"primary\" className=\"invoiceViewBtn\">\n                View\n              </Button>\n            </a>\n          </Link>{' '}\n          <Button\n            className=\"invoiceDltBtn\"\n            icon=\"delete\"\n            onClick={() => {\n              notification('error', '1 invoice deleted');\n              this.props.deleteInvoice([invoice.key]);\n              this.setState({ selected: [] });\n            }}\n          />\n        </div>\n      ),\n    },\n  ];\n\n  getnewInvoiceId = () => new Date().getTime();\n  render() {\n    const { match, invoices, deleteInvoice } = this.props;\n\n    const { selected } = this.state;\n    const rowSelection = {\n      hideDefaultSelections: true,\n      selectedRowKeys: selected,\n      onChange: selected => this.setState({ selected }),\n      selections: [\n        {\n          key: 'all-data',\n          text: 'Select All Invoices',\n          onSelect: () =>\n            this.setState({\n              selected: this.props.invoices.map(invoice => invoice.key),\n            }),\n        },\n        {\n          key: 'no-data',\n          text: 'Unselect all',\n          onSelect: () => this.setState({ selected: [] }),\n        },\n        {\n          key: 'delete-selected',\n          text: 'Delete selected',\n          onSelect: changableRowKeys => {\n            if (selected.length > 0) {\n              deleteInvoice(selected);\n              this.setState({ selected: [] });\n              notification('error', `${selected.length} invoices deleted`);\n            }\n          },\n        },\n      ],\n      onSelection: selected => this.setState({ selected }),\n    };\n    return (\n      <LayoutWrapper>\n        <PageHeader>\n          <IntlMessages id=\"sidebar.invoice\" />\n        </PageHeader>\n        <Box>\n          <CardWrapper title=\"Invoices\">\n            {invoices.length === 0 ? (\n              <HelperText text=\"No Invoices\" />\n            ) : (\n              <div className=\"isoInvoiceTable\">\n                <Scrollbars\n                  style={{ width: '100%', height: 'calc(60vh - 70px)' }}\n                >\n                  <TableWrapper\n                    rowSelection={rowSelection}\n                    dataSource={invoices}\n                    columns={this.columns}\n                    pagination={false}\n                    className=\"invoiceListTable\"\n                  />\n                </Scrollbars>\n              </div>\n            )}\n            <div className=\"isoInvoiceTableBtn\">\n              <Link href={`invoice?id=${this.getnewInvoiceId()}`}>\n                <a>\n                  <Button type=\"primary\" className=\"mateAddInvoiceBtn\">\n                    Add Invoice\n                  </Button>\n                </a>\n              </Link>\n            </div>\n          </CardWrapper>\n        </Box>\n      </LayoutWrapper>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    ...state.Invoices,\n  };\n}\nexport default connect(\n  mapStateToProps,\n  invoiceActions\n)(Invoices);\n"]},"metadata":{},"sourceType":"module"}