{"ast":null,"code":"var _jsxFileName = \"/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/containers/Mail/DesktopView.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Scrollbars from '@iso/components/utility/customScrollBar';\nimport { InputSearch } from '@iso/components/uielements/input';\nimport mailList from '@iso/components/Mail/MailList';\nimport mailBuckets from '@iso/components/Mail/MailBuckets';\nimport mailTags from '@iso/components/Mail/MailTags';\nimport singleMail from '@iso/components/Mail/SingleMail';\nimport ComposeBtn from '@iso/components/Mail/MailComposeBtn';\nimport ComposeMail from '@iso/components/Mail/ComposeMail';\nimport PaginationControl from '@iso/components/Mail/MailPagination';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport mailActions from '@iso/redux/mail/actions';\nimport mailSelector from '@iso/redux/mail/selector';\nimport MailBox from './Mail.styles';\nconst {\n  filterAction,\n  selectMail,\n  changeComposeMail,\n  changeReplyMail,\n  changeSearchString\n} = mailActions;\nexport default function DesktopView(props) {\n  const dispatch = useDispatch();\n  const mail = useSelector(state => state.Mails);\n  const filterMails = mailSelector(mail);\n  const {\n    allMails,\n    selectedMail,\n    filterAttr,\n    composeMail,\n    replyMail,\n    searchString\n  } = mail;\n  const [search, setSearch] = React.useState(searchString);\n  const handleSelectMail = React.useCallback(value => dispatch(selectMail(value)), [dispatch]);\n  const handleChangeReplyMail = React.useCallback(value => dispatch(changeReplyMail(value)), [dispatch]);\n  const handleFilterAction = React.useCallback(value => dispatch(filterAction(value)), [dispatch]); //   selectMail,\n  //   filterAction,\n  //   changeComposeMail,\n  //   changeReplyMail,\n  //   changeSearchString,\n  // } = props;\n\n  let singleMailComponent = __jsx(\"p\", {\n    className: \"isoNoMailMsg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, __jsx(IntlMessages, {\n    id: \"email.noMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }));\n\n  const index = allMails.findIndex(mail => mail.id === selectedMail);\n\n  if (index !== -1) {\n    singleMailComponent = singleMail(allMails, filterMails, index, replyMail, handleChangeReplyMail, handleSelectMail);\n  }\n\n  return __jsx(MailBox, {\n    className: \"isomorphicMailBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"isoLeftWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, __jsx(ComposeBtn, {\n    changeComposeMail: value => dispatch(changeComposeMail(value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"isoMailOptions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, __jsx(Scrollbars, {\n    style: {\n      height: props.height - 70\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, mailBuckets(allMails, handleFilterAction, filterAttr), mailTags(allMails, handleFilterAction, filterAttr)))), composeMail ? null : __jsx(\"div\", {\n    className: \"isoMiddleWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"isoBucketLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, filterAttr.bucket), __jsx(PaginationControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"isoSearchMailWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, __jsx(InputSearch, {\n    placeholder: \"Search Email\",\n    value: search,\n    className: \"isoSearchEmail\",\n    onChange: event => setSearch(event.target.value),\n    onSearch: value => dispatch(changeSearchString(value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  })), __jsx(Scrollbars, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, mailList(filterMails, handleSelectMail, selectedMail))), __jsx(\"div\", {\n    className: \"isoSingleMailWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, __jsx(Scrollbars, {\n    style: {\n      height: props.height - 70\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, composeMail ? __jsx(ComposeMail, {\n    allMails: allMails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }) : singleMailComponent)));\n}","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/containers/Mail/DesktopView.js"],"names":["React","useSelector","useDispatch","Scrollbars","InputSearch","mailList","mailBuckets","mailTags","singleMail","ComposeBtn","ComposeMail","PaginationControl","IntlMessages","mailActions","mailSelector","MailBox","filterAction","selectMail","changeComposeMail","changeReplyMail","changeSearchString","DesktopView","props","dispatch","mail","state","Mails","filterMails","allMails","selectedMail","filterAttr","composeMail","replyMail","searchString","search","setSearch","useState","handleSelectMail","useCallback","value","handleChangeReplyMail","handleFilterAction","singleMailComponent","index","findIndex","id","height","bucket","event","target"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Scrollbars from '@iso/components/utility/customScrollBar';\nimport { InputSearch } from '@iso/components/uielements/input';\nimport mailList from '@iso/components/Mail/MailList';\nimport mailBuckets from '@iso/components/Mail/MailBuckets';\nimport mailTags from '@iso/components/Mail/MailTags';\nimport singleMail from '@iso/components/Mail/SingleMail';\nimport ComposeBtn from '@iso/components/Mail/MailComposeBtn';\nimport ComposeMail from '@iso/components/Mail/ComposeMail';\nimport PaginationControl from '@iso/components/Mail/MailPagination';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport mailActions from '@iso/redux/mail/actions';\nimport mailSelector from '@iso/redux/mail/selector';\nimport MailBox from './Mail.styles';\n\nconst {\n  filterAction,\n  selectMail,\n  changeComposeMail,\n  changeReplyMail,\n  changeSearchString,\n} = mailActions;\n\nexport default function DesktopView(props) {\n  const dispatch = useDispatch();\n  const mail = useSelector(state => state.Mails);\n  const filterMails = mailSelector(mail);\n  const {\n    allMails,\n    selectedMail,\n    filterAttr,\n    composeMail,\n    replyMail,\n    searchString,\n  } = mail;\n  const [search, setSearch] = React.useState(searchString);\n  const handleSelectMail = React.useCallback(\n    value => dispatch(selectMail(value)),\n    [dispatch]\n  );\n  const handleChangeReplyMail = React.useCallback(\n    value => dispatch(changeReplyMail(value)),\n    [dispatch]\n  );\n  const handleFilterAction = React.useCallback(\n    value => dispatch(filterAction(value)),\n    [dispatch]\n  );\n  //   selectMail,\n  //   filterAction,\n  //   changeComposeMail,\n  //   changeReplyMail,\n  //   changeSearchString,\n  // } = props;\n  let singleMailComponent = (\n    <p className=\"isoNoMailMsg\">\n      <IntlMessages id=\"email.noMessage\" />\n    </p>\n  );\n  const index = allMails.findIndex(mail => mail.id === selectedMail);\n  if (index !== -1) {\n    singleMailComponent = singleMail(\n      allMails,\n      filterMails,\n      index,\n      replyMail,\n      handleChangeReplyMail,\n      handleSelectMail\n    );\n  }\n  return (\n    <MailBox className=\"isomorphicMailBox\">\n      <div className=\"isoLeftWrapper\">\n        <ComposeBtn\n          changeComposeMail={value => dispatch(changeComposeMail(value))}\n        />\n        <div className=\"isoMailOptions\">\n          <Scrollbars style={{ height: props.height - 70 }}>\n            {mailBuckets(allMails, handleFilterAction, filterAttr)}\n            {mailTags(allMails, handleFilterAction, filterAttr)}\n          </Scrollbars>\n        </div>\n      </div>\n      {composeMail ? null : (\n        <div className=\"isoMiddleWrapper\">\n          <div className=\"isoBucketLabel\">\n            <h3>{filterAttr.bucket}</h3>\n            <PaginationControl />\n          </div>\n          <div className=\"isoSearchMailWrapper\">\n            <InputSearch\n              placeholder=\"Search Email\"\n              value={search}\n              className=\"isoSearchEmail\"\n              onChange={event => setSearch(event.target.value)}\n              onSearch={value => dispatch(changeSearchString(value))}\n            />\n          </div>\n          <Scrollbars>\n            {mailList(filterMails, handleSelectMail, selectedMail)}\n          </Scrollbars>\n        </div>\n      )}\n      <div className=\"isoSingleMailWrapper\">\n        <Scrollbars style={{ height: props.height - 70 }}>\n          {composeMail ? (\n            <ComposeMail allMails={allMails} />\n          ) : (\n            singleMailComponent\n          )}\n        </Scrollbars>\n      </div>\n    </MailBox>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}