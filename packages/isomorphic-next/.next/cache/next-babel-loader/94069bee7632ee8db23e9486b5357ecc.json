{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import Router from 'next/router';\nimport actions from './actions';\nconst initState = {\n  idToken: null,\n  error: null\n};\nexport default function authReducer(state = initState, action) {\n  switch (action.type) {\n    case actions.LOGIN_REQUEST_SUCCESS:\n      // Router.replace('/dashboard');\n      return _objectSpread(_objectSpread({}, state), {}, {\n        idToken: action.payload\n      });\n\n    case actions.LOGOUT_REQUEST_FAILURE:\n    case actions.LOGIN_REQUEST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        idToken: null,\n        error: action.payload\n      });\n\n    case actions.LOGOUT_REQUEST_SUCCESS:\n      // Router.replace('/');\n      return initState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/packages/isomorphic-next/authentication/reducer.js"],"names":["actions","initState","idToken","error","authReducer","state","action","type","LOGIN_REQUEST_SUCCESS","payload","LOGOUT_REQUEST_FAILURE","LOGIN_REQUEST_FAILURE","LOGOUT_REQUEST_SUCCESS"],"mappings":";;;;;;AAAA;AACA,OAAOA,OAAP,MAAoB,WAApB;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAE,IADO;AAEhBC,EAAAA,KAAK,EAAE;AAFS,CAAlB;AAKA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGJ,SAA7B,EAAwCK,MAAxC,EAAgD;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,OAAO,CAACQ,qBAAb;AACE;AACA,6CAAYH,KAAZ;AAAmBH,QAAAA,OAAO,EAAEI,MAAM,CAACG;AAAnC;;AACF,SAAKT,OAAO,CAACU,sBAAb;AACA,SAAKV,OAAO,CAACW,qBAAb;AACE,6CACKN,KADL;AAEEH,QAAAA,OAAO,EAAE,IAFX;AAGEC,QAAAA,KAAK,EAAEG,MAAM,CAACG;AAHhB;;AAKF,SAAKT,OAAO,CAACY,sBAAb;AACE;AACA,aAAOX,SAAP;;AACF;AACE,aAAOI,KAAP;AAfJ;AAiBD","sourcesContent":["// import Router from 'next/router';\nimport actions from './actions';\n\nconst initState = {\n  idToken: null,\n  error: null,\n};\n\nexport default function authReducer(state = initState, action) {\n  switch (action.type) {\n    case actions.LOGIN_REQUEST_SUCCESS:\n      // Router.replace('/dashboard');\n      return { ...state, idToken: action.payload };\n    case actions.LOGOUT_REQUEST_FAILURE:\n    case actions.LOGIN_REQUEST_FAILURE:\n      return {\n        ...state,\n        idToken: null,\n        error: action.payload,\n      };\n    case actions.LOGOUT_REQUEST_SUCCESS:\n      // Router.replace('/');\n      return initState;\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}