{"ast":null,"code":"import _Mentions from \"antd/lib/mentions\";\nvar _jsxFileName = \"/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/components/Mail/ComposeAutoComplete.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport AutoComplete from './ComposeAutoComplete.style';\n\nfunction createSuggestions(item) {\n  if (item && item.length > 0) {\n    return item.map(element => ({\n      id: `${element.id}`,\n      value: `${element.email}`,\n      text: `${element.name}<${element.email}>`\n    }));\n  }\n\n  return [];\n}\n\nexport default function MentionsReceiver({\n  placeholder,\n  autofocus,\n  allMails\n}) {\n  const [options] = React.useState(createSuggestions(allMails));\n\n  function onChange(value) {\n    console.log('Change:', value);\n  }\n\n  function onSelect(option) {\n    console.log('select', option);\n  }\n\n  return __jsx(AutoComplete, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(_Mentions, {\n    style: {\n      width: '100%'\n    },\n    onChange: onChange,\n    onSelect: onSelect,\n    placeholder: `${placeholder}: input @ to mention receiver`,\n    autoFocus: autofocus !== null && autofocus !== void 0 ? autofocus : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, options.map(({\n    id,\n    value,\n    text\n  }) => __jsx(_Mentions.Option, {\n    key: id,\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, text))));\n}","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/components/Mail/ComposeAutoComplete.js"],"names":["React","AutoComplete","createSuggestions","item","length","map","element","id","value","email","text","name","MentionsReceiver","placeholder","autofocus","allMails","options","useState","onChange","console","log","onSelect","option","width"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;;AAGA,SAASC,iBAAT,CAA2BC,IAA3B,EAAiC;AAC/B,MAAIA,IAAI,IAAIA,IAAI,CAACC,MAAL,GAAc,CAA1B,EAA6B;AAC3B,WAAOD,IAAI,CAACE,GAAL,CAAUC,OAAD,KAAc;AAC5BC,MAAAA,EAAE,EAAG,GAAED,OAAO,CAACC,EAAG,EADU;AAE5BC,MAAAA,KAAK,EAAG,GAAEF,OAAO,CAACG,KAAM,EAFI;AAG5BC,MAAAA,IAAI,EAAG,GAAEJ,OAAO,CAACK,IAAK,IAAGL,OAAO,CAACG,KAAM;AAHX,KAAd,CAAT,CAAP;AAKD;;AACD,SAAO,EAAP;AACD;;AAED,eAAe,SAASG,gBAAT,CAA0B;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,SAAf;AAA0BC,EAAAA;AAA1B,CAA1B,EAAgE;AAC7E,QAAM,CAACC,OAAD,IAAYhB,KAAK,CAACiB,QAAN,CAAef,iBAAiB,CAACa,QAAD,CAAhC,CAAlB;;AACA,WAASG,QAAT,CAAkBV,KAAlB,EAAyB;AACvBW,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBZ,KAAvB;AACD;;AACD,WAASa,QAAT,CAAkBC,MAAlB,EAA0B;AACxBH,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBE,MAAtB;AACD;;AACD,SACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADT;AAEE,IAAA,QAAQ,EAAEL,QAFZ;AAGE,IAAA,QAAQ,EAAEG,QAHZ;AAIE,IAAA,WAAW,EAAG,GAAER,WAAY,+BAJ9B;AAKE,IAAA,SAAS,EAAEC,SAAF,aAAEA,SAAF,cAAEA,SAAF,GAAe,KAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGE,OAAO,CAACX,GAAR,CAAY,CAAC;AAAEE,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaE,IAAAA;AAAb,GAAD,KACX,gBAAU,MAAV;AAAiB,IAAA,GAAG,EAAEH,EAAtB;AAA0B,IAAA,KAAK,EAAEC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,IADH,CADD,CAPH,CADF,CADF;AAiBD","sourcesContent":["import React from 'react';\nimport AutoComplete from './ComposeAutoComplete.style';\nimport { Mentions } from 'antd';\n\nfunction createSuggestions(item) {\n  if (item && item.length > 0) {\n    return item.map((element) => ({\n      id: `${element.id}`,\n      value: `${element.email}`,\n      text: `${element.name}<${element.email}>`,\n    }));\n  }\n  return [];\n}\n\nexport default function MentionsReceiver({ placeholder, autofocus, allMails }) {\n  const [options] = React.useState(createSuggestions(allMails));\n  function onChange(value) {\n    console.log('Change:', value);\n  }\n  function onSelect(option) {\n    console.log('select', option);\n  }\n  return (\n    <AutoComplete>\n      <Mentions\n        style={{ width: '100%' }}\n        onChange={onChange}\n        onSelect={onSelect}\n        placeholder={`${placeholder}: input @ to mention receiver`}\n        autoFocus={autofocus ?? false}\n      >\n        {options.map(({ id, value, text }) => (\n          <Mentions.Option key={id} value={value}>\n            {text}\n          </Mentions.Option>\n        ))}\n      </Mentions>\n    </AutoComplete>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}