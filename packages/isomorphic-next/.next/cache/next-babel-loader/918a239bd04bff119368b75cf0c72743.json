{"ast":null,"code":"var actions = {\n  INIT_DATA: 'ECOMMERCE_INIT_DATA',\n  INIT_DATA_SAGA: 'ECOMMERCE_INIT_DATA_SAGA',\n  UPDATE_DATA: 'ECOMMERCE_UPDATE_DATA',\n  UPDATE_DATA_SAGA: 'ECOMMERCE_UPDATE_DATA_SAGA',\n  CHANGE_VIEW: 'ECOMMERCE_CHANGE_VIEW',\n  VIEW_TOPBAR_CART: 'ECOMMERCE_VIEW_TOPBAR_CART',\n  initData: function initData() {\n    return {\n      type: actions.INIT_DATA_SAGA\n    };\n  },\n  changeView: function changeView(view) {\n    return {\n      type: actions.CHANGE_VIEW,\n      view: view\n    };\n  },\n  changeViewTopbarCart: function changeViewTopbarCart(viewTopbarCart) {\n    return {\n      type: actions.VIEW_TOPBAR_CART,\n      viewTopbarCart: viewTopbarCart\n    };\n  },\n  changeProductQuantity: function changeProductQuantity(productQuantity) {\n    return function (dispatch, getState) {\n      var products = getState().Ecommerce.products;\n      dispatch({\n        type: actions.UPDATE_DATA_SAGA,\n        products: products,\n        productQuantity: productQuantity\n      });\n    };\n  },\n  addToCart: function addToCart(product) {\n    return function (dispatch, getState) {\n      var _getState$Ecommerce = getState().Ecommerce,\n          products = _getState$Ecommerce.products,\n          productQuantity = _getState$Ecommerce.productQuantity;\n      var objectID = product.objectID;\n      productQuantity.push({\n        objectID: objectID,\n        quantity: 1\n      });\n      products[objectID] = product;\n      dispatch({\n        type: actions.UPDATE_DATA_SAGA,\n        products: products,\n        productQuantity: productQuantity\n      });\n    };\n  }\n};\nexport default actions;","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/redux/ecommerce/actions.js"],"names":["actions","INIT_DATA","INIT_DATA_SAGA","UPDATE_DATA","UPDATE_DATA_SAGA","CHANGE_VIEW","VIEW_TOPBAR_CART","initData","type","changeView","view","changeViewTopbarCart","viewTopbarCart","changeProductQuantity","productQuantity","dispatch","getState","products","Ecommerce","addToCart","product","objectID","push","quantity"],"mappings":"AAAA,IAAMA,OAAO,GAAG;AACdC,EAAAA,SAAS,EAAE,qBADG;AAEdC,EAAAA,cAAc,EAAE,0BAFF;AAGdC,EAAAA,WAAW,EAAE,uBAHC;AAIdC,EAAAA,gBAAgB,EAAE,4BAJJ;AAKdC,EAAAA,WAAW,EAAE,uBALC;AAMdC,EAAAA,gBAAgB,EAAE,4BANJ;AAOdC,EAAAA,QAAQ,EAAE;AAAA,WAAO;AAAEC,MAAAA,IAAI,EAAER,OAAO,CAACE;AAAhB,KAAP;AAAA,GAPI;AAQdO,EAAAA,UAAU,EAAE,oBAAAC,IAAI;AAAA,WAAK;AACnBF,MAAAA,IAAI,EAAER,OAAO,CAACK,WADK;AAEnBK,MAAAA,IAAI,EAAJA;AAFmB,KAAL;AAAA,GARF;AAYdC,EAAAA,oBAAoB,EAAE,8BAAAC,cAAc,EAAI;AACtC,WAAO;AACLJ,MAAAA,IAAI,EAAER,OAAO,CAACM,gBADT;AAELM,MAAAA,cAAc,EAAdA;AAFK,KAAP;AAID,GAjBa;AAkBdC,EAAAA,qBAAqB,EAAE,+BAAAC,eAAe,EAAI;AACxC,WAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAAA,UACrBC,QADqB,GACRD,QAAQ,GAAGE,SADH,CACrBD,QADqB;AAE7BF,MAAAA,QAAQ,CAAC;AACPP,QAAAA,IAAI,EAAER,OAAO,CAACI,gBADP;AAEPa,QAAAA,QAAQ,EAARA,QAFO;AAGPH,QAAAA,eAAe,EAAfA;AAHO,OAAD,CAAR;AAKD,KAPD;AAQD,GA3Ba;AA4BdK,EAAAA,SAAS,EAAE,mBAAAC,OAAO,EAAI;AACpB,WAAO,UAACL,QAAD,EAAWC,QAAX,EAAwB;AAAA,gCACSA,QAAQ,GAAGE,SADpB;AAAA,UACrBD,QADqB,uBACrBA,QADqB;AAAA,UACXH,eADW,uBACXA,eADW;AAE7B,UAAMO,QAAQ,GAAGD,OAAO,CAACC,QAAzB;AACAP,MAAAA,eAAe,CAACQ,IAAhB,CAAqB;AAAED,QAAAA,QAAQ,EAARA,QAAF;AAAYE,QAAAA,QAAQ,EAAE;AAAtB,OAArB;AACAN,MAAAA,QAAQ,CAACI,QAAD,CAAR,GAAqBD,OAArB;AACAL,MAAAA,QAAQ,CAAC;AACPP,QAAAA,IAAI,EAAER,OAAO,CAACI,gBADP;AAEPa,QAAAA,QAAQ,EAARA,QAFO;AAGPH,QAAAA,eAAe,EAAfA;AAHO,OAAD,CAAR;AAKD,KAVD;AAWD;AAxCa,CAAhB;AA0CA,eAAed,OAAf","sourcesContent":["const actions = {\n  INIT_DATA: 'ECOMMERCE_INIT_DATA',\n  INIT_DATA_SAGA: 'ECOMMERCE_INIT_DATA_SAGA',\n  UPDATE_DATA: 'ECOMMERCE_UPDATE_DATA',\n  UPDATE_DATA_SAGA: 'ECOMMERCE_UPDATE_DATA_SAGA',\n  CHANGE_VIEW: 'ECOMMERCE_CHANGE_VIEW',\n  VIEW_TOPBAR_CART: 'ECOMMERCE_VIEW_TOPBAR_CART',\n  initData: () => ({ type: actions.INIT_DATA_SAGA }),\n  changeView: view => ({\n    type: actions.CHANGE_VIEW,\n    view,\n  }),\n  changeViewTopbarCart: viewTopbarCart => {\n    return {\n      type: actions.VIEW_TOPBAR_CART,\n      viewTopbarCart,\n    };\n  },\n  changeProductQuantity: productQuantity => {\n    return (dispatch, getState) => {\n      const { products } = getState().Ecommerce;\n      dispatch({\n        type: actions.UPDATE_DATA_SAGA,\n        products,\n        productQuantity,\n      });\n    };\n  },\n  addToCart: product => {\n    return (dispatch, getState) => {\n      const { products, productQuantity } = getState().Ecommerce;\n      const objectID = product.objectID;\n      productQuantity.push({ objectID, quantity: 1 });\n      products[objectID] = product;\n      dispatch({\n        type: actions.UPDATE_DATA_SAGA,\n        products,\n        productQuantity,\n      });\n    };\n  },\n};\nexport default actions;\n"]},"metadata":{},"sourceType":"module"}