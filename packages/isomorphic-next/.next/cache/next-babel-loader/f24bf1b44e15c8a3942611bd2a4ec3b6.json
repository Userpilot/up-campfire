{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/components/Tables/ImageCell.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nvar PendingPool = {};\nvar ReadyPool = {};\nexport default function ImageCell(_ref) {\n  _s();\n\n  var src = _ref.src;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      srcState = _React$useState2[0],\n      setSrcState = _React$useState2[1];\n\n  var onLoadImage = React.useCallback(function (source) {\n    ReadyPool[src] = true;\n\n    if (source === src) {\n      setSrcState(source);\n    }\n  }, [src]);\n  var loadImage = React.useCallback(function (src) {\n    if (ReadyPool[src]) {\n      setSrcState(src);\n      return;\n    }\n\n    if (PendingPool[src]) {\n      PendingPool[src].push(onLoadImage);\n      return;\n    }\n\n    PendingPool[src] = [onLoadImage];\n    var img = new Image();\n\n    img.onload = function () {\n      PendingPool[src].forEach(function (callback) {\n        callback(src);\n      });\n      delete PendingPool[src];\n      img.onload = null;\n      src = undefined;\n    };\n\n    img.src = srcState;\n  }, [srcState, onLoadImage]);\n  React.useEffect(function () {\n    loadImage(src);\n  }, [loadImage, src]);\n  var style = src ? {\n    backgroundImage: \"url(\".concat(src, \")\"),\n    width: '70px',\n    height: '70px',\n    backgroundSize: 'cover'\n  } : undefined;\n  return __jsx(\"div\", {\n    className: \"exampleImage\",\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 10\n    }\n  });\n}\n\n_s(ImageCell, \"eR6xrBC2flAmNvl1OZjhgEQd3qI=\");\n\n_c = ImageCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageCell\");","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/components/Tables/ImageCell.js"],"names":["React","PendingPool","ReadyPool","ImageCell","src","useState","srcState","setSrcState","onLoadImage","useCallback","source","loadImage","push","img","Image","onload","forEach","callback","undefined","useEffect","style","backgroundImage","width","height","backgroundSize"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,WAAW,GAAG,EAApB;AACA,IAAMC,SAAS,GAAG,EAAlB;AAEA,eAAe,SAASC,SAAT,OAA4B;AAAA;;AAAA,MAAPC,GAAO,QAAPA,GAAO;;AAAA,wBACTJ,KAAK,CAACK,QAAN,CAAe,KAAf,CADS;AAAA;AAAA,MAClCC,QADkC;AAAA,MACxBC,WADwB;;AAGzC,MAAMC,WAAW,GAAGR,KAAK,CAACS,WAAN,CAClB,UAACC,MAAD,EAAY;AACVR,IAAAA,SAAS,CAACE,GAAD,CAAT,GAAiB,IAAjB;;AACA,QAAIM,MAAM,KAAKN,GAAf,EAAoB;AAClBG,MAAAA,WAAW,CAACG,MAAD,CAAX;AACD;AACF,GANiB,EAOlB,CAACN,GAAD,CAPkB,CAApB;AASA,MAAMO,SAAS,GAAGX,KAAK,CAACS,WAAN,CAChB,UAACL,GAAD,EAAS;AACP,QAAIF,SAAS,CAACE,GAAD,CAAb,EAAoB;AAClBG,MAAAA,WAAW,CAACH,GAAD,CAAX;AACA;AACD;;AAED,QAAIH,WAAW,CAACG,GAAD,CAAf,EAAsB;AACpBH,MAAAA,WAAW,CAACG,GAAD,CAAX,CAAiBQ,IAAjB,CAAsBJ,WAAtB;AACA;AACD;;AACDP,IAAAA,WAAW,CAACG,GAAD,CAAX,GAAmB,CAACI,WAAD,CAAnB;AAEA,QAAMK,GAAG,GAAG,IAAIC,KAAJ,EAAZ;;AACAD,IAAAA,GAAG,CAACE,MAAJ,GAAa,YAAM;AACjBd,MAAAA,WAAW,CAACG,GAAD,CAAX,CAAiBY,OAAjB,CAAyB,UAACC,QAAD,EAAc;AACrCA,QAAAA,QAAQ,CAACb,GAAD,CAAR;AACD,OAFD;AAGA,aAAOH,WAAW,CAACG,GAAD,CAAlB;AACAS,MAAAA,GAAG,CAACE,MAAJ,GAAa,IAAb;AACAX,MAAAA,GAAG,GAAGc,SAAN;AACD,KAPD;;AAQAL,IAAAA,GAAG,CAACT,GAAJ,GAAUE,QAAV;AACD,GAvBe,EAwBhB,CAACA,QAAD,EAAWE,WAAX,CAxBgB,CAAlB;AA0BAR,EAAAA,KAAK,CAACmB,SAAN,CAAgB,YAAM;AACpBR,IAAAA,SAAS,CAACP,GAAD,CAAT;AACD,GAFD,EAEG,CAACO,SAAD,EAAYP,GAAZ,CAFH;AAGA,MAAMgB,KAAK,GAAGhB,GAAG,GACb;AACEiB,IAAAA,eAAe,gBAASjB,GAAT,MADjB;AAEEkB,IAAAA,KAAK,EAAE,MAFT;AAGEC,IAAAA,MAAM,EAAE,MAHV;AAIEC,IAAAA,cAAc,EAAE;AAJlB,GADa,GAObN,SAPJ;AAQA,SAAO;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,KAAK,EAAEE,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;;GAlDuBjB,S;;KAAAA,S","sourcesContent":["import React from 'react';\n\nconst PendingPool = {};\nconst ReadyPool = {};\n\nexport default function ImageCell({ src }) {\n  const [srcState, setSrcState] = React.useState(false);\n\n  const onLoadImage = React.useCallback(\n    (source) => {\n      ReadyPool[src] = true;\n      if (source === src) {\n        setSrcState(source);\n      }\n    },\n    [src]\n  );\n  const loadImage = React.useCallback(\n    (src) => {\n      if (ReadyPool[src]) {\n        setSrcState(src);\n        return;\n      }\n\n      if (PendingPool[src]) {\n        PendingPool[src].push(onLoadImage);\n        return;\n      }\n      PendingPool[src] = [onLoadImage];\n\n      const img = new Image();\n      img.onload = () => {\n        PendingPool[src].forEach((callback) => {\n          callback(src);\n        });\n        delete PendingPool[src];\n        img.onload = null;\n        src = undefined;\n      };\n      img.src = srcState;\n    },\n    [srcState, onLoadImage]\n  );\n  React.useEffect(() => {\n    loadImage(src);\n  }, [loadImage, src]);\n  const style = src\n    ? {\n        backgroundImage: `url(${src})`,\n        width: '70px',\n        height: '70px',\n        backgroundSize: 'cover',\n      }\n    : undefined;\n  return <div className=\"exampleImage\" style={style} />;\n}\n"]},"metadata":{},"sourceType":"module"}