{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { fakedata } from './config';\nvar cardActions = {\n  CHANGE_CARDS: 'CHANGE_CARDS',\n  addCard: function addCard(card) {\n    return function (dispatch, getState) {\n      var cards = [card].concat(_toConsumableArray(getState().Cards.cards));\n      dispatch({\n        type: cardActions.CHANGE_CARDS,\n        cards: cards\n      });\n    };\n  },\n  editCard: function editCard(_editCard) {\n    return function (dispatch, getState) {\n      var oldCards = getState().Cards.cards;\n      var cards = [];\n      oldCards.forEach(function (card) {\n        if (card.id !== _editCard.id) {\n          cards.push(card);\n        } else {\n          cards.push(_editCard);\n        }\n      });\n      dispatch({\n        type: cardActions.CHANGE_CARDS,\n        cards: cards\n      });\n    };\n  },\n  deleteCard: function deleteCard(deletedCard) {\n    return function (dispatch, getState) {\n      var oldCards = getState().Cards.cards;\n      var cards = [];\n      oldCards.forEach(function (card) {\n        if (card.id !== deletedCard.id) {\n          cards.push(card);\n        }\n      });\n      dispatch({\n        type: cardActions.CHANGE_CARDS,\n        cards: cards\n      });\n    };\n  },\n  restoreCards: function restoreCards() {\n    return {\n      type: cardActions.CHANGE_CARDS,\n      cards: fakedata\n    };\n  }\n};\nexport default cardActions;","map":{"version":3,"sources":["/Users/walaa/Desktop/Isomorphic Main/isomorphic/node_modules/@iso/redux/card/actions.js"],"names":["fakedata","cardActions","CHANGE_CARDS","addCard","card","dispatch","getState","cards","Cards","type","editCard","oldCards","forEach","id","push","deleteCard","deletedCard","restoreCards"],"mappings":";AAAA,SAASA,QAAT,QAAyB,UAAzB;AACA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,YAAY,EAAE,cADI;AAElBC,EAAAA,OAAO,EAAE,iBAAAC,IAAI,EAAI;AACf,WAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC7B,UAAMC,KAAK,IAAIH,IAAJ,4BAAaE,QAAQ,GAAGE,KAAX,CAAiBD,KAA9B,EAAX;AACAF,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAER,WAAW,CAACC,YADX;AAEPK,QAAAA,KAAK,EAALA;AAFO,OAAD,CAAR;AAID,KAND;AAOD,GAViB;AAWlBG,EAAAA,QAAQ,EAAE,kBAAAA,SAAQ,EAAI;AACpB,WAAO,UAACL,QAAD,EAAWC,QAAX,EAAwB;AAC7B,UAAMK,QAAQ,GAAGL,QAAQ,GAAGE,KAAX,CAAiBD,KAAlC;AACA,UAAMA,KAAK,GAAG,EAAd;AACAI,MAAAA,QAAQ,CAACC,OAAT,CAAiB,UAAAR,IAAI,EAAI;AACvB,YAAIA,IAAI,CAACS,EAAL,KAAYH,SAAQ,CAACG,EAAzB,EAA6B;AAC3BN,UAAAA,KAAK,CAACO,IAAN,CAAWV,IAAX;AACD,SAFD,MAEO;AACLG,UAAAA,KAAK,CAACO,IAAN,CAAWJ,SAAX;AACD;AACF,OAND;AAOAL,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAER,WAAW,CAACC,YADX;AAEPK,QAAAA,KAAK,EAALA;AAFO,OAAD,CAAR;AAID,KAdD;AAeD,GA3BiB;AA4BlBQ,EAAAA,UAAU,EAAE,oBAAAC,WAAW,EAAI;AACzB,WAAO,UAACX,QAAD,EAAWC,QAAX,EAAwB;AAC7B,UAAMK,QAAQ,GAAGL,QAAQ,GAAGE,KAAX,CAAiBD,KAAlC;AACA,UAAMA,KAAK,GAAG,EAAd;AACAI,MAAAA,QAAQ,CAACC,OAAT,CAAiB,UAAAR,IAAI,EAAI;AACvB,YAAIA,IAAI,CAACS,EAAL,KAAYG,WAAW,CAACH,EAA5B,EAAgC;AAC9BN,UAAAA,KAAK,CAACO,IAAN,CAAWV,IAAX;AACD;AACF,OAJD;AAKAC,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAER,WAAW,CAACC,YADX;AAEPK,QAAAA,KAAK,EAALA;AAFO,OAAD,CAAR;AAID,KAZD;AAaD,GA1CiB;AA2ClBU,EAAAA,YAAY,EAAE,wBAAM;AAClB,WAAO;AACLR,MAAAA,IAAI,EAAER,WAAW,CAACC,YADb;AAELK,MAAAA,KAAK,EAAEP;AAFF,KAAP;AAID;AAhDiB,CAApB;AAkDA,eAAeC,WAAf","sourcesContent":["import { fakedata } from './config';\nconst cardActions = {\n  CHANGE_CARDS: 'CHANGE_CARDS',\n  addCard: card => {\n    return (dispatch, getState) => {\n      const cards = [card, ...getState().Cards.cards];\n      dispatch({\n        type: cardActions.CHANGE_CARDS,\n        cards,\n      });\n    };\n  },\n  editCard: editCard => {\n    return (dispatch, getState) => {\n      const oldCards = getState().Cards.cards;\n      const cards = [];\n      oldCards.forEach(card => {\n        if (card.id !== editCard.id) {\n          cards.push(card);\n        } else {\n          cards.push(editCard);\n        }\n      });\n      dispatch({\n        type: cardActions.CHANGE_CARDS,\n        cards,\n      });\n    };\n  },\n  deleteCard: deletedCard => {\n    return (dispatch, getState) => {\n      const oldCards = getState().Cards.cards;\n      const cards = [];\n      oldCards.forEach(card => {\n        if (card.id !== deletedCard.id) {\n          cards.push(card);\n        }\n      });\n      dispatch({\n        type: cardActions.CHANGE_CARDS,\n        cards,\n      });\n    };\n  },\n  restoreCards: () => {\n    return {\n      type: cardActions.CHANGE_CARDS,\n      cards: fakedata,\n    };\n  },\n};\nexport default cardActions;\n"]},"metadata":{},"sourceType":"module"}